<?xml version='1.0'?>
<doc>
	<assembly>
		<name>Unigine</name>
	</assembly>
	<members>
		<member name="M:Unigine.IG.IGConfig.setValue(char,int)">
			<summary>
			Sets the value for the specified parameter.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Integer value to be set. </param> 
		</member>
		<member name="M:Unigine.IG.IGConfig.setValue(char,float)">
			<summary>
			Sets the value for the specified parameter.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Float value to be set. </param> 
		</member>
		<member name="M:Unigine.IG.IGConfig.setValue(char,char)">
			<summary>
			Sets the value for the specified parameter.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> String value to be set. </param> 
		</member>
		<member name="M:Unigine.IG.IGConfig.setValue(char,double)">
			<summary>
			Sets the value for the specified parameter.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value. </param> 
		</member>
		<member name="M:Unigine.IG.IGConfig.getValue(char,int) const">
			<summary>
			Returns the value of the specified parameter. If this parameter has not been specified in the ig_config.xml file, default_value is set for this parameter.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="default_value"> A value to be set if the parameter is not specified in the ig_config.xml file. </param> 
			<returns>Parameter value.</returns>
		</member>
		<member name="M:Unigine.IG.IGConfig.getValue(char,float) const">
			<summary>
			Returns the value of the specified parameter. If this parameter has not been specified in the ig_config.xml file, default_value is set for this parameter.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="default_value"> A value to be set if the parameter is not specified in the ig_config.xml file. </param> 
			<returns>Parameter value.</returns>
		</member>
		<member name="M:Unigine.IG.IGConfig.getValue(char,char) const">
			<summary>
			Returns the value of the specified parameter. If this parameter has not been specified in the ig_config.xml file, default_value is set for this parameter.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="default_value"> A value to be set if the parameter is not specified in the ig_config.xml file. </param> 
			<returns>Parameter value.</returns>
		</member>
		<member name="M:Unigine.IG.IGConfig.getValue(char,double) const">
			<summary>
			Returns the value for the specified parameter. If this parameter has not been specified in the ig_config.xml file, default_value is set for this parameter.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="default_value"> A value to be set if the parameter is not specified in the ig_config.xml file. </param> 
			<returns>Parameter value.</returns>
		</member>
		<member name="M:Unigine.IG.IGConfig.getPath const">
			<summary>
			Returns the path to the current ig_config.xml file.
			</summary>  
			<returns>Path to the ig_config.xml file.</returns>
		</member>
		<member name="M:Unigine.IG.IGConfig.load(char)">
			<summary>
			Loads IG configuration from a file with the specified name.
			</summary> 
			<param name="filename"> Path to the IG configuration file. </param> 
			<returns>true if the IG configuration is successfully loaded from the specified file; otherwise, false.</returns>
		</member>
		<member name="M:Unigine.IG.IGConfig.save(char)">
			<summary>
			Saves the IG configuration to the specified file.
			</summary> 
			<param name="filename"> Path to a file to save the IG configuration to. </param> 
			<returns>true if the IG configuration is successfully saved to the specified file; otherwise, false.</returns>
		</member>
		<member name="M:Unigine.IG.IGConfig.save">
			<summary>
			Saves the IG configuration to the current file.
			</summary>  
			<returns>true if the IG configuration is successfully saved; otherwise, false.</returns>
		</member>
		<member name="M:Unigine.IG.IGConfig.reload">
			<summary>
			Reloads the IG configuration.
			</summary>  
			<returns>true if the IG configuration is successfully reloaded; otherwise, false.</returns>
		</member>
		<member name="M:Unigine.IG.IGConfig.removeVariable(char)">
			<summary>
			Removes the specified variable from the configuration file.
			</summary> 
			<param name="name"> Name of the variable to be removed. </param> 
		</member>
		<member name="M:Unigine.IG.IGConfig.isVariableExist(char) const">
			<summary>
			Returns a value indicating if a variable with the specified name exists.
			</summary> 
			<param name="name"> Name of the variable. </param> 
			<returns>true if a variable with the specified name exists; otherwise, false.</returns>
		</member>
		<member name="M:Unigine.IG.IGConfig.getEntityTypeNames const">
			<summary>
			Returns the list of available type names (type_name -&gt; type_id).
			</summary>  
			<returns>List of available type names (type_name -&gt; type_id).</returns>
		</member>
		<member name="M:Unigine.IG.IGConfig.getEntityTypes">
			<summary>
			Returns the list of available types (type_id -&gt; EntityTypeDef).
			</summary>  
			<returns>List of available types (type_id -&gt; EntityTypeDef).</returns>
		</member>
		<member name="M:Unigine.IG.IGConfig.getDatabases">
			<summary>
			Returns the list of available worlds (id -&gt; DatabaseDef).
			</summary>  
			<returns>List of available worlds (id -&gt; DatabaseDef).</returns>
		</member>
		<member name="M:Unigine.IG.IGConfig.getViewTypes">
			<summary>
			Returns the list of available camera post effects (id -&gt; ViewTypeDef).
			</summary>  
			<returns>List of available camera post effects (id -&gt; ViewTypeDef).</returns>
		</member>
		<member name="M:Unigine.IG.IGConfig.getCloudTypes">
			<summary>
			Returns the list of available cloud types (id -&gt; CloudTypeDef).
			</summary>  
			<returns>List of available cloud types (id -&gt; CloudTypeDef).</returns>
		</member>
		<member name="M:Unigine.IG.IGConfig.getSynckerChannels">
			<summary>
			Returns the list of available Syncker channels (id -&gt; SynckerChannelDef).
			</summary>  
			<returns>List of available Syncker channels (id -&gt; SynckerChannelDef).</returns>
		</member>
		<member name="M:Unigine.IG.IGConfig.getPrecipitationTypes">
			<summary>
			Returns the list of available precipitation types (id -&gt; PrecipitationTypeDef).
			</summary>  
			<returns>List of available precipitation types (id -&gt; PrecipitationTypeDef).</returns>
		</member>
		<member name="F:Unigine.IG.IGConfig.ITEM_TYPE_STRING">
			<summary>
			The parameter type is a string.
		</summary>
		</member>
		<member name="F:Unigine.IG.IGConfig.ITEM_TYPE_DOUBLE">
			<summary>
			The parameter type is a double.
		</summary>
		</member>
		<member name="F:Unigine.IG.IGConfig.ITEM_TYPE_FLOAT">
			<summary>
			The parameter type is a float.
		</summary>
		</member>
		<member name="F:Unigine.IG.IGConfig.ITEM_TYPE_INT">
			<summary>
			The parameter type is an integer.
		</summary>
		</member>
		<member name="F:Unigine.IG.IGConfig.ITEM_TYPE_UNKNOWN">
			<summary>
			The parameter type has not been defined.
		</summary>
		</member>
	</members>
</doc>
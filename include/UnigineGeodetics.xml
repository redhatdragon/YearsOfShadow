<?xml version='1.0'?>
<doc>
	<assembly>
		<name>Unigine</name>
	</assembly>
	<members>
		<member name="M:Unigine.GeodeticPivot.#ctor">
			<summary>
			GeodeticPivot constructor. Creates a GeodeticPivot instance with the default settings:											The origin is set to dvec3(0.0,0.0,0.0).						The size of the curving region is 2048000Ã—2048000 km.						The resolution of the region texture is 2048.
			</summary>  
		</member>
		<member name="M:Unigine.GeodeticPivot.setEllipsoid(Unigine.Ptr{Unigine.Ellipsoid})">
			<summary>
			Sets an Ellipsoid to be used for the Geodetic Pivot.
								Modifying the ellipsoid of the Geodetic Pivot directly makes the pivot's state inconsistent. You should force the GeodeticPivot node to update its internal state according to the modified ellipsoid by setting it via the setEllipsoid() method.
			</summary> 
			<param name="ellipsoid"> Ellipsoid to be set. </param> 
		</member>
		<member name="M:Unigine.GeodeticPivot.getEllipsoid">
			<summary>
			Returns the Ellipsoid currently used by the Geodetic Pivot.
								Modifying the ellipsoid of the Geodetic Pivot directly makes the pivot's state inconsistent. You should force the GeodeticPivot node to update its internal state according to the modified ellipsoid by setting it via the setEllipsoid() method.
			</summary>  
			<returns>Ellipsoid currently used by the Geodetic Pivot.</returns>
		</member>
		<member name="M:Unigine.GeodeticPivot.setOrigin(Unigine.Math.dvec3)">
			<summary>
			Sets a new position (latitude, longitude and altitude) on the ellipsoid.
			</summary> 
			<param name="origin"> Origin vector in ellipsoid coordinates. </param> 
		</member>
		<member name="M:Unigine.GeodeticPivot.getOrigin">
			<summary>
			Returns the position (latitude, longitude and altitude) on the ellipsoid.
			</summary>  
			<returns>Origin vector in ellipsoid coordinates.</returns>
		</member>
		<member name="M:Unigine.GeodeticPivot.setOriginBasis(int)">
			<summary>
			Sets a new origin basis for the GeodeticPivot object:											If ORIGIN_BASIS_LOCAL is set, the binding to geo-coordinates is disabled. GeodeticPivot can be placed everywhere.						If ORIGIN_BASIS_ENU is set, GeodeticPivot is placed to the world ECF position with ENU (East - North - Up) orientation according to the given latitude / longitude / altitude. The GeodeticPivot position is blocked.							The Up-axis (Z+) direction in ENU points upward along the ellipsoid normal, while in UNIGINE implementation of ENU it goes from the Earth's center.
			</summary> 
			<param name="basis"> One of the ORIGIN_BASIS_* variables. </param> 
		</member>
		<member name="M:Unigine.GeodeticPivot.getOriginBasis">
			<summary>
			Returns the origin basis set for the GeodeticPivot object:											If ORIGIN_BASIS_LOCAL is set, the binding to geo-coordinates is disabled. GeodeticPivot can be placed everywhere.						If ORIGIN_BASIS_ENU is set, GeodeticPivot is placed to the world ECF position with ENU (East - North - Up) orientation according to the given latitude / longitude / altitude. The GeodeticPivot position is blocked.							The Up-axis (Z+) direction in ENU points upward along the ellipsoid normal, while in UNIGINE implementation of ENU it goes from the Earth's center.
			</summary>  
			<returns>One of the ORIGIN_BASIS_* variables.</returns>
		</member>
		<member name="M:Unigine.GeodeticPivot.mapEllipsoidToFlat(Unigine.Math.vec3,Unigine.Math.vec3,Unigine.Math.vec3)">
			<summary>
			Maps ellipsoid coordinates of a point to flat plane coordinates (using latitude and longitude as X and Y coordinates and altitude as Z).
			</summary> 
			<param name="ellipsoid_point"> Ellipsoid coordinates of the point </param>
			<param name="ret_flat_point"> Flat plane coordinates of the point. </param>
			<param name="ret_ellipsoid_normal"> Ellipsoid point normal coordinates. </param> 
		</member>
		<member name="M:Unigine.GeodeticPivot.mapEllipsoidToFlat(Unigine.Math.dvec3,Unigine.Math.dvec3,Unigine.Math.dvec3)">
			<summary>
			Maps ellipsoid coordinates of a point to flat plane coordinates (using latitude and longitude as X and Y coordinates and altitude as Z).
			</summary> 
			<param name="ellipsoid_point"> Ellipsoid coordinates of the point </param>
			<param name="ret_flat_point"> Flat plane coordinates of the point. </param>
			<param name="ret_ellipsoid_normal"> Ellipsoid point normal coordinates. </param> 
		</member>
		<member name="M:Unigine.GeodeticPivot.mapEllipsoidToFlat(Unigine.Math.mat4)">
			<summary>
			Maps ellipsoid transformation to the flat plane transformation (using latitude and longitude as X and Y coordinates and altitude as Z).
			</summary> 
			<param name="ellipsoid_transform"> Ellipsoid transformation. </param> 
			<returns>Flat plane transformation.</returns>
		</member>
		<member name="M:Unigine.GeodeticPivot.mapEllipsoidToFlat(Unigine.Math.dmat4)">
			<summary>
			Maps ellipsoid transformation to the flat plane transformation (using latitude and longitude as X and Y coordinates and altitude as Z).
			</summary> 
			<param name="ellipsoid_transform"> Ellipsoid transformation. </param> 
			<returns>Flat plane transformation.</returns>
		</member>
		<member name="M:Unigine.GeodeticPivot.mapFlatToEllipsoid(Unigine.Math.vec3,Unigine.Math.vec3,Unigine.Math.vec3)">
			<summary>
			Maps flat plane coordinates to the ellipsoid (uses X and Y coordinates as latitude and longitude, and Z as altitude).
			</summary> 
			<param name="flat_point"> Flat plane coordinates of the point. </param>
			<param name="ret_ellipsoid_point"> Ellipsoid coordinates of the point </param>
			<param name="ret_ellipsoid_normal"> Ellipsoid point normal coordinates. </param> 
		</member>
		<member name="M:Unigine.GeodeticPivot.mapFlatToEllipsoid(Unigine.Math.dvec3,Unigine.Math.dvec3,Unigine.Math.dvec3)">
			<summary>
			Maps flat plane coordinates to the ellipsoid (uses X and Y coordinates as latitude and longitude, and Z as altitude).
			</summary> 
			<param name="flat_point"> Flat plane coordinates of the point. </param>
			<param name="ret_ellipsoid_point"> Ellipsoid coordinates of the point </param>
			<param name="ret_ellipsoid_normal"> Ellipsoid point normal coordinates. </param> 
		</member>
		<member name="M:Unigine.GeodeticPivot.mapFlatToEllipsoid(Unigine.Math.mat4)">
			<summary>
			Maps flat plane transformation to the ellipsoid transformation (uses X and Y coordinates as latitude and longitude, and Z as altitude).
			</summary> 
			<param name="flat_transform"> Flat plane transformation. </param> 
			<returns>Ellipsoid transformation.</returns>
		</member>
		<member name="M:Unigine.GeodeticPivot.mapFlatToEllipsoid(Unigine.Math.dmat4)">
			<summary>
			Maps flat plane transformation to the ellipsoid transformation (uses X and Y coordinates as latitude and longitude, and Z as altitude).
			</summary> 
			<param name="flat_transform"> Flat plane transformation. </param> 
			<returns>Ellipsoid transformation.</returns>
		</member>
		<member name="M:Unigine.GeodeticPivot.mapFlatToGeodetic(Unigine.Math.dvec3)">
			<summary>
			Maps flat plane coordinates to geodetic latitude / longitude / altitude coordinates according to pivot's origin.
			</summary> 
			<param name="flat_point"> Flat plane coordinates. </param> 
			<returns>Geodetic coordinates.</returns>
		</member>
		<member name="M:Unigine.GeodeticPivot.mapFlatToGeodetic(Unigine.Math.vec3)">
			<summary>
			Maps flat plane coordinates to geodetic latitude / longitude / altitude coordinates according to pivot's origin.
			</summary> 
			<param name="flat_point"> Flat plane coordinates. </param> 
			<returns>Geodetic coordinates.</returns>
		</member>
		<member name="M:Unigine.GeodeticPivot.mapFlatsToGeodetic(double,double,int,double,double)">
			<summary>
			Pefrorms batch mapping of flat plane coordinates to geodetic latitude / longitude coordinates according to pivot's origin and puts the result to the corresponding output arrays.
			</summary> 
			<param name="src_x"> Array of flat plane X coordinates. </param>
			<param name="src_y"> Array of flat plane Y coordinates. </param>
			<param name="size"> Array size. </param>
			<param name="ret_lat"> Output array of geodetic latitude coordinates. </param>
			<param name="ret_lon"> Output array of geodetic longitude coordinates. </param> 
		</member>
		<member name="M:Unigine.GeodeticPivot.mapGeodeticToFlat(Unigine.Math.dvec3)">
			<summary>
			Maps geodetic latitude / longitude / altitude coordinates to flat plane coordinates according to pivot's latitude / longitude / altitude origin.
			</summary> 
			<param name="geodetic_coords"> Geodetic coordinates. </param> 
			<returns>Flat plane coordinates.</returns>
		</member>
		<member name="M:Unigine.GeodeticPivot.mapGeodeticsToFlat(double,double,int,double,double)">
			<summary>
			Pefrorms batch mapping of geodetic latitude / longitude coordinates to flat plane coordinates according to pivot's latitude / longitude origin and puts the result to the corresponding output arrays.
			</summary> 
			<param name="lat"> Array of geodetic latitude coordinates. </param>
			<param name="lon"> Array of geodetic longitude coordinates. </param>
			<param name="size"> Array size. </param>
			<param name="ret_x"> Output array of flat plane X coordinates. </param>
			<param name="ret_y"> Output array of flat plane Y coordinates. </param> 
		</member>
		<member name="M:Unigine.GeodeticPivot.mapMeshEllipsoidToFlat(Unigine.Ptr{Unigine.Mesh},Unigine.Math.mat4)">
			<summary>
			Maps a curved mesh to the flat plane (using latitude / longitude / altitude as X / Y / Z coordinates).
			</summary> 
			<param name="mesh"> Mesh to be mapped. </param>
			<param name="ellipsoid_transform"> Mesh ellipsoid transformation. </param> 
			<returns>Position on the flat plane, where the node is to be placed.</returns>
		</member>
		<member name="M:Unigine.GeodeticPivot.mapMeshEllipsoidToFlat(Unigine.Ptr{Unigine.Mesh},Unigine.Math.dmat4)">
			<summary>
			Maps a curved mesh to the flat plane (using latitude / longitude / altitude as X / Y / Z coordinates).
			</summary> 
			<param name="mesh"> Mesh to be mapped. </param>
			<param name="ellipsoid_transform"> Mesh ellipsoid transformation. </param> 
			<returns>Position on the flat plane, where the node is to be placed.</returns>
		</member>
		<member name="M:Unigine.GeodeticPivot.mapMeshFlatToEllipsoid(Unigine.Ptr{Unigine.Mesh},Unigine.Math.mat4)">
			<summary>
			Maps a flat mesh to the ellipsoid (uses X and Y coordinates as latitude and longitude, and Z as altitude).
			</summary> 
			<param name="mesh"> Mesh to be mapped. </param>
			<param name="flat_transform"> Mesh flat plane transformation. </param> 
			<returns>Position on the ellipsoid, where the node is to be placed.</returns>
		</member>
		<member name="M:Unigine.GeodeticPivot.mapMeshFlatToEllipsoid(Unigine.Ptr{Unigine.Mesh},Unigine.Math.dmat4)">
			<summary>
			Maps a flat mesh to the ellipsoid (uses X and Y coordinates as latitude and longitude, and Z as altitude).
			</summary> 
			<param name="mesh"> Mesh to be mapped. </param>
			<param name="flat_transform"> Mesh flat plane transformation. </param> 
			<returns>Position on the ellipsoid, where the node is to be placed.</returns>
		</member>
		<member name="M:Unigine.GeodeticPivot.toGeodetic(Unigine.Math.mat4)">
			<summary>
			Returns geodetic coordinates for a given world transformation matrix.
			</summary> 
			<param name="world_transform"> World transformation. </param> 
			<returns>Geodetic coordinates.</returns>
		</member>
		<member name="M:Unigine.GeodeticPivot.toGeodetic(Unigine.Math.dmat4)">
			<summary>
			Returns geodetic coordinates for a given world transformation matrix.
			</summary> 
			<param name="world_transform"> World transformation. </param> 
			<returns>Geodetic coordinates.</returns>
		</member>
		<member name="M:Unigine.GeodeticPivot.toWorld(Unigine.Math.dvec3)">
			<summary>
			Returns world transformation matrix for given geodetic coordinates.
			</summary> 
			<param name="geodetic_coords"> Geodetic coordinates. </param> 
			<returns>World transformation.</returns>
		</member>
		<member name="M:Unigine.GeodeticPivot.toWorldPreserveRotation(Unigine.Math.mat4,Unigine.Math.dvec3)">
			<summary>
			Returns new world transformation matrix preserving rotation relative to normal.
			</summary> 
			<param name="world_transform"> World transformation. </param>
			<param name="geodetic_coords"> Geodetic coordinates. </param> 
			<returns>New world transformation.</returns>
		</member>
		<member name="M:Unigine.GeodeticPivot.toWorldPreserveRotation(Unigine.Math.dmat4,Unigine.Math.dvec3)">
			<summary>
			Returns new world transformation matrix preserving rotation relative to normal.
			</summary> 
			<param name="world_transform"> World transformation. </param>
			<param name="geodetic_coords"> Geodetic coordinates. </param> 
			<returns>New world transformation.</returns>
		</member>
		<member name="M:Unigine.GeodeticPivot.type">
			<summary>
			Returns the type of the object.
			</summary>  
			<returns>GeodeticPivot type identifier.</returns>
		</member>
		<member name="F:Unigine.GeodeticPivot.ORIGIN_BASIS_ENU">
			<summary>
			The origin basis East - North - Up (Earth-Centric) is used for the GeodeticPivot object. It is used to place the pivot to the world ECF position with ENU orientation according to latitude / longitude / altitude. The position of the GeodeticPivot object is blocked when this basis is used.The Up-axis (Z+) direction in ENU points upward along the ellipsoid normal, while in UNIGINE implementation of ENU it goes from the Earth's center.
		</summary>
		</member>
		<member name="F:Unigine.GeodeticPivot.ORIGIN_BASIS_LOCAL">
			<summary>
			The local (X - Y - Z) origin basis is used for the GeodeticPivot object. The pivot doesn't bind to geo-coordinates and can be placed anywhere.
		</summary>
		</member>
	</members>
</doc>
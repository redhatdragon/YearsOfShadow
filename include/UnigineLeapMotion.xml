<?xml version='1.0'?>
<doc>
	<assembly>
		<name>Unigine</name>
	</assembly>
	<members>
		<member name="M:Unigine.Plugins.LeapMotion.get">
			<summary>
			Returns a pointer to the LeapMotion plugin interface.
			</summary>  
			<returns>Pointer to LeapMotion.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.isConnected">
			<summary>
			Returns a value indicating if the LeapMotion device is connected.
			</summary>  
			<returns>true if the LeapMotion device is connected; otherwise, false.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.isServiceConnected">
			<summary>
			Returns a value indicating if your application has a connection to the Leap Motion daemon/service.					Can return true even if the Leap Motion hardware is not available. To check if the hardware is connected, use the isConnected() method.
			</summary>  
			<returns>true if your application has a connection to the Leap Motion daemon/service; otherwise, false.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.isSmudged">
			<summary>
			Returns a value indicating if a possible smudge on the translucent cover over the Leap Motion cameras was detected.
			</summary>  
			<returns>true if a possible smudge on the translucent cover over the Leap Motion cameras was detected; otherwise, false.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.isLightingBad">
			<summary>
			Returns a value indicating if the excessive IR illumination was detected.
			</summary>  
			<returns>true if the excessive IR illumination was detected; otherwise, false.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.hasFocus">
			<summary>
			Returns a value indicating if the application is the focused (foreground) application.					By default, your application only receives tracking information from the Leap Motion controller when it has the operating system input focus. To receive tracking data when your application is in the background, the background frames policy flag must be set.
			</summary>  
			<returns>true if the application is the focused (foreground) application; otherwise, false.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.setPolicy(int)">
			<summary>
			Requests setting the specified policy. A request to change a policy is subject to user approval and a policy can be changed by the user at any time (using the Leap Motion settings dialog).					The desired policy flags must be set every time an application runs.
			</summary> 
			<param name="policy"> Policy. One of the POLICY_* values. </param> 
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.isPolicySet(int)">
			<summary>
			Returns a value indicating if the specified policy is set. To set a policy use the setPolicy() method.
			</summary> 
			<param name="policy"> Policy type. One of the POLICY_* values. </param> 
			<returns>true if the specified policy is set; otherwise, false.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.clearPolicy(int)">
			<summary>
			Requests clearing the specified policy. A request to change a policy is subject to user approval and a policy can be changed by the user at any time (using the Leap Motion settings dialog).					The required policy flags must be set every time an application runs.
			</summary> 
			<param name="policy"> Policy. One of the POLICY_* values. </param> 
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.setPaused(bool)">
			<summary>
			Pauses or resumes the Leap Motion service.
			</summary> 
			<param name="pause"> true - to pause the Leap Motion service; false - to resume it. </param> 
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.isPaused">
			<summary>
			Returns a value indicating if the Leap Motion service is currently paused.
			</summary>  
			<returns>true if the Leap Motion service is currently paused; otherwise, false.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.getHorizontalViewAngle">
			<summary>
			Returns the angle of view along the X axis (long dimension) of the Leap Motion device. The Leap Motion controller scans a region in the shape of an inverted pyramid centered at the device’s center and extending upwards.
			</summary>  
			<returns>Angle of view along the X axis of the Leap Motion device, in degrees.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.getVerticalViewAngle">
			<summary>
			Returns the angle of view along the Z axis (short dimension) of the Leap Motion device. The Leap Motion controller scans a region in the shape of an inverted pyramid centered at the device’s center and extending upwards.
			</summary>  
			<returns>Angle of view along the Z axis of the Leap Motion device, in degrees.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.getRange">
			<summary>
			Returns the maximum recommended distance from the device center for which tracking is expected to be reliable.					This distance is not a hard limit. Tracking may be still be functional above this distance or begin to degrade slightly before this distance depending on calibration and extreme environmental conditions.
			</summary>  
			<returns>Maximum reliable tracking range from the center of this device, in meters.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.getBaseline">
			<summary>
			Returns the distance between the center points of the stereo cameras of the Leap Motion device.
			</summary>  
			<returns>Distance between the center points of the stereo cameras of the Leap Motion device, in meters.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.getFPS">
			<summary>
			Returns the current framerate.
			</summary>  
			<returns>Current framerate.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.getDistanceToBoundary(Unigine.vec3)">
			<summary>
			Returns the distance from the specified point to the nearest edge of the Leap Motion controller's view volume. The view volume is an axis-aligned, inverted pyramid centered on the device origin and extending upward to the range limit. The walls of the pyramid are described by the horizontalViewAngle and verticalViewAngle and the roof by the range.
			</summary> 
			<param name="position"> Point to measure the distance from. </param> 
			<returns>Distance from the specified point to the nearest edge of the Leap Motion controller’s view volume, in meters.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.getImages">
			<summary>
			Returns the list of the most recent images from the infrared stereo cameras of the device. Images are in the Image::FORMAT_R8. The images can be used for:											Head-mounted display video pass-through						Augmented reality						Computer vision
			</summary>  
			<returns>Vector containing images from the cameras.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.getNumImages">
			<summary>
			Returns the number of images stored in the list of the most recent images from the infrared stereo cameras of the device. Images are in the Image::FORMAT_R8.
			</summary>  
			<returns>Number of images stored in the array.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.getImage(int)">
			<summary>
			Returns the selected image from the list of the most recent images from the infrared stereo cameras of the device. Images are in the Image::FORMAT_R8.
			</summary> 
			<param name="num"> Index number of the image in the array. </param> 
			<returns>Selected image from the cameras.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.saveHandsToStream(Unigine.Ptr{Unigine.Stream})">
			<summary>
			Saves hands to the indicated stream.
			</summary> 
			<param name="dest_stream"> Destination stream. </param> 
		</member>
		<member name="F:Unigine.Plugins.LeapMotion.POLICY_DEFAULT">
			<summary>
			Default policy flag. Enables default policy settings.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.LeapMotion.POLICY_BACKGROUND_FRAMES">
			<summary>
			Background frames policy flag. Determines whether an application receives frames of tracking data while in the background.					By default, the Leap Motion software only sends tracking data to the foreground application. Only applications that need this ability should request the background frames policy. The "Allow Background Apps" checkbox must be enabled in the Leap Motion Control Panel or this policy will be denied.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.LeapMotion.POLICY_IMAGES">
			<summary>
			Images policy flag. Enables your application to receive images from the device cameras.					The "Allow Images" checkbox must be enabled in the Leap Motion Control Panel or this policy will be denied.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.LeapMotion.POLICY_OPTIMIZE_HMD">
			<summary>
			HMD optimization policy flag. Enables tracking optimization for head-mounted tracking mode.					This policy improves tracking in situations where the Leap Motion hardware is attached to a head-mounted display. This policy is not granted for devices that cannot be mounted to an HMD, such as Leap Motion controllers embedded in a laptop or keyboard.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.LeapMotion.POLICY_ALLOW_PAUSE_RESUME">
			<summary>
			Pause resume policy flag. Determines if the application is allowed to pause and unpause the Leap Motion service.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.LeapMotion.POLICY_RAW_IMAGES">
			<summary>
			Images policy flag. Enables your application to receive raw images from the device cameras.
		</summary>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.Arm.getWidth">
			<summary>
			Returns the width of the forearm, in meters.
			</summary>  
			<returns>Width of the forearm, in meters.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.Arm.getElbowPosition">
			<summary>
			Returns the coordinates of the elbow position.					All coordinates are relative to the origin of the Leap Motion coordinate system.
			</summary>  
			<returns>Coordinates of the elbow position.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.Arm.getWristPosition">
			<summary>
			Returns the coordinates of the end of the bone, closest to the finger tip (distal).					All coordinates are relative to the origin of the Leap Motion coordinate system.
			</summary>  
			<returns>Coordinates of the wrist position.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.Arm.getCenter">
			<summary>
			Returns the coordinates of the center of the forearm.					All coordinates are relative to the origin of the Leap Motion coordinate system.
			</summary>  
			<returns>Coordinates of the center of the forearm.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.Arm.getDirection">
			<summary>
			Returns the normalized direction in which the arm is pointing (from elbow to wrist).					All coordinates are relative to the origin of the Leap Motion coordinate system.
			</summary>  
			<returns>Normalized direction in which the arm is pointing (from elbow to wrist).</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.Arm.getBasis">
			<summary>
								Returns the orthonormal basis vectors for the arm as a Matrix.					Basis vectors specify the orientation of the arm bone:													X - Perpendicular to the longitudinal axis of the arm bone; exits the arm laterally through the sides of the wrist.							Y (or up vector) - Perpendicular to the longitudinal axis of the arm bone; exits the top and bottom of the arm. Increases in the upward direction.							Z - Aligned with the longitudinal axis of the arm bone. Increases toward the wrist.																The bases provided for the right arm use the right-hand rule; those for the left arm use the left-hand rule. Thus, the positive direction of the x-basis is to the right for the right arm and to the left for the left arm. You can change from right-hand to left-hand rule by multiplying the z basis vector by -1.					You can use the basis vectors for such purposes as measuring complex finger poses and skeletal animation.					Converting the basis vectors directly into a quaternion representation is not mathematically valid. If you use quaternions, create them from the derived rotation matrix not directly from the bases.
			</summary>  
			<returns>Orthonormal basis vectors for the arm bone as a Matrix.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.Arm.isValid">
			<summary>
			Returns a value indicating if the arm contains valid tracking data.
			</summary>  
			<returns>1 if the arm contains valid tracking data; otherwise, 0.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.Bone.getType">
			<summary>
			Returns the type of the bone.
			</summary>  
			<returns>Bone type. One of the Bone::TYPE_* values.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.Bone.getLength">
			<summary>
			Returns the length of the bone.
			</summary>  
			<returns>Length of the bone, in meters.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.Bone.getWidth">
			<summary>
			Returns the width of the bone, in meters.
			</summary>  
			<returns>Width of the bone, in meters.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.Bone.getPrevJoint">
			<summary>
			Returns the coordinates of the end of the bone, closest to the wrist (proximal).					All coordinates are relative to the origin of the Leap Motion coordinate system.
			</summary>  
			<returns>Coordinates of the end of the bone, closest to the wrist (proximal).</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.Bone.getNextJoint">
			<summary>
			Returns the coordinates of the end of the bone, closest to the finger tip (distal).					All coordinates are relative to the origin of the Leap Motion coordinate system.
			</summary>  
			<returns>Coordinates of the end of the bone, closest to the finger tip (distal).</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.Bone.getCenter">
			<summary>
			Returns the coordinates of the center of the bone.					All coordinates are relative to the origin of the Leap Motion coordinate system.
			</summary>  
			<returns>Coordinates of the center of the bone.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.Bone.getDirection">
			<summary>
			Returns the normalized direction of the bone from wrist to tip.					All coordinates are relative to the origin of the Leap Motion coordinate system.
			</summary>  
			<returns>Normalized direction of the bone from wrist to tip.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.Bone.getBasis">
			<summary>
								Returns the orthonormal basis vectors for this Bone as a Matrix.					Basis vectors specify the orientation of a bone:													X - Perpendicular to the longitudinal axis of the bone; exits the sides of the finger.							Y (or up vector) - Perpendicular to the longitudinal axis of the bone; exits the top and bottom of the finger. Increases in the upward direction.							Z - Aligned with the longitudinal axis of the bone. Increases toward the base of the finger.																The bases provided for the right hand use the right-hand rule; those for the left hand use the left-hand rule. Thus, the positive direction of the x-basis is to the right for the right hand and to the left for the left hand. You can change from right-hand to left-hand rule by multiplying the z basis vector by -1.					You can use the basis vectors for such purposes as measuring complex finger poses and skeletal animation.					Converting the basis vectors directly into a quaternion representation is not mathematically valid. If you use quaternions, create them from the derived rotation matrix not directly from the bases.
			</summary>  
			<returns>Orthonormal basis vectors for the bone as a Matrix.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.Bone.isValid">
			<summary>
			Returns a value indicating if the bone contains valid tracking data.
			</summary>  
			<returns>1 if the bone contains valid tracking data; otherwise, 0.</returns>
		</member>
		<member name="F:Unigine.Plugins.LeapMotion.Bone.TYPE_METACARPAL">
			<summary>
			Metacarpal bone. A bone connected to the wrist inside the palm.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.LeapMotion.Bone.TYPE_PROXIMAL">
			<summary>
			Proximal bone. A bone connecting to the palm.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.LeapMotion.Bone.TYPE_INTERMEDIATE">
			<summary>
			Intermediate bone. A bone between the tip and the base.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.LeapMotion.Bone.TYPE_DISTAL">
			<summary>
			Distal bone. A bone at the tip of the finger.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.LeapMotion.Bone.BONE_NUM_TYPES">
			<summary>
			Total number of bone types.
		</summary>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.Finger.getType">
			<summary>
			Returns the type of the finger.
			</summary>  
			<returns>Finger type. One of the Finger::TYPE_* values.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.Finger.getID">
			<summary>
			Returns the ID of the finger.					Finger IDs are assigned based on the hand ID. If a hand has an ID of "5", then its fingers are assigned IDs 50 to 55, ordered from thumb to pinky.
			</summary>  
			<returns>Finger ID.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.Finger.getLength">
			<summary>
			Returns the length of the finger, in meters.
			</summary>  
			<returns>Length of the finger, in meters.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.Finger.getWidth">
			<summary>
			Returns the width of the finger, in meters.
			</summary>  
			<returns>Width of the finger, in meters.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.Finger.getTipPosition">
			<summary>
			Returns the coordinates of the instantaneous position of the finger tip.					All coordinates are relative to the origin of the Leap Motion coordinate system.
			</summary>  
			<returns>Coordinates of the instantaneous position of the finger tip.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.Finger.getStabilizedTipPosition">
			<summary>
			Returns the coordinates of the finger tip position filtered and stabilized using velocity and past positions.					All coordinates are relative to the origin of the Leap Motion coordinate system.
			</summary>  
			<returns>Coordinates of the finger tip position filtered and stabilized using velocity and past positions.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.Finger.getTipVelocity">
			<summary>
			Returns the instantaneous velocity of the finger tip, in m/s.					All coordinates are relative to the origin of the Leap Motion coordinate system.
			</summary>  
			<returns>Instantaneous velocity of the finger tip, in m/s.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.Finger.getDirection">
			<summary>
			Returns the current pointing direction vector of the finger.					All coordinates are relative to the origin of the Leap Motion coordinate system.
			</summary>  
			<returns>Current pointing direction vector of the finger.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.Finger.isExtended">
			<summary>
			Returns a value indicating if the finger is extended.
			</summary>  
			<returns>1 if the finger is extended; otherwise, 0.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.Finger.isValid">
			<summary>
			Returns a value indicating if the finger contains valid tracking data.
			</summary>  
			<returns>1 if the finger contains valid tracking data; otherwise, 0.</returns>
		</member>
		<member name="F:Unigine.Plugins.LeapMotion.Finger.TYPE_THUMB">
			<summary>
			Thumb.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.LeapMotion.Finger.TYPE_INDEX">
			<summary>
			Index finger.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.LeapMotion.Finger.TYPE_MIDDLE">
			<summary>
			Middle finger.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.LeapMotion.Finger.TYPE_RING">
			<summary>
			Ring finger.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.LeapMotion.Finger.TYPE_PINKY">
			<summary>
			Pinky finger.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.LeapMotion.Finger.FINGER_NUM_TYPES">
			<summary>
			Total number of finger types.
		</summary>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.Hand.getID">
			<summary>
			Returns the id of the hand.
			</summary>  
			<returns>ID of the hand</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.Hand.getType">
			<summary>
			Returns the type of the hand.
			</summary>  
			<returns>Type of the hand:0 - left hand1 - right hand</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.Hand.getPalmWidth">
			<summary>
			Returns the width of the palm when the hand is in a flat position, in meters.
			</summary>  
			<returns>Width of the palm when the hand is in a flat position, in meters.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.Hand.getPalmPosition">
			<summary>
			Returns the coordinates of the position of the palm.					All coordinates are relative to the origin of the Leap Motion coordinate system.
			</summary>  
			<returns>Coordinates of the position of the palm.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.Hand.getStabilizedPalmPosition">
			<summary>
			Returns the modified palm position with some additional smoothing and stabilization applied. Smoothing and stabilization is performed in order to make this value more suitable for interaction with 2D content. The stabilized position lags behind the palm position by a variable amount, depending primarily on the speed of movement.					All coordinates are relative to the origin of the Leap Motion coordinate system.
			</summary>  
			<returns>Coordinates of the modified palm position with some additional smoothing and stabilization applied. Smoothing and stabilization is performed in order to make this value more suitable for interaction with 2D content. The stabilized position lags behind the palm position by a variable amount, depending primarily on the speed of movement.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.Hand.getWristPosition">
			<summary>
			Returns the coordinates of the position of the wrist.					All coordinates are relative to the origin of the Leap Motion coordinate system.
			</summary>  
			<returns>Coordinates of the position of the wrist.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.Hand.getPalmVelocity">
			<summary>
			Returns the rate of change of the palm position, in m/s.
			</summary>  
			<returns>Rate of change of the palm position, in m/s.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.Hand.getPalmNormal">
			<summary>
			Returns the coordinates of the normal vector to the palm. If a hand is flat, this vector will point downward, or "out" of the front surface of your palm.					All coordinates are relative to the origin of the Leap Motion coordinate system.
			</summary>  
			<returns>Coordinates of the normal vector to the palm.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.Hand.getDirection">
			<summary>
			Returns the normalized direction from the palm position toward the fingers.					All coordinates are relative to the origin of the Leap Motion coordinate system.
			</summary>  
			<returns>Normalized direction from the palm position toward the fingers.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.Hand.getBasis">
			<summary>
								Returns the orthonormal basis vectors for this Bone as a Matrix.					Basis vectors specify the orientation of a bone:													X - Perpendicular to the longitudinal axis of the bone; exits the sides of the finger.							Y (or up vector) - Perpendicular to the longitudinal axis of the bone; exits the top and bottom of the finger. More positive in the upward direction.							Z - Aligned with the longitudinal axis of the bone. More positive toward the base of the finger.																The bases provided for the right hand use the right-hand rule; those for the left hand use the left-hand rule. Thus, the positive direction of the x-basis is to the right for the right hand and to the left for the left hand. You can change from right-hand to left-hand rule by multiplying the z basis vector by -1.					You can use the basis vectors for such purposes as measuring complex finger poses and skeletal animation.					Converting the basis vectors directly into a quaternion representation is not mathematically valid. If you use quaternions, create them from the derived rotation matrix not directly from the bases.
			</summary>  
			<returns>Orthonormal basis vectors for this Bone as a Matrix.</returns>
		</member>
		<member name="M:Unigine.Plugins.LeapMotion.Hand.isValid">
			<summary>
			Returns a value indicating if the hand contains valid tracking data.
			</summary>  
			<returns>1 if the hand contains valid tracking data; otherwise, 0.</returns>
		</member>
	</members>
</doc>
<?xml version='1.0'?>
<doc>
	<assembly>
		<name>Unigine</name>
	</assembly>
	<members>
		<member name="M:Unigine.Math.dmat4.#ctor(Unigine.dvec3,Unigine.dvec3,Unigine.dvec3,Unigine.dvec3)">
			<summary>
			Constructor. Initializes the matrix using given three dvec3 vectors.
			</summary> 
			<param name="c0"> Source vector for the first column. </param>
			<param name="c1"> Source vector for the second column. </param>
			<param name="c2"> Source vector for the third column. </param>
			<param name="c3"> Source vector for the fourth column. </param> 
		</member>
		<member name="M:Unigine.Math.dmat4.#ctor(Unigine.quat,Unigine.dvec3)">
			<summary>
			Constructor. Initializes the matrix using a given quaternion and a dvec3 vector.
			</summary> 
			<param name="q"> Source quaternion. </param>
			<param name="v"> Source vector. </param> 
		</member>
		<member name="M:Unigine.Math.dmat4.#ctor(mat3,Unigine.dvec3)">
			<summary>
			Constructor. Initializes the matrix using a given source mat3 matrix (3x3) and a dvec3 vector.
			</summary> 
			<param name="m"> Source matrix (3x3). </param>
			<param name="v"> Source vector. </param> 
		</member>
		<member name="M:Unigine.Math.dmat4.#ctor(float,int)">
			<summary>
			Constructor. Initializes the matrix using a given pointer to the source matrix.
			</summary> 
			<param name="m"> Pointer to the source matrix. </param>
			<param name="transpose"> If transpose is 0 (by default), the matrix is specified in the column major style. </param> 
		</member>
		<member name="M:Unigine.Math.dmat4.#ctor(double,int)">
			<summary>
			Constructor. Initializes the matrix using a given pointer to the source matrix.
			</summary> 
			<param name="m"> Pointer to the source matrix. </param>
			<param name="transpose"> If transpose is 0 (by default), the matrix is specified in the column major style. </param> 
		</member>
		<member name="M:Unigine.Math.dmat4.#ctor(mat3)">
			<summary>
			Constructor. Initializes the matrix using a given mat3 source matrix (3x3). The matrix elements are filled using corresponding elements of the source matrix.
			</summary> 
			<param name="m"> Source matrix (3x3). </param> 
		</member>
		<member name="M:Unigine.Math.dmat4.#ctor(mat2)">
			<summary>
			Constructor. Initializes the matrix using a given mat2 source matrix (2x2). The matrix elements are filled using corresponding elements of the source matrix.
			</summary> 
			<param name="m"> Source matrix (2x2). </param> 
		</member>
		<member name="M:Unigine.Math.dmat4.#ctor(double)">
			<summary>
			Constructor. Initializes the matrix using a given scalar value.
			</summary> 
			<param name="v"> Scalar value. </param> 
		</member>
		<member name="M:Unigine.Math.dmat4.#ctor(Unigine.dmat4)">
			<summary>
			Constructor. Initializes the matrix by copying a given source matrix.
			</summary> 
			<param name="m"> Source matrix. </param> 
		</member>
		<member name="M:Unigine.Math.dmat4.#ctor">
			<summary>
			Default constructor. Produces an identity matrix.
			</summary>  
		</member>
		<member name="M:Unigine.Math.dmat4.#ctor(Unigine.mat4)">
			<summary>
			Constructor. Initializes the matrix using a given source mat4 matrix (4x4). The matrix elements are filled using corresponding elements of the source matrix.
			</summary> 
			<param name="m"> Source matrix (4x4). </param> 
		</member>
		<member name="M:Unigine.Math.dmat4.#ctor(Unigine.quat)">
			<summary>
			Constructor. Initializes the matrix using a given source quaternion.
			</summary> 
			<param name="q"> Source quaternion. </param> 
		</member>
		<member name="M:Unigine.Math.dmat4.#ctor(float)">
			<summary>
			Constructor. Initializes the matrix using a given pointer to an array of float elements.
			</summary>  
		</member>
		<member name="M:Unigine.Math.dmat4.#ctor(double,double,double,double,double,double,double,double,double,double,double,double)">
			<summary>
			Constructor. Initializes the matrix using given double elements.
			</summary> 
			<param name="m00_"> 00 element. </param>
			<param name="m10_"> 10 element. </param>
			<param name="m20_"> 20 element. </param>
			<param name="m01_"> 01 element. </param>
			<param name="m11_"> 11 element. </param>
			<param name="m21_"> 21 element. </param>
			<param name="m02_"> 02 element. </param>
			<param name="m12_"> 12 element. </param>
			<param name="m22_"> 22 element. </param>
			<param name="m03_"> 03 element. </param>
			<param name="m13_"> 13 element. </param>
			<param name="m23_"> 23 element. </param> 
		</member>
		<member name="M:Unigine.Math.dmat4.#ctor(double,ConstexprTag)">
			<summary>
			Constructor. Initializes every element of the matrix with the given double element.
			</summary> 
			<param name="v"> Element to pave the matrix with. </param>
			<param name=""> Auxiliary tag. </param> 
		</member>
		<member name="M:Unigine.Math.dmat4.#ctor(double,double,double,double,double,double,double,double,double,double,double,double,ConstexprTag)">
			<summary>
			Constructor. Initializes the matrix using given double elements.
			</summary> 
			<param name="m00_"> 00 element. </param>
			<param name="m10_"> 10 element. </param>
			<param name="m20_"> 20 element. </param>
			<param name="m01_"> 01 element. </param>
			<param name="m11_"> 11 element. </param>
			<param name="m21_"> 21 element. </param>
			<param name="m02_"> 02 element. </param>
			<param name="m12_"> 12 element. </param>
			<param name="m22_"> 22 element. </param>
			<param name="m03_"> 03 element. </param>
			<param name="m13_"> 13 element. </param>
			<param name="m23_"> 23 element. </param>
			<param name=""> Auxiliary tag. </param> 
		</member>
		<member name="M:Unigine.Math.dmat4.set(int,int,double)">
			<summary>
			Sets a new value of the matrix element specified by row and column.
			</summary> 
			<param name="row"> Row. </param>
			<param name="column"> Column. </param>
			<param name="v"> The value to be set. </param> 
		</member>
		<member name="M:Unigine.Math.dmat4.set(float,int)">
			<summary>
			Sets new matrix values using a pointer to the source matrix.
			</summary> 
			<param name="m"> Pointer to the source matrix. </param>
			<param name="transpose"> If transpose is 0 (by default), the matrix is specified in the column major style. </param> 
		</member>
		<member name="M:Unigine.Math.dmat4.set(mat2)">
			<summary>
			Sets new matrix values using a given mat2 source matrix (2x2). The matrix elements are filled using corresponding elements of the source matrix.
			</summary> 
			<param name="m"> Source matrix (2x2). </param> 
		</member>
		<member name="M:Unigine.Math.dmat4.set(mat3)">
			<summary>
			Sets new matrix values using a given mat3 source matrix (3x3). The matrix elements are filled using corresponding elements of the source matrix.
			</summary> 
			<param name="m"> Source matrix (3x3). </param> 
		</member>
		<member name="M:Unigine.Math.dmat4.set(Unigine.quat,Unigine.dvec3)">
			<summary>
			Sets new matrix values using a given quaternion and a dvec3 vector.
			</summary> 
			<param name="q"> Source quaternion. </param>
			<param name="v"> Source vector. </param> 
		</member>
		<member name="M:Unigine.Math.dmat4.set(Unigine.quat)">
			<summary>
			Sets new matrix values using a given source quaternion.
			</summary> 
			<param name="q"> Source quaternion. </param> 
		</member>
		<member name="M:Unigine.Math.dmat4.set(Unigine.mat4)">
			<summary>
			Sets new matrix values using a given mat4 source matrix (4x4). The matrix elements are filled using corresponding elements of the source matrix.
			</summary> 
			<param name="m"> Source matrix (4x4). </param> 
		</member>
		<member name="M:Unigine.Math.dmat4.set(double,int)">
			<summary>
			Sets new matrix values using a pointer to the source matrix.
			</summary> 
			<param name="m"> Pointer to the source matrix. </param>
			<param name="transpose"> If transpose is 0 (by default), the matrix is specified in the column major style. </param> 
		</member>
		<member name="M:Unigine.Math.dmat4.set(Unigine.dmat4)">
			<summary>
			Sets the matrix equal to the specified source matrix.
			</summary> 
			<param name="m"> Source matrix. </param> 
		</member>
		<member name="M:Unigine.Math.dmat4.set(mat3,Unigine.dvec3)">
			<summary>
			Sets new matrix values using a given source mat3 matrix (3x3) and a dvec3 vector.
			</summary> 
			<param name="m"> Source matrix (3x3). </param>
			<param name="v"> Source vector. </param> 
		</member>
		<member name="M:Unigine.Math.dmat4.get(int,int)">
			<summary>
			Returns the reference to the matrix element specified by given row and column.
			</summary> 
			<param name="row"> Row. </param>
			<param name="column"> Column. </param> 
			<returns>Matrix element reference.</returns>
		</member>
		<member name="M:Unigine.Math.dmat4.get(int,int) const">
			<summary>
			Returns the value of the matrix element specified by given row and column.
			</summary> 
			<param name="row"> Row. </param>
			<param name="column"> Column. </param> 
			<returns>Matrix element value.</returns>
		</member>
		<member name="M:Unigine.Math.dmat4.get">
			<summary>
			Returns the pointer to the matrix.
			</summary>  
			<returns>Pointer to the matrix.</returns>
		</member>
		<member name="M:Unigine.Math.dmat4.get const">
			<summary>
			Returns the constant pointer to the matrix.
			</summary>  
			<returns>Constant pointer to the matrix.</returns>
		</member>
		<member name="M:Unigine.Math.dmat4.get(double,int) const">
			<summary>
			Fills the destination matrix, specified by the given pointer, with matrix values.
			</summary> 
			<param name="m"> Destination matrix pointer. </param>
			<param name="transpose"> If transpose is 0 (by default), the matrix is specified in the column major style. </param> 
		</member>
		<member name="M:Unigine.Math.dmat4.setColumn(int,Unigine.dvec4)">
			<summary>
			Sets the specified column of the matrix using a given dvec4 vector as a source.
			</summary> 
			<param name="column"> Column. </param>
			<param name="v"> Source vector. </param> 
		</member>
		<member name="M:Unigine.Math.dmat4.getColumn(int) const">
			<summary>
			Returns the specified matrix column.
			</summary> 
			<param name="column"> Column. </param> 
			<returns>The dvec4 vector with column values.</returns>
		</member>
		<member name="M:Unigine.Math.dmat4.setColumn3(int,Unigine.dvec3)">
			<summary>
			Sets the specified column of the matrix using a given three-component dvec3 vector as a source.
			</summary> 
			<param name="column"> Column. </param>
			<param name="v"> Three-component source vector. </param> 
		</member>
		<member name="M:Unigine.Math.dmat4.getColumn3(int) const">
			<summary>
			Returns the specified matrix column.
			</summary> 
			<param name="column"> Column. </param> 
			<returns>The dvec3 vector with column values.</returns>
		</member>
		<member name="M:Unigine.Math.dmat4.setIdentity">
			<summary>
			Sets the matrix equal to the identity matrix.
			</summary>  
		</member>
		<member name="M:Unigine.Math.dmat4.setRotate(Unigine.dvec3,double)">
			<summary>
			Sets the rotation matrix for a given axis.
			</summary> 
			<param name="axis"> Rotation axis. </param>
			<param name="angle"> Rotation angle, in degrees. </param> 
		</member>
		<member name="M:Unigine.Math.dmat4.getRotate const">
			<summary>
			Returns the quaternion, representing the rotation part of the matrix.
			</summary>  
			<returns>Matrix rotation part.</returns>
		</member>
		<member name="M:Unigine.Math.dmat4.setRotateX(double)">
			<summary>
			Sets X rotation matrix.
			</summary> 
			<param name="angle"> Rotation angle, in degrees. </param> 
		</member>
		<member name="M:Unigine.Math.dmat4.setRotateY(double)">
			<summary>
			Sets Y rotation matrix.
			</summary> 
			<param name="angle"> Rotation angle, in degrees. </param> 
		</member>
		<member name="M:Unigine.Math.dmat4.setRotateZ(double)">
			<summary>
			Sets Z rotation matrix.
			</summary> 
			<param name="angle"> Rotation angle, in degrees. </param> 
		</member>
		<member name="M:Unigine.Math.dmat4.setRow(int,Unigine.dvec4)">
			<summary>
			Sets the specified row of the matrix using a given dvec4 vector as a source.
			</summary> 
			<param name="row"> Row. </param>
			<param name="v"> Source vector. </param> 
		</member>
		<member name="M:Unigine.Math.dmat4.getRow(int) const">
			<summary>
			Returns the specified matrix row.
			</summary> 
			<param name="row"> Row. </param> 
			<returns>The dvec4 vector with row values.</returns>
		</member>
		<member name="M:Unigine.Math.dmat4.setRow3(int,Unigine.dvec3)">
			<summary>
			Sets the specified row of the matrix using a given three-component dvec3 vector as a source, the last element of the row remains as is.
			</summary> 
			<param name="row"> Row. </param>
			<param name="v"> Three-component source vector. </param> 
		</member>
		<member name="M:Unigine.Math.dmat4.getRow3(int) const">
			<summary>
			Returns the first three elements of the specified matrix row.
			</summary> 
			<param name="row"> Row. </param> 
			<returns>The dvec3 vector with the first three elements of the specified matrix row.</returns>
		</member>
		<member name="M:Unigine.Math.dmat4.setScale(Unigine.dvec3)">
			<summary>
			Fills the scaling matrix using a given dvec3 source vector.
			</summary> 
			<param name="v"> Source vector. </param> 
		</member>
		<member name="M:Unigine.Math.dmat4.getScale const">
			<summary>
			Returns the three-component vec3 vector, representing the scaling part of the matrix.
			</summary>  
			<returns>Three-component vector with the scaling part of the matrix.</returns>
		</member>
		<member name="M:Unigine.Math.dmat4.setTranslate(Unigine.dvec3)">
			<summary>
			Fills the translation matrix using a given dvec3 source vector.
			</summary> 
			<param name="v"> Source vector. </param> 
		</member>
		<member name="M:Unigine.Math.dmat4.getTranslate const">
			<summary>
			Returns the three-component vec3 vector, representing the translation part of the matrix.
			</summary>  
			<returns>Three-component vector with the translation part of the matrix.</returns>
		</member>
		<member name="M:Unigine.Math.dmat4.setZero">
			<summary>
			Sets all matrix elements equal to 0.
			</summary>  
		</member>
		<member name="M:Unigine.Math.dmat4.operator const double * const">
			<summary>
			Performs type conversion to const double *.
			</summary>  
		</member>
		<member name="M:Unigine.Math.dmat4.operator const void * const">
			<summary>
			Performs type conversion to const void *.
			</summary>  
		</member>
		<member name="M:Unigine.Math.dmat4.operator double *">
			<summary>
			Performs type conversion to double *.
			</summary>  
		</member>
		<member name="M:Unigine.Math.dmat4.operator void *">
			<summary>
			Performs type conversion to void *.
			</summary>  
		</member>
		<member name="M:Unigine.Math.dmat4.operator*=(Unigine.dmat4)">
			<summary>
			Performs matrix multiplication.
			</summary> 
			<param name="m"> Matrix. </param> 
			<returns>Resulting matrix.</returns>
		</member>
		<member name="M:Unigine.Math.dmat4.operator*=(double)">
			<summary>
			Performs scalar multiplication.
			</summary> 
			<param name="v"> Scalar value. </param> 
			<returns>Resulting matrix.</returns>
		</member>
		<member name="M:Unigine.Math.dmat4.operator+=(Unigine.dmat4)">
			<summary>
			Performs matrix addition.
			</summary> 
			<param name="m"> Matrix. </param> 
			<returns>Resulting matrix.</returns>
		</member>
		<member name="M:Unigine.Math.dmat4.operator- const">
			<summary>
			Performs matrix negation.
			</summary>  
			<returns>Resulting matrix.</returns>
		</member>
		<member name="M:Unigine.Math.dmat4.operator-=(Unigine.dmat4)">
			<summary>
			Performs matrix subtraction.
			</summary> 
			<param name="m"> Matrix. </param> 
			<returns>Resulting matrix.</returns>
		</member>
		<member name="M:Unigine.Math.dmat4.operator=(Unigine.dmat4)">
			<summary>
			Performs matrix assignment. Destination matrix = Source matrix.
			</summary> 
			<param name="m"> Source matrix. </param> 
			<returns>Result.</returns>
		</member>
		<member name="M:Unigine.Math.dmat4.operator[](int)">
			<summary>
			Performs array access to the matrix item reference using given item index.
			</summary> 
			<param name="i"> Matrix item index. </param> 
			<returns>Matrix item reference.</returns>
		</member>
		<member name="M:Unigine.Math.dmat4.operator[](int) const">
			<summary>
			Performs array access to the matrix item using given item index.
			</summary> 
			<param name="i"> Matrix item index. </param> 
			<returns>Matrix item.</returns>
		</member>
		<member name="M:Unigine.Math.dmat4.getAxisX const">
			<summary>
			Returns the normalized vector representing the X axis. Call this method to get the right or left vector of the matrix:
			</summary>  
			<returns>Vector representing the X axis.</returns>
		</member>
		<member name="M:Unigine.Math.dmat4.getAxisY const">
			<summary>
			Returns the normalized vector representing the Y axis. Call this method to get the back or forward vector of the matrix:
			</summary>  
			<returns>Vector representing the Y axis.</returns>
		</member>
		<member name="M:Unigine.Math.dmat4.getAxisZ const">
			<summary>
			Returns the normalized vector representing the Z axis. Call this method to get the up or down vector of the matrix:
			</summary>  
			<returns>Vector representing the Z axis.</returns>
		</member>
		<member name="M:Unigine.Math.dmat4.determinant(Unigine.dmat4)">
			<summary>
			Returns the determinant of the given matrix.
			</summary> 
			<param name="m"> Input matrix. </param> 
			<returns>Determinant of the matrix.</returns>
		</member>
		<member name="M:Unigine.Math.dmat4.translate(Unigine.dvec3)">
			<summary>
			Returns the translation matrix using a given dvec3 translation vector.
			</summary> 
			<param name="v"> Translation vector. </param> 
			<returns>Translated matrix.</returns>
		</member>
		<member name="M:Unigine.Math.dmat4.translate(Unigine.dvec4)">
			<summary>
			Returns the translation matrix using a given dvec4 translation vector.
			</summary> 
			<param name="v"> Translation vector. </param> 
			<returns>Translated matrix.</returns>
		</member>
		<member name="M:Unigine.Math.dmat4.translate(Unigine.dvec2)">
			<summary>
			Returns the translation matrix using a given dvec2 translation vector.
			</summary> 
			<param name="v"> Translation vector. </param> 
			<returns>Translated matrix.</returns>
		</member>
		<member name="M:Unigine.Math.dmat4.translate(double,double,double)">
			<summary>
			Returns the translation matrix using a dvec3 translation vector with given components.
			</summary> 
			<param name="x"> X component of the translation vector. </param>
			<param name="y"> Y component of the translation vector. </param>
			<param name="z"> Z component of the translation vector. </param> 
			<returns>Translated matrix.</returns>
		</member>
		<member name="M:Unigine.Math.dmat4.rotate(Unigine.dvec3,double)">
			<summary>
			Returns the rotation matrix for a given axis and an angle.
			</summary> 
			<param name="axis"> Rotation axis. </param>
			<param name="angle"> Rotation angle, in degrees. </param> 
			<returns>Rotated matrix.</returns>
		</member>
		<member name="M:Unigine.Math.dmat4.rotate(double,double,double,double)">
			<summary>
			Returns the rotation matrix for an angle and an axis with given components.
			</summary> 
			<param name="x"> X component of the rotation vector. </param>
			<param name="y"> Y component of the rotation vector. </param>
			<param name="z"> Z component of the rotation vector. </param>
			<param name="angle"> Rotation angle, in degrees. </param> 
			<returns>Rotated matrix.</returns>
		</member>
		<member name="M:Unigine.Math.dmat4.rotateX(double)">
			<summary>
			Returns the matrix rotated around the X-axis by a given angle.
			</summary> 
			<param name="angle"> Rotation angle, in degrees. </param> 
			<returns>Rotated matrix.</returns>
		</member>
		<member name="M:Unigine.Math.dmat4.rotateY(double)">
			<summary>
			Returns the matrix rotated around the Y-axis by a given angle.
			</summary> 
			<param name="angle"> Rotation angle, in degrees. </param> 
			<returns>Rotated matrix.</returns>
		</member>
		<member name="M:Unigine.Math.dmat4.rotateZ(double)">
			<summary>
			Returns the matrix rotated around the Z-axis by a given angle.
			</summary> 
			<param name="angle"> Rotation angle, in degrees. </param> 
			<returns>Rotated matrix.</returns>
		</member>
		<member name="M:Unigine.Math.dmat4.scale(Unigine.dvec3)">
			<summary>
			Returns the matrix scaled by a given dvec3 source vector.
			</summary> 
			<param name="v"> Source vector. </param> 
			<returns>Scaled matrix.</returns>
		</member>
		<member name="M:Unigine.Math.dmat4.scale(double,double,double)">
			<summary>
			Returns the matrix scaled by a given dvec3 source vector.
			</summary> 
			<param name="x"> X component of the scale vector. </param>
			<param name="y"> Y component of the scale vector. </param>
			<param name="z"> Z component of the scale vector. </param> 
			<returns>Scaled matrix.</returns>
		</member>
		<member name="M:Unigine.Math.dmat4.scale(double)">
			<summary>
			Returns the matrix scaled by a given dvec3 source vector where every component is the same provided value.
			</summary> 
			<param name="x"> X, Y, and Z components of the scale vector. </param> 
			<returns>Scaled matrix.</returns>
		</member>
		<member name="M:Unigine.Math.dmat4.hash const">
			<summary>
			</summary>  
		</member>
		<member name="F:Unigine.Math.dmat4.dmat4_identity">
			<summary>
			Identity matrix.
		</summary>
		</member>
		<member name="F:Unigine.Math.dmat4.dmat4_one">
			<summary>
			Matrix of ones.
		</summary>
		</member>
		<member name="F:Unigine.Math.dmat4.dmat4_zero">
			<summary>
			Zero matrix.
		</summary>
		</member>
	</members>
</doc>
<?xml version='1.0'?>
<doc>
	<assembly>
		<name>Unigine</name>
	</assembly>
	<members>
		<member name="M:Unigine.Hasher class.create(Unigine.UGUID)">
			<summary>
			</summary>  
		</member>
		<member name="M:Unigine.UGUID.#ctor">
			<summary>
			Default constructor. Creates an empty 0-filled UGUID.
			</summary>  
		</member>
		<member name="M:Unigine.UGUID.UGUID(char)">
			<summary>
			Constructor. Creates a UGUID from the given source string. UGUID is generated using the SHA1 algorithm.
			</summary> 
			<param name="str"> Source string. </param> 
		</member>
		<member name="M:Unigine.UGUID.#ctor(unsignedchar)">
			<summary>
			</summary> 
			<param name="value_"> Source character. </param> 
		</member>
		<member name="M:Unigine.UGUID.UGUID(Unigine.UGUID)">
			<summary>
			Copy constructor. Creates a UGUID by copying a source UGUID.
			</summary> 
			<param name="guid"> Source UGUID. </param> 
		</member>
		<member name="M:Unigine.UGUID.generate">
			<summary>
			Generates a new random UGUID value.
			</summary>  
		</member>
		<member name="M:Unigine.UGUID.generate(char)">
			<summary>
			Generates a UGUID value from the given source string using the SHA1 algorithm.
			</summary> 
			<param name="str"> Source string. </param> 
		</member>
		<member name="M:Unigine.UGUID.generate(int)">
			<summary>
			Generates a random UGUID value using the seed value.
			</summary> 
			<param name="seed_"> Seed value. </param> 
		</member>
		<member name="M:Unigine.UGUID.generate(void,int)">
			<summary>
			Generates a UGUID value from the given source byte array of the specified size using the SHA1 algorithm.
			</summary> 
			<param name="data"> Source byte array. </param>
			<param name="size"> Number of bytes to be taken from the byte array for UGUID generation. </param> 
		</member>
		<member name="M:Unigine.UGUID.hash">
			<summary>
			Returns a hash for the UGUID value.
			</summary>  
			<returns>Hash generated for the UGUID value.</returns>
		</member>
		<member name="M:Unigine.UGUID.hashLong const">
			<summary>
			Returns a hash for the UGUID value.
			</summary>  
			<returns>Hash generated for the UGUID value.</returns>
		</member>
		<member name="M:Unigine.UGUID.clear">
			<summary>
			Clears the UGUID value. All 40 bytes are set to 0.
			</summary>  
		</member>
		<member name="M:Unigine.UGUID.isEmpty const">
			<summary>
			Returns a value indicating if the UGUID is empty (all 40 bytes are equal to 0).
			</summary>  
			<returns>true if the UGUID is empty; otherwise, false.</returns>
		</member>
		<member name="M:Unigine.UGUID.isValid const">
			<summary>
			Returns a value indicating if the UGUID has a valid value.
			</summary>  
			<returns>true if the value is valid; otherwise, false.</returns>
		</member>
		<member name="M:Unigine.UGUID.setFileSystemString(char)">
			<summary>
			Sets the string containing the UGUID value with the filesystem prefix "guid://".
			</summary> 
			<param name="str"> UGUID value with the filesystem prefix "guid://" to be set. </param> 
		</member>
		<member name="M:Unigine.UGUID.getFileSystemString">
			<summary>
			Returns the string containing the UGUID value with the filesystem prefix "guid://".
			</summary>  
			<returns>UGUID value with the filesystem prefix "guid://".</returns>
		</member>
		<member name="M:Unigine.UGUID.setString(char)">
			<summary>
			Sets the UGUID value equal to a given 40-character hexadecimal string.
			</summary> 
			<param name="str"> 40-character hexadecimal string representing the UGUID value. </param> 
		</member>
		<member name="M:Unigine.UGUID.getString">
			<summary>
			Returns the UGUID value as a 40-character hexadecimal string.
			</summary>  
			<returns>40-character hexadecimal string representing the UGUID value.</returns>
		</member>
		<member name="M:Unigine.UGUID.operator=(char)">
			<summary>
			Performs UGUID assignment. The value of the destination UGUID is set equal to the source hexadecimal string.
			</summary> 
			<param name="str"> Source string. A 40-character hexadecimal string representing the UGUID value. </param> 
			<returns>Result.</returns>
		</member>
		<member name="M:Unigine.UGUID.operator=(Unigine.UGUID)">
			<summary>
			Performs UGUID assignment. Destination UGUID = Source UGUID.
			</summary> 
			<param name="g"> Source UGUID. </param> 
			<returns>Result.</returns>
		</member>
		<member name="M:Unigine.UGUID.operator&gt;(Unigine.UGUID)">
			<summary>
			Indicates whether the UGUID value is greater than the source UGUID value.
			</summary> 
			<param name="g"> Source UGUID. </param> 
			<returns>1 if the UGUID value is greater than the source UGUID value; otherwise, 0.</returns>
		</member>
		<member name="M:Unigine.UGUID.operator&gt;=(Unigine.UGUID)">
			<summary>
			Indicates whether the UGUID value is greater than or equal to the source UGUID value.
			</summary> 
			<param name="g"> Source UGUID. </param> 
			<returns>1 if the UGUID value is greater than or equal to the source UGUID value; otherwise, 0.</returns>
		</member>
		<member name="M:Unigine.UGUID.operator&lt;(Unigine.UGUID)">
			<summary>
			Indicates whether the UGUID value is less than the source UGUID value.
			</summary> 
			<param name="g"> Source UGUID. </param> 
			<returns>1 if the UGUID value is less than or equal to the source UGUID value; otherwise, 0.</returns>
		</member>
		<member name="M:Unigine.UGUID.operator&lt;=(Unigine.UGUID)">
			<summary>
			Indicates whether the UGUID value is less than or equal to the source UGUID value.
			</summary> 
			<param name="g"> Source UGUID. </param> 
			<returns>1 if the UGUID value is less than or equal to the source UGUID value; otherwise, 0.</returns>
		</member>
		<member name="M:Unigine.UGUID.operator==(Unigine.UGUID)">
			<summary>
			Equality. Indicates whether the UGUID value is equal to the source UGUID value.
			</summary> 
			<param name="g"> Source UGUID. </param> 
			<returns>1 if the UGUID value is equal to the source UGUID value; otherwise, 0.</returns>
		</member>
		<member name="M:Unigine.UGUID.operator!=(Unigine.UGUID)">
			<summary>
			Inequality. Indicates whether the UGUID value is not equal to the source UGUID value.
			</summary> 
			<param name="g"> Source UGUID. </param> 
			<returns>1 if the UGUID value is not equal to the source UGUID value; otherwise, 0.</returns>
		</member>
		<member name="M:Unigine.UGUID.get">
			<summary>
			Returns the UGUID value as a string.
			</summary>  
			<returns>String.</returns>
		</member>
		<member name="M:Unigine.UGUID.get(int)">
			<summary>
			Returns a UGUID character by index.
			</summary> 
			<param name="index"> Index of the character </param> 
			<returns>Character of UGUID</returns>
		</member>
		<member name="M:Unigine.UGUID.get(int)">
			<summary>
			Constant array access.
			</summary> 
			<param name="index"> Array item index </param> 
			<returns>Array item</returns>
		</member>
		<member name="M:Unigine.UGUID.getValue const">
			<summary>
			</summary>  
		</member>
		<member name="M:Unigine.UGUID.operator[](int)">
			<summary>
			Array access.
			</summary> 
			<param name="index"> Array item index </param> 
			<returns>Array item</returns>
		</member>
		<member name="M:Unigine.UGUID.operator[](int)">
			<summary>
			Item access by index.
			</summary>  
		</member>
		<member name="M:Unigine.UGUID.operator const char *">
			<summary>
			Returns the pointer to the current string.
			</summary>  
			<returns>Pointer to the current string</returns>
		</member>
		<member name="M:Unigine.UGUID.operator const void *">
			<summary>
			Returns the pointer to the current string.
			</summary>  
		</member>
		<member name="F:Unigine.UGUID.empty">
			<summary>
			Empty GUID, containing all 0s.
		</summary>
		</member>
		<member name="F:Unigine.UGUID.HASH_SIZE">
			<summary>
			Hash size in bytes (40).
		</summary>
		</member>
		<member name="F:Unigine.UGUID.PREFIX_SIZE">
			<summary>
			GUID prefix size in bytes (7).
		</summary>
		</member>
		<member name="F:Unigine.UGUID.PREFIX">
			<summary>
			GUID prefix ("guid://").
		</summary>
		</member>
		<member name="F:Unigine.UGUID.VALUE_SIZE">
			<summary>
			GUID value size in bytes (24).
		</summary>
		</member>
	</members>
</doc>
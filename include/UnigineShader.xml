<?xml version='1.0'?>
<doc>
	<assembly>
		<name>Unigine</name>
	</assembly>
	<members>
		<member name="M:Unigine.Shader.#ctor">
			<summary>
			Default shader constructor.
			</summary>  
		</member>
		<member name="M:Unigine.Shader.#ctor(char)">
			<summary>
			Shader constructor. Loads all existing shaders with given name.
			</summary> 
			<param name="name"> Shader name. </param> 
		</member>
		<member name="M:Unigine.Shader.#ctor(char,char)">
			<summary>
			Shader constructor. Loads all existing shaders with given name.
			</summary> 
			<param name="name"> Shader name. </param>
			<param name="defines"> Shader defines. </param> 
		</member>
		<member name="M:Unigine.Shader.#ctor(char,char,char)">
			<summary>
			Shader constructor. Loads only vertex and fragment shaders with given names.
			</summary> 
			<param name="vertex"> Vertex shader name or source. </param>
			<param name="fragment"> Fragment shader name or source. </param>
			<param name="defines"> Shader defines. </param> 
		</member>
		<member name="M:Unigine.Shader.getD3D11ComputeShader const">
			<summary>
			Returns Direct3D11 compute shader.
			</summary>  
		</member>
		<member name="M:Unigine.Shader.getD3D11ControlShader const">
			<summary>
			Returns Direct3D11 control shader.
			</summary>  
		</member>
		<member name="M:Unigine.Shader.getD3D11EvaluateShader const">
			<summary>
			Returns Direct3D11 evaluate shader.
			</summary>  
		</member>
		<member name="M:Unigine.Shader.getD3D11FragmentShader const">
			<summary>
			Returns Direct3D11 fragment shader.
			</summary>  
		</member>
		<member name="M:Unigine.Shader.getD3D11GeometryShader const">
			<summary>
			Returns Direct3D11 geometry shader.
			</summary>  
		</member>
		<member name="M:Unigine.Shader.getD3D11VertexShader const">
			<summary>
			Returns Direct3D11 vertex shader.
			</summary>  
		</member>
		<member name="M:Unigine.Shader.getGLProgramID const">
			<summary>
			Returns OpenGL program identifier.
			</summary>  
		</member>
		<member name="M:Unigine.Shader.bind const">
			<summary>
			Binds shader.
			</summary>  
		</member>
		<member name="M:Unigine.Shader.clear const">
			<summary>
			Clears shader.
			</summary>  
		</member>
		<member name="M:Unigine.Shader.compile const">
			<summary>
			Compiles shader.
			</summary>  
			<returns>1 if the shader compiled successfully; otherwise, 0.</returns>
		</member>
		<member name="M:Unigine.Shader.destroy const">
			<summary>
			Destroys shader.
			</summary>  
		</member>
		<member name="M:Unigine.Shader.findParameter(char)">
			<summary>
			Finds shader parameter.
			</summary> 
			<param name="name"> Fast identifier. </param> 
			<returns>Parameter identifier, if found; otherwise, -1.</returns>
		</member>
		<member name="M:Unigine.Shader.flushParameters const">
			<summary>
			Flushes shader parameters.
			</summary>  
		</member>
		<member name="M:Unigine.Shader.loadCompute(char,char) const">
			<summary>
			Loads compute shader.
			</summary> 
			<param name="name"> Compute shader name or source. </param>
			<param name="defines"> Shader defines. </param> 
			<returns>1 if the compute shader was loaded successfully; otherwise, 0.</returns>
		</member>
		<member name="M:Unigine.Shader.loadControl(char,char) const">
			<summary>
			Loads control shader.
			</summary> 
			<param name="name"> Control shader name or source. </param>
			<param name="defines"> Shader defines. </param> 
			<returns>1 if the control shader was loaded successfully; otherwise, 0.</returns>
		</member>
		<member name="M:Unigine.Shader.loadEvaluate(char,char) const">
			<summary>
			Loads evaluate shader.
			</summary> 
			<param name="name"> Evaluate shader name or source. </param>
			<param name="defines"> Shader defines. </param> 
			<returns>1 if the evaluate shader was loaded successfully; otherwise, 0.</returns>
		</member>
		<member name="M:Unigine.Shader.loadFragment(char,char) const">
			<summary>
			Loads fragment shader.
			</summary> 
			<param name="name"> Fragment shader name or source. </param>
			<param name="defines"> Shader defines. </param> 
			<returns>1 if the fragment shader was loaded successfully; otherwise, 0.</returns>
		</member>
		<member name="M:Unigine.Shader.loadGeometry(char,char) const">
			<summary>
			Loads geometry shader.
			</summary> 
			<param name="name"> Geometry shader name or source. </param>
			<param name="defines"> Shader defines. </param> 
			<returns>1 if the geometry shader was loaded successfully; otherwise, 0.</returns>
		</member>
		<member name="M:Unigine.Shader.loadVertex(char,char) const">
			<summary>
			Loads vertex shader.
			</summary> 
			<param name="name"> Vertex shader name or source. </param>
			<param name="defines"> Shader defines. </param> 
			<returns>1 if the vertex shader was loaded successfully; otherwise, 0.</returns>
		</member>
		<member name="M:Unigine.Shader.unbind const">
			<summary>
			Unbinds shader.
			</summary>  
		</member>
		<member name="M:Unigine.Shader.setParameterFloat(int,float)">
			<summary>
			Sets shader float parameter value by using given parameter id.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterFloat(char,float)">
			<summary>
			Sets shader float parameter value by using given parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterFloat2(int,Unigine.Math.vec2)">
			<summary>
			Sets a shader parameter value for the float2 variable.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterFloat2(char,Unigine.Math.vec2)">
			<summary>
			Sets a shader parameter value for the float2 variable.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterFloat3(int,Unigine.Math.vec3)">
			<summary>
			Sets a shader parameter value for the float3 variable.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterFloat3(char,Unigine.Math.vec3)">
			<summary>
			Sets a shader parameter value for the float3 variable using the parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterFloat4(int,Unigine.Math.vec4)">
			<summary>
			Sets a shader parameter value for the float4 variable.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterFloat4(char,Unigine.Math.vec4)">
			<summary>
			Sets a shader parameter value for the float4 variable using the parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterFloat3x3(int,Unigine.Math.mat3)">
			<summary>
			Sets a shader parameter value for the float3x3 variable.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterFloat3x3(char,Unigine.Math.mat3)">
			<summary>
			Sets a shader parameter value for the float3x3 variable using the parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterFloat4x4(int,Unigine.Math.mat4)">
			<summary>
			Sets a shader parameter value for the float4x4 variable.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterFloat4x4(char,Unigine.Math.mat4)">
			<summary>
			Sets a shader parameter value for the float4x4 variable using the parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterInt(int,int)">
			<summary>
			Sets a shader parameter value for the int variable.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterInt(char,int)">
			<summary>
			Sets a shader parameter value for the int variable using the parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterInt2(int,Unigine.Math.ivec2)">
			<summary>
			Sets a shader parameter value for the int2 variable.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterInt2(char,Unigine.Math.ivec2)">
			<summary>
			Sets a shader parameter value for the int2 variable using the parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterInt3(int,Unigine.Math.ivec3)">
			<summary>
			Sets a shader parameter value for the int3 variable.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterInt3(char,Unigine.Math.ivec3)">
			<summary>
			Sets a shader parameter value for the int3 variable using the parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterInt4(int,Unigine.Math.ivec4)">
			<summary>
			Sets a shader parameter value for the int4 variable.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterInt4(char,Unigine.Math.ivec4)">
			<summary>
			Sets a shader parameter value for the int4 variable using the parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterDouble(int,double)">
			<summary>
			Sets a shader parameter value for the double variable.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterDouble(char,double)">
			<summary>
			Sets a shader parameter value for the double variable using the parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterDouble2(int,Unigine.Math.dvec2)">
			<summary>
			Sets a shader parameter value for the double2 variable.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterDouble2(char,Unigine.Math.dvec2)">
			<summary>
			Sets a shader parameter value for the double2 variable using the parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterDouble3(int,Unigine.Math.dvec3)">
			<summary>
			Sets a shader parameter value for the double3 variable.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterDouble3(char,Unigine.Math.dvec3)">
			<summary>
			Sets a shader parameter value for the double3 variable using the parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterDouble4(int,Unigine.Math.dvec4)">
			<summary>
			Sets a shader parameter value for the double4 variable.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterDouble4(char,Unigine.Math.dvec4)">
			<summary>
			Sets a shader parameter value for the double4 variable using the parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterDouble4x4(int,Unigine.Math.dmat4)">
			<summary>
			Sets a shader parameter value for the double4x4 variable.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterDouble4x4(char,Unigine.Math.dmat4)">
			<summary>
			Sets a shader parameter value for the double4x4 variable using the parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterScalar(int,Unigine.Math.Scalar)">
			<summary>
			Sets a shader parameter value for the scalar variable using the parameter id.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterScalar(char,Unigine.Math.Scalar)">
			<summary>
			Sets a shader parameter value for the scalar variable using the parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterScalar2(int,Unigine.Math.Vec2)">
			<summary>
			Sets a shader parameter value for the scalar2 variable using the parameter id.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterScalar2(char,Unigine.Math.Vec2)">
			<summary>
			Sets a shader parameter value for the scalar2 variable using the parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterScalar3(int,Unigine.Math.Vec3)">
			<summary>
			Sets a shader parameter value for the scalar3 variable using the parameter id.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterScalar3(char,Unigine.Math.Vec3)">
			<summary>
			Sets a shader parameter value for the scalar3 variable using the parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterScalar4(int,Unigine.Math.Vec4)">
			<summary>
			Sets a shader parameter value for the scalar4 variable using the parameter id.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterScalar4(char,Unigine.Math.Vec4)">
			<summary>
			Sets a shader parameter value for the scalar4 variable using the parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayFloat(int,float,int)">
			<summary>
			Sets shader float array parameter values by using given parameter id.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param>
			<param name="num_elements"> The number of array elements. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayFloat(char,float,int)">
			<summary>
			Sets shader float array parameter values by using given parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param>
			<param name="num_elements"> The number of array elements. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayFloat(int,Unigine.Vector{float,int,Unigine.VectorAllocator})">
			<summary>
			Sets shader float array parameter values by using given parameter id.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayFloat(char,Unigine.Vector{float,int,Unigine.VectorAllocator})">
			<summary>
			Sets shader float array parameter values by using given parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayFloat2(int,Unigine.Math.vec2,int)">
			<summary>
			Sets shader float2 array parameter values by using given parameter id.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param>
			<param name="num_elements"> The number of array elements. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayFloat2(char,Unigine.Math.vec2,int)">
			<summary>
			Sets shader float2 array parameter values by using given parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param>
			<param name="num_elements"> The number of array elements. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayFloat2(int,Unigine.Vector{Unigine.Math.vec2,int,Unigine.VectorAllocator})">
			<summary>
			Sets shader float2 array parameter values by using given parameter id.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayFloat2(char,Unigine.Vector{Unigine.Math.vec2,int,Unigine.VectorAllocator})">
			<summary>
			Sets shader float2 array parameter values by using given parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayFloat4(int,Unigine.Math.vec4,int)">
			<summary>
			Sets shader float4 array parameter values by using given parameter id.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param>
			<param name="num_elements"> The number of array elements. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayFloat4(char,Unigine.Math.vec4,int)">
			<summary>
			Sets shader float4 array parameter values by using given parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param>
			<param name="num_elements"> The number of array elements. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayFloat4(int,Unigine.Vector{Unigine.Math.vec4,int,Unigine.VectorAllocator})">
			<summary>
			Sets shader float4 array parameter values by using given parameter id.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayFloat4(char,Unigine.Vector{Unigine.Math.vec4,int,Unigine.VectorAllocator})">
			<summary>
			Sets shader float4 array parameter values by using given parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayFloat4x4(int,Unigine.Math.mat4,int)">
			<summary>
			Sets shader float4x4 array parameter values by using given parameter id.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param>
			<param name="num_elements"> The number of array elements. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayFloat4x4(char,Unigine.Math.mat4,int)">
			<summary>
			Sets shader float4x4 array parameter values by using given parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param>
			<param name="num_elements"> The number of array elements. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayFloat4x4(int,Unigine.Vector{Unigine.Math.mat4,int,Unigine.VectorAllocator})">
			<summary>
			Sets shader float4x4 array parameter values by using given parameter id.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayFloat4x4(char,Unigine.Vector{Unigine.Math.mat4,int,Unigine.VectorAllocator})">
			<summary>
			Sets shader float4x4 array parameter values by using given parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayInt(int,int,int)">
			<summary>
			Sets shader integer array parameter values by using given parameter id.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param>
			<param name="num_elements"> The number of array elements. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayInt(char,int,int)">
			<summary>
			Sets shader integer array parameter values by using given parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param>
			<param name="num_elements"> The number of array elements. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayInt(int,Unigine.Vector{int,int,Unigine.VectorAllocator})">
			<summary>
			Sets shader integer array parameter values by using given parameter id.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayInt(char,Unigine.Vector{int,int,Unigine.VectorAllocator})">
			<summary>
			Sets shader integer array parameter values by using given parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayInt2(int,Unigine.Math.ivec2,int)">
			<summary>
			Sets shader int2 array parameter values by using given parameter id.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param>
			<param name="num_elements"> The number of array elements. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayInt2(char,Unigine.Math.ivec2,int)">
			<summary>
			Sets shader int2 array parameter values by using given parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param>
			<param name="num_elements"> The number of array elements. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayInt2(int,Unigine.Vector{Unigine.Math.ivec2,int,Unigine.VectorAllocator})">
			<summary>
			Sets shader int2 array parameter values by using given parameter id.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayInt2(char,Unigine.Vector{Unigine.Math.ivec2,int,Unigine.VectorAllocator})">
			<summary>
			Sets shader int2 array parameter values by using given parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayInt4(int,Unigine.Math.ivec4,int)">
			<summary>
			Sets shader int4 array parameter values by using given parameter id.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param>
			<param name="num_elements"> The number of array elements. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayInt4(char,Unigine.Math.ivec4,int)">
			<summary>
			Sets shader int4 array parameter values by using given parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param>
			<param name="num_elements"> The number of array elements. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayInt4(int,Unigine.Vector{Unigine.Math.ivec4,int,Unigine.VectorAllocator})">
			<summary>
			Sets shader int4 array parameter values by using given parameter id.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayInt4(char,Unigine.Vector{Unigine.Math.ivec4,int,Unigine.VectorAllocator})">
			<summary>
			Sets shader int4 array parameter values by using given parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayDouble(int,double,int)">
			<summary>
			Sets shader double parameter value by using given parameter id.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param>
			<param name="num_elements"> The number of array elements. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayDouble(char,double,int)">
			<summary>
			Sets shader double parameter value by using given parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param>
			<param name="num_elements"> The number of array elements. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayDouble(int,Unigine.Vector{double,int,Unigine.VectorAllocator})">
			<summary>
			Sets shader double parameter value by using given parameter id.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayDouble(char,Unigine.Vector{double,int,Unigine.VectorAllocator})">
			<summary>
			Sets shader double parameter value by using given parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayDouble2(int,Unigine.Math.dvec2,int)">
			<summary>
			Sets shader double2 parameter value by using given parameter id.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param>
			<param name="num_elements"> The number of array elements. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayDouble2(char,Unigine.Math.dvec2,int)">
			<summary>
			Sets shader double2 parameter value by using given parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param>
			<param name="num_elements"> The number of array elements. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayDouble2(int,Unigine.Vector{Unigine.Math.dvec2,int,Unigine.VectorAllocator})">
			<summary>
			Sets shader double2 parameter value by using given parameter id.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayDouble2(char,Unigine.Vector{Unigine.Math.dvec2,int,Unigine.VectorAllocator})">
			<summary>
			Sets shader double2 parameter value by using given parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayDouble4(int,Unigine.Math.dvec4,int)">
			<summary>
			Sets shader double4 parameter value by using given parameter id.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param>
			<param name="num_elements"> The number of array elements. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayDouble4(char,Unigine.Math.dvec4,int)">
			<summary>
			Sets shader double4 parameter value by using given parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param>
			<param name="num_elements"> The number of array elements. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayDouble4(int,Unigine.Vector{Unigine.Math.dvec4,int,Unigine.VectorAllocator})">
			<summary>
			Sets shader double4 parameter value by using given parameter id.
			</summary> 
			<param name="id"> Parameter identifier. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setParameterArrayDouble4(char,Unigine.Vector{Unigine.Math.dvec4,int,Unigine.VectorAllocator})">
			<summary>
			Sets shader double4 parameter value by using given parameter name.
			</summary> 
			<param name="name"> Parameter name. </param>
			<param name="value"> Parameter value to be set. </param> 
		</member>
		<member name="M:Unigine.Shader.setDisableCompileError(bool)">
			<summary>
			Enables or disables the shader compile error output.
			</summary> 
			<param name="error"> true to disable compile errors output; false - to enable. </param> 
		</member>
		<member name="M:Unigine.Shader.isDisableCompileError const">
			<summary>
			Returns a value indicating if the shader compile error output is disabled.
			</summary>  
			<returns>true if the shader compile errors output is disabled; otherwise, false.</returns>
		</member>
		<member name="M:Unigine.Shader.setOptimizationLevel(int)">
			<summary>
			Sets optimization level for the shader compiler.Available for DirectX only.
			</summary> 
			<param name="level"> Optimization level to be set. One of the following values:0 - Directs the compiler to skip optimization steps during code generation.1 - Directs the compiler to use the lowest optimization level. At this level the compiler might produce slower code but produces the code quicker.2 - Directs the compiler to use the second lowest optimization level.3 - Directs the compiler to use the second highest optimization level.4 - Directs the compiler to use the highest optimization level. At this level the compiler produces the best possible code but might take significantly longer to do so. </param> 
		</member>
		<member name="M:Unigine.Shader.getOptimizationLevel const">
			<summary>
			Returns the current optimization level of the shader compiler.Available for DirectX only.
			</summary>  
			<returns>Current optimization level of the shader compiler. One of the following values:0 - skip optimization steps during code generation.1 - lowest optimization level. At this level the compiler might produce slower code but produces the code quicker.2 - second lowest optimization level.3 - second highest optimization level.4 - highest optimization level. At this level the compiler produces the best possible code but might take significantly longer to do so.</returns>
		</member>
		<member name="M:Unigine.Shader.setWarningMode(Shader::WARNING_MODE)">
			<summary>
			Sets warning mode for the shader compiler. You can choose modes from the lowest (all shader compilation warnings are ignored) up to the highest level, when warnings are treated as errors. By default the highest level is used, setting lower levels may result in driver and OS crashes, so you use them at your own risk. The soft level can be used if you have checked and you're absolutely sure that the warnings do not cause crashes.Available for DirectX only.
			</summary> 
			<param name="mode"> Warning mode to be used. </param> 
		</member>
		<member name="M:Unigine.Shader.getWarningMode const">
			<summary>
			Returns the current warning mode for the shader compiler: from the lowest (all shader compilation warnings are ignored) up to the highest level, when warnings are treated as errors. By default the highest level is used, setting lower levels may result in driver and OS crashes, so you use them at your own risk. The soft level can be used if you have checked and you're absolutely sure that the warnings do not cause crashes.Available for DirectX only.
			</summary>  
			<returns>Current warning mode of the shader compiler.</returns>
		</member>
		<member name="M:Unigine.Shader.setDisableCompileCache(bool)">
			<summary>
			Sets a value indicating if compilation cache for the shader is disabled.
			</summary> 
			<param name="cache"> true to disable compilation cache for the shader; otherwise, false. </param> 
		</member>
		<member name="M:Unigine.Shader.isDisableCompileCache const">
			<summary>
			Returns a value indicating if compilation cache for the shader is disabled.
			</summary>  
			<returns>true if compilation cache for the shader is disabled; otherwise, false.</returns>
		</member>
		<member name="M:Unigine.Shader.setDisableExport(bool)">
			<summary>
			Sets a value indicating if shader export to a file is disabled. By default UNIGINE enables exporting a shader program to a file (e.g. for debug purposes). Shader files are created in native languages for both graphic APIs (Direct3D - .hlsl extension, OpenGL - .glsl extension).
			</summary> 
			<param name="val"> true to disable shader export to a file; otherwise, false. </param> 
		</member>
		<member name="M:Unigine.Shader.isDisableExport const">
			<summary>
			Returns a value indicating if shader export to a file is disabled. By default UNIGINE enables exporting a shader program to a file (e.g. for debug purposes). Shader files are created in native languages for both graphic APIs (Direct3D - .hlsl extension, OpenGL - .glsl extension).
			</summary>  
			<returns>true if shader export to a file is disabled; otherwise, false.</returns>
		</member>
		<member name="M:Unigine.Shader.setIEEEStrictness(bool)">
			<summary>
			Sets a value indicating if the shader compiler forces the IEEE strict compilation.Available for DirectX only.
			</summary> 
			<param name="strictness"> true to force the IEEE strict compilation by the shader compiler; otherwise, false. </param> 
		</member>
		<member name="M:Unigine.Shader.isIEEEStrictness const">
			<summary>
			Returns a value indicating if the shader compiler forces the IEEE strict compilation.Available for DirectX only.
			</summary>  
			<returns>true if the shader compiler forces the IEEE strict compilation; otherwise, false.</returns>
		</member>
		<member name="F:Unigine.Shader.WARNING_MODE_DISABLE">
			<summary>
			All shader compilation warnings are ignored. Using this mode is not recommended as it may result in driver and OS crashes, so you use it at your own risk.
		</summary>
		</member>
		<member name="F:Unigine.Shader.WARNING_MODE_SOFT">
			<summary>
			All shader compilation warnings are printed to log, but ignored. You can use this mode if you have checked and you're absolutely sure that the warnings do not cause driver or OS crashes.
		</summary>
		</member>
		<member name="F:Unigine.Shader.WARNING_MODE_HARD">
			<summary>
			All warnings are treated as errors. This level is used by default.
		</summary>
		</member>
	</members>
</doc>
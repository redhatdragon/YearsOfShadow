<?xml version='1.0'?>
<doc>
	<assembly>
		<name>Unigine</name>
	</assembly>
	<members>
		<member name="M:Unigine.MeshDynamic.create(int)">
			<summary>
			Creates a new dynamic mesh instance in accordance with the specified flags.
			</summary> 
			<param name="flags"> Creation flags. A combination of IMMUTABLE_*, DYNAMIC_* and FLUSH_* flags. </param> 
			<returns>MeshDynamic smart pointer.</returns>
		</member>
		<member name="M:Unigine.MeshDynamic.setFlags(int)">
			<summary>
			Sets the flags of the dynamic mesh.
			</summary> 
			<param name="flags"> Creation flags. A combination of IMMUTABLE_*, DYNAMIC_* and FLUSH_* flags. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.getFlags">
			<summary>
			Returns the current set of flags of the dynamic mesh.
			</summary>  
			<returns>Creation flags. A combination of IMMUTABLE_*, DYNAMIC_* and FLUSH_* flags.</returns>
		</member>
		<member name="M:Unigine.MeshDynamic.copy(Unigine.Ptr{MeshDynamic}) const">
			<summary>
			Copies the dynamic mesh to the specified target.
			</summary> 
			<param name="dest"> Target dynamic mesh to which the mesh is to be copied. </param> 
			<returns>true if the dynamic mesh is copied successfully to the specified target; otherwise, false.</returns>
		</member>
		<member name="M:Unigine.MeshDynamic.bind">
			<summary>
			Binds dynamic mesh data (index and vertex buffers) to the input assembler stage.
			</summary>  
		</member>
		<member name="M:Unigine.MeshDynamic.unbind">
			<summary>
			Unbinds dynamic mesh data (index and vertex buffers).
			</summary>  
		</member>
		<member name="M:Unigine.MeshDynamic.flushVertex">
			<summary>
			Flushes the vertex buffer and sends all data to GPU. This method is called automatically, if the length of the vertex buffer changes. If you change the contents of the vertex buffer, you should call this method.
			</summary>  
		</member>
		<member name="M:Unigine.MeshDynamic.flushIndices">
			<summary>
			Flushes the index buffer and sends all data to GPU. This method is called automatically, if the length of the index buffer changes. If you change the contents of the index buffers, you should call this method.
			</summary>  
		</member>
		<member name="M:Unigine.MeshDynamic.renderSurface(int)">
			<summary>
			Renders the surface.
			</summary> 
			<param name="mode"> Rendering mode. One of the MODE values. </param> 
			<returns>Number of primitives rendered. Primitive type is determined by the rendering mode.</returns>
		</member>
		<member name="M:Unigine.MeshDynamic.renderInstancedSurface(int,int)">
			<summary>
			Renders the specified number of instances of the surface.
			</summary> 
			<param name="mode"> Rendering mode. One of the MODE values. </param>
			<param name="num"> Number of instances to be rendered. </param> 
			<returns>Number of primitives rendered. Primitive type is determined by the rendering mode.</returns>
		</member>
		<member name="M:Unigine.MeshDynamic.renderSurface(int,int,int,int)">
			<summary>
			Renders the surface specified by begin and end indices.
			</summary> 
			<param name="mode"> Rendering mode. One of the MODE values. </param>
			<param name="base"> A value added to each index before reading a vertex from the vertex buffer. </param>
			<param name="begin"> First index of the surface to be read by the GPU from the index buffer. </param>
			<param name="end"> Last index of the surface to be read by the GPU from the index buffer. </param> 
			<returns>Number of primitives rendered. Primitive type is determined by the rendering mode.</returns>
		</member>
		<member name="M:Unigine.MeshDynamic.renderInstancedSurface(int,int,int,int,int)">
			<summary>
			Renders the specified number of instances of the surface specified by begin and end indices.
			</summary> 
			<param name="mode"> Rendering mode. One of the MODE values. </param>
			<param name="base"> A value added to each index before reading a vertex from the vertex buffer. </param>
			<param name="begin"> First index of the surface to be read by the GPU from the index buffer. </param>
			<param name="end"> Last index of the surface to be read by the GPU from the index buffer. </param>
			<param name="num"> Number of instances to be rendered. </param> 
			<returns>Number of primitives rendered. Primitive tyme is determined by the rendering mode.</returns>
		</member>
		<member name="M:Unigine.MeshDynamic.render(int,int)">
			<summary>
			Renders the dynamic mesh with the specified flags and mode.
			</summary> 
			<param name="mode"> Rendering mode. One of the MODE values. </param>
			<param name="flush"> Flush flag. One of the FLUSH_* variables. </param> 
			<returns>Number of triangles rendered.</returns>
		</member>
		<member name="M:Unigine.MeshDynamic.getSystemMemoryUsage">
			<summary>
			Returns the current amount of system memory used by the dynamic mesh, in bytes.
			</summary>  
			<returns>System memory amount used by the dynamic mesh, in bytes.</returns>
		</member>
		<member name="M:Unigine.MeshDynamic.getVideoMemoryUsage">
			<summary>
			Returns the current amount of video memory used by the dynamic mesh.
			</summary>  
			<returns>Video memory amount used by the dynamic mesh, in bytes.</returns>
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexFormat(MeshDynamic::Attribute[])">
			<summary>
			Sets vertex format to be used by the dynamic mesh.
			</summary> 
			<param name="attributes"> Array of attributes to be used for vertex format, can be up to 16 attributes for one vertex. The numeration starts from 0. Each attribute consists of:An offset of the vertex in bytes, depends on the vertex type and size.Type of the vertex: one of the TYPE_* valuesSize of the vertex: can be 1,2,3,4 for float type; 2,4 for half type; 4 for UChar typeWhen it goes to shader, 0 -attribute always comes with the size of 4, no matter what size is specified in the method. All the other attributes come with the specified sizes. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.getVertexSize">
			<summary>
			Returns vertex size of the dynamic mesh.
			</summary>  
			<returns>Vertex size.</returns>
		</member>
		<member name="M:Unigine.MeshDynamic.getNumAttributes">
			<summary>
			Returns the number of vertex attributes of the dynamic mesh.
			</summary>  
		</member>
		<member name="M:Unigine.MeshDynamic.clearVertex">
			<summary>
			Removes all dynamic mesh vertices.
			</summary>  
		</member>
		<member name="M:Unigine.MeshDynamic.allocateVertex(int)">
			<summary>
			Allocates a given number of vertices in the vertex buffer. With this function, memory can be allocated once rather than in chunks, making the creation faster.
			</summary> 
			<param name="num"> Number of vertices for which memory is to be allocated. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.removeVertex(int,int)">
			<summary>
			Removes the specified number of elements starting from the specified one from the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="num"> Number of the first vertex to be removed. </param>
			<param name="size"> Number of vertices to be removed. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setNumVertex(int)">
			<summary>
			Sets the total number of vertices for the dynamic mesh.
			</summary> 
			<param name="num"> New number of vertices. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.getNumVertex">
			<summary>
			Returns the total number of vertices for the dynamic mesh.
			</summary>  
		</member>
		<member name="M:Unigine.MeshDynamic.addVertexArray(void,int)">
			<summary>
			Adds a set of new elements to the vertex buffer of the dynamic mesh at once.
			</summary> 
			<param name="vertex"> Array of vertices to be added. </param>
			<param name="num_vertex"> Number of vertices to add. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexArray(void,int)">
			<summary>
			Replaces the current vertex buffer of the dynamic mesh with the specified array of vertices.
			</summary> 
			<param name="vertex"> Array of vertices to be added. </param>
			<param name="num_vertex"> Number of vertices to add. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.addVertexHalf1(int,float)">
			<summary>
			Adds a new vertex with a single half coordinate to the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.addVertexHalf2(int,float,float)">
			<summary>
			Adds a new vertex with 2 half coordinates to the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param>
			<param name="y"> Y coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.addVertexHalf3(int,float,float,float)">
			<summary>
			Adds a new vertex with 3 half coordinates to the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param>
			<param name="y"> Y coordinate of the vertex. </param>
			<param name="z"> Z coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.addVertexHalf4(int,float,float,float,float)">
			<summary>
			Adds a new vertex with 4 half coordinates to the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param>
			<param name="y"> Y coordinate of the vertex. </param>
			<param name="z"> Z coordinate of the vertex. </param>
			<param name="w"> W coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.addVertexFloat(int,float[])">
			<summary>
			Adds a new vertex with float coordinates to the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="value"> Float-type coordinates of the vertex to be set. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.addVertexFloat1(int,float)">
			<summary>
			Adds a new vertex with a single float coordinate to the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.addVertexFloat2(int,float,float)">
			<summary>
			Adds a new vertex with 2 float coordinates to the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param>
			<param name="y"> Y coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.addVertexFloat3(int,float,float,float)">
			<summary>
			Adds a new vertex with 3 float coordinates to the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param>
			<param name="y"> Y coordinate of the vertex. </param>
			<param name="z"> Z coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.addVertexFloat4(int,float,float,float,float)">
			<summary>
			Adds a new vertex with 4 float coordinates to the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param>
			<param name="y"> Y coordinate of the vertex. </param>
			<param name="z"> Z coordinate of the vertex. </param>
			<param name="w"> W coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.addVertexUChar(int,uchar[])">
			<summary>
			Adds a new vertex with unsigned char coordinates to the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="value"> Uchar-type coordinates of the vertex to be set. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.addVertexUChar1(int,unsignedchar)">
			<summary>
			Adds a new vertex with a single unsigned char coordinate to the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.addVertexUChar2(int,unsignedchar,unsignedchar)">
			<summary>
			Adds a new vertex with 2 unsigned char coordinates to the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param>
			<param name="y"> Y coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.addVertexUChar3(int,unsignedchar,unsignedchar,unsignedchar)">
			<summary>
			Adds a new vertex with 3 unsigned char coordinates to the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param>
			<param name="y"> Y coordinate of the vertex. </param>
			<param name="z"> Z coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.addVertexUChar4(int,unsignedchar,unsignedchar,unsignedchar,unsignedchar)">
			<summary>
			Adds a new vertex with 4 unsigned char coordinates to the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param>
			<param name="y"> Y coordinate of the vertex. </param>
			<param name="z"> Z coordinate of the vertex. </param>
			<param name="w"> W coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.addVertexUShort(int,ushort[])">
			<summary>
			Adds a new vertex with unsigned short coordinates to the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="value"> Ushort-type coordinates of the vertex to be set. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.addVertexUShort1(int,unsignedshort)">
			<summary>
			Adds a new vertex with a single unsigned short coordinate to the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.addVertexUShort2(int,unsignedshort,unsignedshort)">
			<summary>
			Adds a new vertex with 2 unsigned short coordinates to the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param>
			<param name="y"> Y coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.addVertexUShort3(int,unsignedshort,unsignedshort,unsignedshort)">
			<summary>
			Adds a new vertex with 3 unsigned short coordinates to the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param>
			<param name="y"> Y coordinate of the vertex. </param>
			<param name="z"> Z coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.addVertexUShort4(int,unsignedshort,unsignedshort,unsignedshort,unsignedshort)">
			<summary>
			Adds a new vertex with 4 unsigned short coordinates to the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param>
			<param name="y"> Y coordinate of the vertex. </param>
			<param name="z"> Z coordinate of the vertex. </param>
			<param name="w"> W coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexHalf1(int,float)">
			<summary>
			Sets half-type coordinates and specified attribute for the last vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexHalf2(int,float,float)">
			<summary>
			Sets half-type coordinates and specified attribute for the last vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param>
			<param name="y"> Y coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexHalf3(int,float,float,float)">
			<summary>
			Sets half-type coordinates and specified attribute for the last vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param>
			<param name="y"> Y coordinate of the vertex. </param>
			<param name="z"> Z coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexHalf4(int,float,float,float,float)">
			<summary>
			Sets half-type coordinates and specified attribute for the last vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param>
			<param name="y"> Y coordinate of the vertex. </param>
			<param name="z"> Z coordinate of the vertex. </param>
			<param name="w"> W coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexFloat(int,float[])">
			<summary>
			Sets float-type coordinates and specified attribute for the last vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="value"> Float-type coordinates to be set. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexFloat1(int,float)">
			<summary>
			Sets float-type coordinates and specified attribute for the last vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexFloat2(int,float,float)">
			<summary>
			Sets float-type coordinates and specified attribute for the last vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param>
			<param name="y"> Y coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexFloat3(int,float,float,float)">
			<summary>
			Sets float-type coordinates and specified attribute for the last vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param>
			<param name="y"> Y coordinate of the vertex. </param>
			<param name="z"> Z coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexFloat4(int,float,float,float,float)">
			<summary>
			Sets float-type coordinates and specified attribute for the last vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param>
			<param name="y"> Y coordinate of the vertex. </param>
			<param name="z"> Z coordinate of the vertex. </param>
			<param name="w"> W coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexUChar(int,uchar[])">
			<summary>
			Sets uchar-type coordinates and specified attribute for the last vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="value"> Uchar-type coordinates to be set. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexUChar1(int,unsignedchar)">
			<summary>
			Sets uchar-type coordinates and specified attribute for the last vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexUChar2(int,unsignedchar,unsignedchar)">
			<summary>
			Sets uchar-type coordinates and specified attribute for the last vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param>
			<param name="y"> Y coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexUChar3(int,unsignedchar,unsignedchar,unsignedchar)">
			<summary>
			Sets uchar-type coordinates and specified attribute for the last vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param>
			<param name="y"> Y coordinate of the vertex. </param>
			<param name="z"> Z coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexUChar4(int,unsignedchar,unsignedchar,unsignedchar,unsignedchar)">
			<summary>
			Sets uchar-type coordinates and specified attribute for the last vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param>
			<param name="y"> Y coordinate of the vertex. </param>
			<param name="z"> Z coordinate of the vertex. </param>
			<param name="w"> W coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexUShort(int,ushort[])">
			<summary>
			Sets ushort-type coordinates and specified attribute for the last vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="value"> Ushort-type coordinates to be set. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexUShort1(int,unsignedshort)">
			<summary>
			Sets ushort-type coordinates and specified attribute for the last vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexUShort2(int,unsignedshort,unsignedshort)">
			<summary>
			Sets ushort-type coordinates and specified attribute for the last vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param>
			<param name="y"> Y coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexUShort3(int,unsignedshort,unsignedshort,unsignedshort)">
			<summary>
			Sets ushort-type coordinates and specified attribute for the last vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param>
			<param name="y"> Y coordinate of the vertex. </param>
			<param name="z"> Z coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexUShort4(int,unsignedshort,unsignedshort,unsignedshort,unsignedshort)">
			<summary>
			Sets ushort-type coordinates and specified attribute for the last vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param>
			<param name="y"> Y coordinate of the vertex. </param>
			<param name="z"> Z coordinate of the vertex. </param>
			<param name="w"> W coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexHalf1(int,int,float)">
			<summary>
			Sets half-type coordinates and specified attribute for the specified vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="vertex"> Vertex number. </param>
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexHalf2(int,int,float,float)">
			<summary>
			Sets half-type coordinates and specified attribute for the specified vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="vertex"> Vertex number. </param>
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param>
			<param name="y"> Y coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexHalf3(int,int,float,float,float)">
			<summary>
			Sets half-type coordinates and specified attribute for the specified vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="vertex"> Vertex number. </param>
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param>
			<param name="y"> Y coordinate of the vertex. </param>
			<param name="z"> Z coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexHalf4(int,int,float,float,float,float)">
			<summary>
			Sets half-type coordinates and specified attribute for the specified vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="vertex"> Vertex number. </param>
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param>
			<param name="y"> Y coordinate of the vertex. </param>
			<param name="z"> Z coordinate of the vertex. </param>
			<param name="w"> W coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexFloat(int,int,float[])">
			<summary>
			Sets float-type coordinates and specified attribute for the specified vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="vertex"> Vertex number. </param>
			<param name="attribute"> Attribute to be set. </param>
			<param name="value"> Float-type coordinates to be set. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexFloat1(int,int,float)">
			<summary>
			Sets float-type coordinates and specified attribute for the specified vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="vertex"> Vertex number. </param>
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexFloat2(int,int,float,float)">
			<summary>
			Sets float-type coordinates and specified attribute for the specified vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="vertex"> Vertex number. </param>
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param>
			<param name="y"> Y coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexFloat3(int,int,float,float,float)">
			<summary>
			Sets float-type coordinates and specified attribute for the specified vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="vertex"> Vertex number. </param>
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param>
			<param name="y"> Y coordinate of the vertex. </param>
			<param name="z"> Z coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexFloat4(int,int,float,float,float,float)">
			<summary>
			Sets float-type coordinates and specified attribute for the specified vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="vertex"> Vertex number. </param>
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param>
			<param name="y"> Y coordinate of the vertex. </param>
			<param name="z"> Z coordinate of the vertex. </param>
			<param name="w"> W coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexUChar(int,int,uchar[])">
			<summary>
			Sets uchar-type coordinates and specified attribute for the specified vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="vertex"> Vertex number. </param>
			<param name="attribute"> Attribute to be set. </param>
			<param name="value"> Uchar-type coordinates to be set. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexUChar1(int,int,unsignedchar)">
			<summary>
			Sets uchar-type coordinates and specified attribute for the specified vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="vertex"> Vertex number. </param>
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexUChar2(int,int,unsignedchar,unsignedchar)">
			<summary>
			Sets uchar-type coordinates and specified attribute for the specified vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="vertex"> Vertex number. </param>
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param>
			<param name="y"> Y coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexUChar3(int,int,unsignedchar,unsignedchar,unsignedchar)">
			<summary>
			Sets uchar-type coordinates and specified attribute for the specified vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="vertex"> Vertex number. </param>
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param>
			<param name="y"> Y coordinate of the vertex. </param>
			<param name="z"> Z coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexUChar4(int,int,unsignedchar,unsignedchar,unsignedchar,unsignedchar)">
			<summary>
			Sets uchar-type coordinates and specified attribute for the specified vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="vertex"> Vertex number. </param>
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param>
			<param name="y"> Y coordinate of the vertex. </param>
			<param name="z"> Z coordinate of the vertex. </param>
			<param name="w"> W coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexUShort(int,int,ushort[])">
			<summary>
			Sets ushort-type coordinates and specified attribute for the specified vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="vertex"> Vertex number. </param>
			<param name="attribute"> Attribute to be set. </param>
			<param name="value"> Ushort-type coordinates to be set. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexUShort1(int,int,unsignedshort)">
			<summary>
			Sets ushort-type coordinates and specified attribute for the specified vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="vertex"> Vertex number. </param>
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexUShort2(int,int,unsignedshort,unsignedshort)">
			<summary>
			Sets ushort-type coordinates and specified attribute for the specified vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="vertex"> Vertex number. </param>
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param>
			<param name="y"> Y coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexUShort3(int,int,unsignedshort,unsignedshort,unsignedshort)">
			<summary>
			Sets ushort-type coordinates and specified attribute for the specified vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="vertex"> Vertex number. </param>
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param>
			<param name="y"> Y coordinate of the vertex. </param>
			<param name="z"> Z coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setVertexUShort4(int,int,unsignedshort,unsignedshort,unsignedshort,unsignedshort)">
			<summary>
			Sets ushort-type coordinates and specified attribute for the specified vertex in the vertex buffer of the dynamic mesh.
			</summary> 
			<param name="vertex"> Vertex number. </param>
			<param name="attribute"> Attribute to be set. </param>
			<param name="x"> X coordinate of the vertex. </param>
			<param name="y"> Y coordinate of the vertex. </param>
			<param name="z"> Z coordinate of the vertex. </param>
			<param name="w"> W coordinate of the vertex. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.clearIndices">
			<summary>
			Removes all indices of the dynamic mesh.
			</summary>  
		</member>
		<member name="M:Unigine.MeshDynamic.allocateIndices(int)">
			<summary>
			Allocates a given number of vertex indices in the index buffer. With this function, memory can be allocated once rather than in chunks, making the creation faster.
			</summary> 
			<param name="num"> Number of indices for which memory is to be allocated. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.removeIndices(int,int)">
			<summary>
			Removes the specified number of indices starting from the specified one from the index buffer of the dynamic mesh.
			</summary> 
			<param name="num"> Number of the first index to be removed. </param>
			<param name="size"> Number of indices to be removed. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setNumIndices(int)">
			<summary>
			Sets the total number of indices for the dynamic mesh.
			</summary> 
			<param name="num"> New number of indices. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.getNumIndices">
			<summary>
			Returns the total number of indices for the dynamic mesh.
			</summary>  
			<returns>Number of indices.</returns>
		</member>
		<member name="M:Unigine.MeshDynamic.addIndex(int)">
			<summary>
			Adds a new index to the index buffer of the dynamic mesh.
			</summary> 
			<param name="index"> Index to be added. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.addIndexFast(int)">
			<summary>
			Adds a new index to the index buffer of the dynamic mesh.
			</summary> 
			<param name="index"> Index to be added. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.addIndices(int,int)">
			<summary>
			Adds two new indices to the index buffer of the dynamic mesh at once. This method can be used to add indices for a line strips via a single function call.
			</summary> 
			<param name="i0"> First index to be added. </param>
			<param name="i1"> Second index to be added. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.addIndices(int,int,int)">
			<summary>
			Adds three new indices to the index buffer of the dynamic mesh at once. This method can be used to add indices for a triangle via a single function call.
			</summary> 
			<param name="i0"> First index to be added. </param>
			<param name="i1"> Second index to be added. </param>
			<param name="i2"> Third index to be added. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.addIndices(int,int,int,int)">
			<summary>
			Adds four new indices to the index buffer of the dynamic mesh at once. This method can be used to add indices for a quad via a single function call.
			</summary> 
			<param name="i0"> First index to be added. </param>
			<param name="i1"> Second index to be added. </param>
			<param name="i2"> Third index to be added. </param>
			<param name="i3"> Fourth index to be added. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.addIndicesArray(int,int)">
			<summary>
			Adds a set of new elements to the index buffer of the dynamic mesh at once.
			</summary> 
			<param name="indices"> Array of indices to be added. </param>
			<param name="indices_size"> Number of indices to be added. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.setIndicesArray(int,int)">
			<summary>
			Replaces the current index buffer of the dynamic mesh with the specified array of indices.
			</summary> 
			<param name="indices"> Array of indices to be set. </param>
			<param name="indices_size"> Number of indices to be set. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.getIndicesArray">
			<summary>
			Returns the index buffer of the dynamic mesh.
			</summary>  
			<returns>Vector containing the index buffer of the dynamic mesh.</returns>
		</member>
		<member name="M:Unigine.MeshDynamic.addPoints(int)">
			<summary>
			Adds the specified number of points to the dynamic mesh.
			</summary> 
			<param name="num_points"> Number of points to be added. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.addLineStrip(int)">
			<summary>
			Adds a line strip to the dynamic mesh. This method does not add vertices, rather it allocates indices, for which vertices should be then created with one of the addVertex*() methods. Indices will point to vertices starting from the current last vertex in the vertex buffer.
			</summary> 
			<param name="num_vertex"> Number of vertices comprising the strip. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.addTriangles(int)">
			<summary>
			Adds the specified number of triangles to the dynamic mesh.
			</summary> 
			<param name="num_triangles"> Number of triangles to be added. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.addTriangleFan(int)">
			<summary>
			Adds a triangle fan to the dynamic mesh. This method does not add vertices, rather it allocates indices, for which vertices should be then created with one of the addVertex*() methods. Indices will point to vertices starting from the current last vertex in the vertex buffer.
			</summary> 
			<param name="num_vertex"> Number of vertices comprising the fan. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.addTriangleStrip(int)">
			<summary>
			Adds a triangle strip to the dynamic mesh. This method does not add vertices, rather it allocates indices, for which vertices should be then created with one of the addVertex*() methods. Indices will point to vertices starting from the current last vertex in the vertex buffer.
			</summary> 
			<param name="num_vertex"> Number of vertices comprising the strip. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.addTriangleQuads(int)">
			<summary>
			Adds a given number of quadrilaterals to the dynamic mesh. This method does not add vertices, rather it allocates indices, for which vertices should be then created with one of the addVertex*() methods. Indices will point to vertices starting from the current last vertex in the vertex buffer.
			</summary> 
			<param name="num_quads"> Number of quadrilaterals to be added. </param> 
		</member>
		<member name="M:Unigine.MeshDynamic.saveState(Unigine.Ptr{Unigine.Stream})">
			<summary>
			Saves the current state of the dynamic mesh (vertices, indices, etc.) to the specified stream.					Saving into the stream requires creating a blob to save into. To restore the saved state the restoreState() method is used:
			</summary> 
			<param name="stream"> Stream to which the state of the dynamic mesh is to be saved. </param> 
			<returns>true if the current state of the dynamic mesh is saved successfully; otherwise, false.</returns>
		</member>
		<member name="M:Unigine.MeshDynamic.restoreState(Unigine.Ptr{Unigine.Stream})">
			<summary>
			Restores a previously saved state of the dynamic mesh (vertices, indices, etc.) from the specified stream.					Restoring from the stream requires creating a blob to save into and saving the state using the saveState() method:
			</summary> 
			<param name="stream"> Stream from which the previously saved state of the dynamic mesh is to be loaded. </param> 
			<returns>true if a previously saved state of the dynamic mesh is restored successfully; otherwise, false.</returns>
		</member>
		<member name="F:Unigine.MeshDynamic.IMMUTABLE_VERTEX">
			<summary>
			Vertex buffer will be created in GPU memory as an unmodifiable resource.
		</summary>
		</member>
		<member name="F:Unigine.MeshDynamic.IMMUTABLE_INDICES">
			<summary>
			Index buffer will be created in GPU memory as an unmodifiable resource.
		</summary>
		</member>
		<member name="F:Unigine.MeshDynamic.IMMUTABLE_ALL">
			<summary>
			Vertex and index buffers will be created in GPU memory as unmodifiable resources.
		</summary>
		</member>
		<member name="F:Unigine.MeshDynamic.DYNAMIC_VERTEX">
			<summary>
			Vertex buffer will be created in GPU memory as a dynamic resource.
		</summary>
		</member>
		<member name="F:Unigine.MeshDynamic.DYNAMIC_INDICES">
			<summary>
			Index buffer will be created in GPU memory as a dynamic resource.
		</summary>
		</member>
		<member name="F:Unigine.MeshDynamic.DYNAMIC_ALL">
			<summary>
			Vertex and index buffers will be created in GPU memory as dynamic resources.
		</summary>
		</member>
		<member name="F:Unigine.MeshDynamic.FLUSH_VERTEX">
			<summary>
			Data on updated vertices will be sent from CPU to GPU.
		</summary>
		</member>
		<member name="F:Unigine.MeshDynamic.FLUSH_INDICES">
			<summary>
			Data on updated indices will be sent from CPU to GPU.
		</summary>
		</member>
		<member name="F:Unigine.MeshDynamic.FLUSH_ALL">
			<summary>
			Data on updated vertices and indices will be sent from CPU to GPU.
		</summary>
		</member>
		<member name="F:Unigine.MeshDynamic.TYPE_HALF">
			<summary>
			Half-precision floating-point data type.
		</summary>
		</member>
		<member name="F:Unigine.MeshDynamic.TYPE_FLOAT">
			<summary>
			Floating-point data type.
		</summary>
		</member>
		<member name="F:Unigine.MeshDynamic.TYPE_UCHAR">
			<summary>
			Unsigned character data type.
		</summary>
		</member>
		<member name="F:Unigine.MeshDynamic.TYPE_USHORT">
			<summary>
			Unsigned short data type.
		</summary>
		</member>
		<member name="F:Unigine.MeshDynamic.NUM_TYPES">
			<summary>
			Number of data types.
		</summary>
		</member>
		<member name="F:Unigine.MeshDynamic.MODE_POINTS">
			<summary>
			Mode to render the points.
		</summary>
		</member>
		<member name="F:Unigine.MeshDynamic.MODE_LINES">
			<summary>
			Mode to render the lines.
		</summary>
		</member>
		<member name="F:Unigine.MeshDynamic.MODE_TRIANGLES">
			<summary>
			Mode to render the triangles.
		</summary>
		</member>
		<member name="F:Unigine.MeshDynamic.MODE_TRIANGLE_PATCHES">
			<summary>
			Mode to render the triangle patches.
		</summary>
		</member>
		<member name="F:Unigine.MeshDynamic.MODE_QUAD_PATCHES">
			<summary>
			Mode to render the quad patches.
		</summary>
		</member>
		<member name="F:Unigine.MeshDynamic.NUM_MODES">
			<summary>
			Number of rendering modes.
		</summary>
		</member>
	</members>
</doc>
<?xml version='1.0'?>
<doc>
	<assembly>
		<name>Unigine</name>
	</assembly>
	<members>
		<member name="M:Unigine.Convex.#ctor">
			<summary>
			Constructor. Initializes the new convex shape by clearing data of the prevoius shape.
			</summary>  
		</member>
		<member name="M:Unigine.Convex.#ctor(Convex)">
			<summary>
			Constructor. Initializes the new convex shape using the given shape.
			</summary> 
			<param name="convex"> Input convex shape. </param> 
		</member>
		<member name="M:Unigine.Convex.operator=(Convex)">
			<summary>
			Sets the concave shape to be equal the given convex shape.
			</summary> 
			<param name="convex"> Convex shape. </param> 
			<returns>Resulting convex shape.</returns>
		</member>
		<member name="M:Unigine.Convex.clear">
			<summary>
			Clears the data of the prevoius convex shape.
			</summary>  
		</member>
		<member name="M:Unigine.Convex.create(Unigine.vec3,int,float)">
			<summary>
			Creates the convex shape using the given vertices.
			</summary> 
			<param name="v"> Vertices. </param>
			<param name="num_vertex"> Number of vertices. </param>
			<param name="error"> Convex generation distance error.Bigger values of the distance error increase the generation speed (values in rage [0..1]). </param> 
			<returns>true if the shape was successfully created; otherwise false.</returns>
		</member>
		<member name="M:Unigine.Convex.create(Unigine.dvec3,int,float)">
			<summary>
			Creates the convex shape using the given vertices.
			</summary> 
			<param name="v"> Vertices. </param>
			<param name="num_vertex"> Number of vertices. </param>
			<param name="error"> Error. </param> 
			<returns>true if the shape was successfully created; otherwise false.</returns>
		</member>
		<member name="M:Unigine.Convex.getNumVertex const">
			<summary>
			Returns the number of vertices this convex shape consists of.
			</summary>  
			<returns>Number of vertices.</returns>
		</member>
		<member name="M:Unigine.Convex.getVertex const">
			<summary>
			Returns the pointer to the array of vertices for the convex shape.
			</summary>  
			<returns>Pointer to the array of vertices.</returns>
		</member>
		<member name="M:Unigine.Convex.getVertex(int) const">
			<summary>
			Returns the vertex with the given number.
			</summary> 
			<param name="num"> Number of the vertex. </param> 
			<returns>Resulting vertex.</returns>
		</member>
		<member name="M:Unigine.Convex.getNumFaces const">
			<summary>
			Returns the number of faces for this convex shape.
			</summary>  
			<returns>Number of faces.</returns>
		</member>
		<member name="M:Unigine.Convex.getNumFaceVertex(int) const">
			<summary>
			Returns the number of vertices for the given face.
			</summary> 
			<param name="face"> Number of the face. </param> 
			<returns>Number of vertices.</returns>
		</member>
		<member name="M:Unigine.Convex.getFaceVertex(int,int) const">
			<summary>
			Returns the specified vertex of the specified face.
			</summary> 
			<param name="face"> Face of the convex shape. </param>
			<param name="num"> Number of the vertex. </param> 
			<returns>Index of the vertex.</returns>
		</member>
		<member name="M:Unigine.Convex.getVolume const">
			<summary>
			Returns the convex shape's volume.
			</summary>  
			<returns>Convex shape's volume.</returns>
		</member>
		<member name="M:Unigine.Convex.getThreshold const">
			<summary>
			Returns the distance threshold.
			</summary>  
			<returns>Distance threshold.</returns>
		</member>
		<member name="M:Unigine.Convex.getCenter const">
			<summary>
			Returns the center of the convex shape.
			</summary>  
			<returns>Center of the convex shape.</returns>
		</member>
		<member name="M:Unigine.Convex.getInertia const">
			<summary>
			Returns the inertia matrix.
			</summary>  
			<returns>Inertia matrix.</returns>
		</member>
		<member name="M:Unigine.Convex.getClosestPoint(Unigine.dvec3) const">
			<summary>
			Returns the closest convex shape's point to the given point.
			</summary> 
			<param name="point"> Given point. </param> 
			<returns>Closest point (inside or on the edge of the convex shape).</returns>
		</member>
		<member name="M:Unigine.Convex.getBoundBox(Unigine.dvec3,Unigine.dvec3) const">
			<summary>
			Calculates the concave shape's bounding box (minimum and maximum vertices).
			</summary> 
			<param name="min"> Minimum vertex of the shape. </param>
			<param name="max"> Maximum vertex of the shape. </param> 
		</member>
	</members>
</doc>
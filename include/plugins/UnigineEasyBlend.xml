<?xml version='1.0'?>
<doc>
	<assembly>
		<name>Unigine</name>
	</assembly>
	<members>
		<member name="M:Unigine.Plugins.EasyBlend.setEnabled(bool)">
			<summary>
			Enables or disables the EasyBlend plugin.
			</summary> 
			<param name="enabled"> true to enable the plugin; false to disable it. </param> 
		</member>
		<member name="M:Unigine.Plugins.EasyBlend.isEnabled const">
			<summary>
			Returns a value indicating whether the EasyBlend plugin is enabled.
			</summary>  
			<returns>true if the to enable the EasyBlend plugin is enabled; otherwise, false.</returns>
		</member>
		<member name="M:Unigine.Plugins.EasyBlend.setCalibrationFile(char)">
			<summary>
			Sets a path to a new *.ol calibration file with projection settings to be used. This method can be used to switch to another calibration file at run time (e.g., to switch from pilot to copilot).					The path to calibration file can also be set via the following command-line option: -calibration_file &lt;path_to_calibration_file&gt;.
			</summary> 
			<param name="file_name"> Path to *.ol calibration file to be set. Both relative and absolute paths are supported. </param> 
		</member>
		<member name="M:Unigine.Plugins.EasyBlend.setAuxRotation(Unigine.Math.quat)">
			<summary>
			Sets auxiliary rotation for the projection.
			</summary> 
			<param name="rotation"> Quaternion representing auxiliary rotation of the projection to be set. </param> 
		</member>
		<member name="M:Unigine.Plugins.EasyBlend.getAuxRotation">
			<summary>
			Returns the current auxiliary rotation for the projection.
			</summary>  
			<returns>Quaternion representing current auxiliary rotation of the projection.</returns>
		</member>
		<member name="M:Unigine.Plugins.EasyBlend.setEyepoint(Unigine.Math.dvec3)">
			<summary>
			Sets new eyepoint coordinates.
			</summary> 
			<param name="eyepoint"> Three-component vector with new eyepoint coordinates along X, Y, and Z axes to be set. </param> 
		</member>
		<member name="M:Unigine.Plugins.EasyBlend.getEyepoint const">
			<summary>
			Returns the current eyepoint coordinates.
			</summary>  
			<returns>Three-component vector with the current eyepoint coordinates along X, Y, and Z axes.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getCoordinateUnits">
			<summary>
			Returns the unit coordinates type.
			</summary>  
			<returns>Unit coordinates.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getDatabaseOrigin">
			<summary>
			Returns the database origin type.
			</summary>  
			<returns>Database origin.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getDeltaX">
			<summary>
			Returns the Delta X value of the database.
			</summary>  
			<returns>Delta X value.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getDeltaY">
			<summary>
			Returns the Delta Y value of the database.
			</summary>  
			<returns>Delta Y value.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getDeltaZ">
			<summary>
			Returns the Delta Z value of the database.
			</summary>  
			<returns>Delta Z value.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getEarthModel">
			<summary>
			Returns the Earth model type.
			</summary>  
			<returns>Earth model. </returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getEditDate">
			<summary>
			Returns date and time of last revision.
			</summary>  
			<returns>Date and time of last revision.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getEditRevision">
			<summary>
			Returns the edit revision level.
			</summary>  
			<returns>Edit revision level.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getFormatRevision">
			<summary>
			Returns the format revision level.
			</summary>  
			<returns>Format revision level.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getLightAmbientColor(int)">
			<summary>
			Returns the light ambient color.
			</summary> 
			<param name="num"> Light ID number. </param> 
			<returns>Light ambient color.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getLightConstantAttenuation(int)">
			<summary>
			Returns the constant light attenuation value.
			</summary> 
			<param name="num"> Light ID number. </param> 
			<returns>Constant light attenuation value.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getLightDiffuseColor(int)">
			<summary>
			Returns the light diffuse color.
			</summary> 
			<param name="num"> Light ID number. </param> 
			<returns>Light diffuse color.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getLightFalloffAngle(int)">
			<summary>
			Returns the light falloff angle value for the light.
			</summary> 
			<param name="num"> Light ID number. </param> 
			<returns>Light falloff angle value.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getLightFalloffExponent(int)">
			<summary>
			Returns the light falloff exponent value for the light.
			</summary> 
			<param name="num"> Light ID number. </param> 
			<returns>Light falloff exponent.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getLightLinearAttenuation(int)">
			<summary>
			Returns the linear light attenuation value.
			</summary> 
			<param name="num"> Light ID number. </param> 
			<returns>Linear light attenuation value.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getLightName(int)">
			<summary>
			Returns the string with the light name.
			</summary> 
			<param name="num"> Light ID number. </param> 
			<returns>Light name.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getLightQuadraticAttenuation(int)">
			<summary>
			Returns the quadratic light attenuation value for point and spot lights.
			</summary> 
			<param name="num"> Light ID number. </param> 
			<returns>Quadratic light attenuation value.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getLightSpecularColor(int)">
			<summary>
			Returns the light specular color.
			</summary> 
			<param name="num"> Light ID number. </param> 
			<returns>Light specular color.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getLightType(int)">
			<summary>
			Returns the type of the light.
			</summary> 
			<param name="num"> Light ID number. </param> 
			<returns>Light type.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getLowerLatitude">
			<summary>
			Returns the Lambert lower latitude.
			</summary>  
			<returns>Lower latitude.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getMajorAxis">
			<summary>
			Returns the Earth major axis.
			</summary>  
			<returns>Earth major axis.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getMaterialAlpha(int)">
			<summary>
			Returns the material Alpha value.
			</summary> 
			<param name="num"> Material ID number. </param> 
			<returns>Alpha value.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getMaterialColor(int,int)">
			<summary>
			Returns the material color value.
			</summary> 
			<param name="num"> Material ID number. </param>
			<param name="property"> Material property. </param> 
			<returns>Material color.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getMaterialImage(int,int)">
			<summary>
			Returns a string with the material image directory.
			</summary> 
			<param name="num"> Material ID number. </param>
			<param name="property"> Material property. </param> 
			<returns>Material image.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getMaterialName(int)">
			<summary>
			Returns the string with the material name.
			</summary> 
			<param name="num"> Material ID number. </param> 
			<returns>Material name.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getMaterialOffset(int)">
			<summary>
			Returns the material offset value.
			</summary> 
			<param name="num"> Material ID number. </param> 
			<returns>Offset value.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getMaterialValue(int,int)">
			<summary>
			Returns the value of the material.
			</summary> 
			<param name="num"> Material ID number. </param>
			<param name="parameter"> Parameter ID number. </param> 
			<returns>Material value.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getMesh(int,Unigine.Ptr{Unigine.Mesh},float)">
			<summary>
			Copies the FLT mesh into the specified one with the given scale.
			</summary> 
			<param name="num"> Mesh ID number. </param>
			<param name="mesh"> Mesh, into which the given mesh is copied. </param>
			<param name="scale"> The mesh scale. </param> 
			<returns>1 if the mesh is copied successfully; otherwise, 0.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getMeshName(int)">
			<summary>
			Returns the string with the mesh name.
			</summary> 
			<param name="num"> Mesh ID number. </param> 
			<returns>Mesh name.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getMeshSurfaceEnabled(int,int)">
			<summary>
			Returns the value indicating if the mesh surface is enabled.
			</summary> 
			<param name="num"> Mesh ID number. </param>
			<param name="surface"> Surface ID number. </param> 
			<returns>1 if the surface is enabled, otherwise - 0.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getMeshSurfaceMaterial(int,int)">
			<summary>
			Returns the mesh surface material.
			</summary> 
			<param name="num"> Mesh ID number. </param>
			<param name="surface"> Surface ID number. </param> 
			<returns>Surface material.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getMeshSurfaceMaxFadeDistance(int,int)">
			<summary>
			Returns the mesh surface maximum fade distance.
			</summary> 
			<param name="num"> Mesh ID number. </param>
			<param name="surface"> Surface ID number. </param> 
			<returns>Mesh surface maximum fade distance.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getMeshSurfaceMaxVisibleDistance(int,int)">
			<summary>
			Returns the mesh surface maximum visible distance.
			</summary> 
			<param name="num"> Mesh ID number. </param>
			<param name="surface"> Surface ID number. </param> 
			<returns>Mesh surface maximum visible distance.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getMeshSurfaceMinFadeDistance(int,int)">
			<summary>
			Returns the mesh surface minimum fade distance.
			</summary> 
			<param name="num"> Mesh ID number. </param>
			<param name="surface"> Surface ID number. </param> 
			<returns>Mesh surface minimum fade distance.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getMeshSurfaceMinVisibleDistance(int,int)">
			<summary>
			Returns the mesh surface minimum visible distance.
			</summary> 
			<param name="num"> Mesh ID number. </param>
			<param name="surface"> Surface ID number. </param> 
			<returns>Mesh surface minimum visible distance.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getMeshSurfaceName(int,int)">
			<summary>
			Returns the string with the mesh surface name.
			</summary> 
			<param name="num"> Mesh ID number. </param>
			<param name="surface"> Surface ID number. </param> 
			<returns>Surface name.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getMinorAxis">
			<summary>
			Returns the Earth minor axis.
			</summary>  
			<returns>Earth minor axis.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getNodeChild(int,int)">
			<summary>
			Returns the child node for the specified node.
			</summary> 
			<param name="num"> Node ID number. </param>
			<param name="child"> Child ID number. </param> 
			<returns>Child node.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getNodeEnabled(int)">
			<summary>
			Returns the value indicating if the node is enabled.
			</summary> 
			<param name="num"> Node ID number. </param> 
			<returns>1 if the node is enabled, otherwise - 0.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getNodeLight(int)">
			<summary>
			Returns the node light type.
			</summary> 
			<param name="num"> Node ID number. </param> 
			<returns>Node light type.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getNodeMesh(int)">
			<summary>
			Returns the node mesh.
			</summary> 
			<param name="num"> Node ID number. </param> 
			<returns>Node mesh.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getNodeName(int)">
			<summary>
			Returns the string with the name of the node.
			</summary> 
			<param name="num"> Node ID number. </param> 
			<returns>Node name.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getNodeParent(int)">
			<summary>
			Returns the parent of the specified node.
			</summary> 
			<param name="num"> Node ID number. </param> 
			<returns>Parent node.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getNodePivot(int)">
			<summary>
			Returns the node pivot point.
			</summary> 
			<param name="num"> Node ID number. </param> 
			<returns>Pivot point.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getNodeTransform(int,float)">
			<summary>
			Returns a transformation matrix of the specified node.
			</summary> 
			<param name="num"> Node ID number. </param>
			<param name="scale"> Transformation scale. </param> 
			<returns>Transformation matrix.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getNortheastLatitude">
			<summary>
			Returns the Northeast corner latitude.
			</summary>  
			<returns>Northeast corner latitude.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getNortheastLongitude">
			<summary>
			Returns the Northeast corner longitude.
			</summary>  
			<returns>Northeast corner longitude.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getNumLights">
			<summary>
			Returns the number of lights.
			</summary>  
			<returns>Number of lights.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getNumMaterials">
			<summary>
			Returns the number of materials.
			</summary>  
			<returns>Number of materials.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getNumMeshes">
			<summary>
			Returns the number of meshes.
			</summary>  
			<returns>Number of meshes.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getNumMeshSurfaces(int)">
			<summary>
			Returns the number of mesh surfaces.
			</summary> 
			<param name="num"> Mesh ID number. </param> 
			<returns>Number of mesh surfaces.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getNumNodeChildren(int)">
			<summary>
			Returns the number of node children.
			</summary> 
			<param name="num"> Node ID number. </param> 
			<returns>Number of node children.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getNumNodeChilds(int)">
			<summary>
			Returns the number of node children.					The function lang="cpp" is deprecated. It is provided to keep your code working until the next release. Please, replace it with getNumNodeChildren().
			</summary> 
			<param name="num"> Node ID number. </param> 
			<returns>Number of node children.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getNumNodes">
			<summary>
			Returns the number of nodes.
			</summary>  
			<returns>Number of nodes.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getNumPivots">
			<summary>
			Returns the number of pivots.
			</summary>  
			<returns>Number of pivots.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getOriginLatitude">
			<summary>
			Returns the origin latitude.
			</summary>  
			<returns>Origin latitude.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getOriginLongitude">
			<summary>
			Returns the origin longitude.
			</summary>  
			<returns>Origin longitude.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getPivotLocalTransform(int)">
			<summary>
			Returns the local transformation matrix.
			</summary> 
			<param name="num"> Pivot ID number. </param> 
			<returns>Local transformation matrix.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getPivotPivotTransform(int)">
			<summary>
			Returns the pivot transformation matrix.
			</summary> 
			<param name="num"> Pivot ID number. </param> 
			<returns>Pivot transformation matrix.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getProjectionType">
			<summary>
			Returns the projection type.
			</summary>  
			<returns>Projection type.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getRadius">
			<summary>
			Returns the radius - distance from database origin to the farthest corner.
			</summary>  
			<returns>Radius value.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getSouthwestLatitude">
			<summary>
			Returns the Southwest corner latitude.
			</summary>  
			<returns>Southwest corner latitude.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getSouthwestLongitude">
			<summary>
			Returns the Southwest corner longitude.
			</summary>  
			<returns>Southwest corner longitude.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getSouthwestX">
			<summary>
			Returns the Southwest database X-coordinate.
			</summary>  
			<returns>Southwest database X-coordinate.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getSouthwestY">
			<summary>
			Returns the Southwest database Y-coordinate.
			</summary>  
			<returns>Southwest database Y-coordinate.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getUpperLatitude">
			<summary>
			Returns the Lambert upper latitude.
			</summary>  
			<returns>Upper latitude.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.getUTMZone">
			<summary>
			Returns the UTM zone (for UTM projections - negative value means Southern hemisphere).
			</summary>  
			<returns>UTM zone.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.clear">
			<summary>
			Clears all the data associated with the class.
			</summary>  
		</member>
		<member name="M:Unigine.OpenFlightImport.import(int)">
			<summary>
			Imports the FLT scene.
			</summary> 
			<param name="flags"> Import flags. </param> 
			<returns>1 if the operation was successful, otherwise - 0.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.load(string)">
			<summary>
			Loads the scene from the FLT file.
			</summary> 
			<param name="name"> File name. </param> 
			<returns>1 if the operation was successful, otherwise - 0.</returns>
		</member>
		<member name="M:Unigine.OpenFlightImport.OpenFlightImport">
			<summary>
			Constructor. Creates an empty instance.
			</summary>  
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_IMPORT_LIGHT_INFINITE">
			<summary>
			Infinite light.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_IMPORT_LIGHT_LOCAL">
			<summary>
			Local light.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_IMPORT_LIGHT_SPOT">
			<summary>
			Spot light.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_IMPORT_MERGE_GROUP">
			<summary>
			Group flag.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_IMPORT_MERGE_LOD">
			<summary>
			LOD flag.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_IMPORT_MERGE_OBJECT">
			<summary>
			Objects flag.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_IMPORT_PARAMETER_ALPHA">
			<summary>
			Alpha component.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_IMPORT_PARAMETER_AMBIENT">
			<summary>
			Ambient component.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_IMPORT_PARAMETER_BUMPMAP">
			<summary>
			Bump map component.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_IMPORT_PARAMETER_DETAIL">
			<summary>
			Detail component.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_IMPORT_PARAMETER_DIFFUSE">
			<summary>
			Diffuse component.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_IMPORT_PARAMETER_EMISSIVE">
			<summary>
			Emission component.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_IMPORT_PARAMETER_NORMALMAP">
			<summary>
			Normal map component.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_IMPORT_PARAMETER_REFLECTION">
			<summary>
			Reflection component.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_IMPORT_PARAMETER_SHININESS">
			<summary>
			Shininess component.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_IMPORT_PARAMETER_SPECULAR">
			<summary>
			Specular component.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_MODEL_BESSEL">
			<summary>
			Bessel Earth model.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_MODEL_CLARKE">
			<summary>
			Clark 1866 Earth model.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_MODEL_NAD27">
			<summary>
			NAD27 Earth model.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_MODEL_USER">
			<summary>
			User Earth model.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_MODEL_WGS72">
			<summary>
			WGS72 Earth model.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_MODEL_WGS84">
			<summary>
			WGS84 Earth model.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_ORIGIN_CIV">
			<summary>
			Database General Electric CIV/CV/PT2000 origin.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_ORIGIN_CTA5A6">
			<summary>
			Database Evans and Sutherland CT5A/CT6 origin.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_ORIGIN_DIG12">
			<summary>
			Database DIGI/DIGII origin.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_ORIGIN_GDF">
			<summary>
			Database Evans and Sutherland GDF origin.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_ORIGIN_OPEN_FLIGHT">
			<summary>
			Database OpenFlight origin.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_ORIGIN_PSP_DIG">
			<summary>
			Database PSP DIG origin.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_PROJECTION_FLAT_EARTH">
			<summary>
			Flat Earth projection type.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_PROJECTION_GEOCENTRIC">
			<summary>
			Geocentric projection type.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_PROJECTION_GEODETIC">
			<summary>
			Geodetic projection type.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_PROJECTION_LAMBERT">
			<summary>
			Lambert projection type.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_PROJECTION_ROUND_EARTH">
			<summary>
			Round Earth projection type.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_PROJECTION_TRAPEZOIDAL">
			<summary>
			Trapezoidal projection type.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_PROJECTION_UTM">
			<summary>
			UTM projection type.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_UNIT_FEET">
			<summary>
			Feet vertex coordinate unit.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_UNIT_INCHES">
			<summary>
			Inches vertex coordinate unit.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_UNIT_KILOMETERS">
			<summary>
			Kilometers vertex coordinate unit.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_UNIT_METERS">
			<summary>
			Meters vertex coordinate unit.
		</summary>
		</member>
		<member name="F:Unigine.OpenFlightImport.OPEN_FLIGHT_UNIT_NAUTICAL_MILES">
			<summary>
			Nautical miles vertex coordinate unit.
		</summary>
		</member>
	</members>
</doc>
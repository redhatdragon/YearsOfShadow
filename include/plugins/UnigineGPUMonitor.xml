<?xml version='1.0'?>
<doc>
	<assembly>
		<name>Unigine</name>
	</assembly>
	<members>
		<member name="M:Unigine.Plugins.GPUMonitor.getName const">
			<summary>
			Returns the name of the currently used GPU.
			</summary>  
			<returns>Name of the currently used GPU</returns>
		</member>
		<member name="M:Unigine.Plugins.GPUMonitor.getNumAdapters const">
			<summary>
			Returns the number of adapters on the system.
			</summary>  
			<returns>Number of adapters</returns>
		</member>
		<member name="M:Unigine.Plugins.GPUMonitor.getAdapterName(int) const">
			<summary>
			Returns the display adapter name based on its ordinal number.
			</summary> 
			<param name="num"> Ordinal number that denotes the display adapter. The minimum value for this parameter is 0, and the maximum value for this parameter is one less than the value returned by getNumAdapters(). </param> 
			<returns>Display adapter name</returns>
		</member>
		<member name="M:Unigine.Plugins.GPUMonitor.getCoreClock(int) const">
			<summary>
			Returns core clock of the selected adapter.
			</summary> 
			<param name="num"> Ordinal number that denotes the display adapter. The minimum value for this parameter is 0, and the maximum value for this parameter is one less than the value returned by getNumAdapters(). </param> 
			<returns>Core clock, i.e. frequency, at which the GPU is running.</returns>
		</member>
		<member name="M:Unigine.Plugins.GPUMonitor.getMemoryClock(int) const">
			<summary>
			Returns memory clock of the selected adapter.
			</summary> 
			<param name="num"> Ordinal number that denotes the display adapter. The minimum value for this parameter is 0, and the maximum value for this parameter is one less than the value returned by getNumAdapters(). </param> 
			<returns>Memory clock, i.e. how fast the GPU memory is running</returns>
		</member>
		<member name="M:Unigine.Plugins.GPUMonitor.getShaderClock(int) const">
			<summary>
			Returns shader clock of the selected adapter.
			</summary> 
			<param name="num"> Ordinal number that denotes the display adapter. The minimum value for this parameter is 0, and the maximum value for this parameter is one less than the value returned by getNumAdapters(). </param> 
			<returns>Shader clock, i.e. frequency, at which shader processing units operate</returns>
		</member>
		<member name="M:Unigine.Plugins.GPUMonitor.getTemperature(int) const">
			<summary>
			Returns the GPU temperature of the selected adapter.
			</summary> 
			<param name="num"> Ordinal number that denotes the display adapter. The minimum value for this parameter is 0, and the maximum value for this parameter is one less than the value returned by getNumAdapters(). </param> 
			<returns>GPU temperature</returns>
		</member>
		<member name="M:Unigine.Plugins.GPUMonitor.getUtilization(int) const">
			<summary>
			Returns the rate of GPU utilization, in percent, of the selected adapter.
			</summary> 
			<param name="num"> Ordinal number that denotes the display adapter. The minimum value for this parameter is 0, and the maximum value for this parameter is one less than the value returned by getNumAdapters(). </param> 
			<returns>GPU utilization rate, in percent</returns>
		</member>
		<member name="M:Unigine.Plugins.GPUMonitor.getMaxTemperature">
			<summary>
			Returns maximum GPU temperature.
			</summary>  
			<returns>Maximum GPU temperature</returns>
		</member>
		<member name="M:Unigine.Plugins.GPUMonitorPlugin.getUpdateRate(int) const">
			<summary>
			Returns the number of updates per second for the selected monitor.
			</summary> 
			<param name="num"> Ordinal number that denotes the monitor. The minimum value for this parameter is 0, and the maximum value for this parameter is one less than the value returned by getNumMonitors(). </param> 
			<returns>Number of updates per second for the selected monitor.</returns>
		</member>
		<member name="M:Unigine.Plugins.GPUMonitorPlugin.setUpdateRate(int)">
			<summary>
			Sets the number of updates per second.
			</summary> 
			<param name="rate"> Number of updates per second </param> 
		</member>
		<member name="M:Unigine.Plugins.GPUMonitorPlugin.getNumMonitors const">
			<summary>
			Returns the number of monitors.
			</summary>  
			<returns>Number of monitors.</returns>
		</member>
		<member name="M:Unigine.Plugins.GPUMonitorPlugin.getMonitor(int) const">
			<summary>
			Returns the interface of the selected GPUMonitor.
			</summary> 
			<param name="num"> Ordinal number that denotes the monitor. The minimum value for this parameter is 0, and the maximum value for this parameter is one less than the value returned by getNumMonitors(). </param> 
			<returns>Interface of the selected GPUMonitor</returns>
		</member>
	</members>
</doc>
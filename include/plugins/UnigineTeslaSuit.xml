<?xml version='1.0'?>
<doc>
	<assembly>
		<name>Unigine</name>
	</assembly>
	<members>
		<member name="M:Unigine.Plugins.TeslaSuitGeneral.setErrorsLog(bool)">
			<summary>
			Enables or disables logging of errors.
			</summary> 
			<param name="flag"> true — enable, false — disable </param> 
		</member>
		<member name="M:Unigine.Plugins.TeslaSuitGeneral.isErrorsLog">
			<summary>
			Checks if logging of errors is enabled.
			</summary>  
			<returns>true — enabled, false — disabled</returns>
		</member>
		<member name="M:Unigine.Plugins.TeslaSuitGeneral.getSuitManager">
			<summary>
			Returns the SuitManager interface.
			</summary>  
			<returns>SuitManager interface</returns>
		</member>
		<member name="M:Unigine.Plugins.TeslaSuitGeneral.getFullVersion">
			<summary>
			Returns the TESLASUIT API version.
			</summary>  
			<returns>TESLASUIT API version</returns>
		</member>
		<member name="M:Unigine.Plugins.TeslaSuitGeneral.codeToString(unsignedint)">
			<summary>
			Returns an ASCII string describing result of a function execution based on passed Result Code of the function.
			</summary> 
			<param name="code"> TSP_ code of API functions </param> 
			<returns>ASCII string describing result of a function execution</returns>
		</member>
		<member name="M:Unigine.Plugins.TeslaSuitGeneral.getConnectedSuits">
			<summary>
			Returns IDs of connected TESLASUITs.
			</summary>  
			<returns>IDs of connected TESLASUITs</returns>
		</member>
		<member name="M:Unigine.Plugins.TeslaSuitGeneral.loadAsset(String,bool,bool,short)">
			<summary>
			Loads and parses a haptic asset in Haptic Player. The loaded asset can be played by given ID.
			</summary> 
			<param name="path"> Path to the haptic asset </param>
			<param name="isStatic"> Flag that defines whether the asset should be removed after being played </param>
			<param name="isLoop"> Flag that defines whether the asset playback is looped </param>
			<param name="layer"> Layer of haptic mapping </param> 
			<returns>Haptic asset ID that is used for further processing</returns>
		</member>
		<member name="M:Unigine.Plugins.TeslaSuitGeneral.removeAsset(unsignedlonglong,bool)">
			<summary>
			Removes a haptic asset.
			</summary> 
			<param name="assetId"> ID of a loaded asset </param>
			<param name="immediately"> if true, the asset is removed immediately; if false, the asset is removed after it has been played </param> 
			<returns>A code that describes the result of function execution, one of the following TSP_ values: TS_SUCCESS, TS_FAIL_ARG, TS_FAIL_SH_MEM, TS_FAIL_QUEUE_1, TS_FAIL_QUEUE_2.</returns>
		</member>
		<member name="M:Unigine.Plugins.TeslaSuitGeneral.createMaterial(unsignedlonglong,unsignedlonglong)">
			<summary>
			Creates a haptic material from the loaded haptic sample and haptic effect. Haptic materials are used to invoke the haptic response upon the hit events.
			</summary> 
			<param name="playId"> ID of the loaded haptic sample to be used in the haptic material </param>
			<param name="effectId"> ID of the loaded haptic effect to be used in the haptic material </param> 
			<returns>ID of the created haptic material for further processing</returns>
		</member>
		<member name="M:Unigine.Plugins.TeslaSuitGeneral.updateMasterMul(TeslaSuitGeneral::MasterMulConf)">
			<summary>
			Sets the new value of the master multiplier for the haptic power that is applied to all connected suits.
			</summary> 
			<param name="mul"> The new value of the master multiplier for the haptic power. It is applied to all connected suits </param> 
			<returns>A code that describes the result of function execution, one of the following TSP_ values: TS_SUCCESS, TS_FAIL_SH_MEM, TS_FAIL_QUEUE_1, TS_FAIL_QUEUE_2.</returns>
		</member>
		<member name="M:Unigine.Plugins.TeslaSuitGeneral.getMasterMultiplier(unsignedint)">
			<summary>
			Returns the current value of the master multiplier of the haptic power.
			</summary> 
			<param name="code"> A code that describes the result of function execution, one of the following TSP_ values: TS_SUCCESS, TS_FAIL_ARG, TS_FAIL_SH_MEM, TS_FAIL_QUEUE_1, TS_FAIL_QUEUE_2. </param> 
			<returns>The value of the master multiplier</returns>
		</member>
		<member name="M:Unigine.Plugins.TeslaSuitGeneral.subMasterMultiplierUpdate">
			<summary>
			Creates the subscription to the master multiplier updates.
			</summary>  
			<returns>A code that describes the result of function execution, one of the following TSP_ values: TS_SUCCESS, TS_FAIL_STARTED, TS_FAIL_ARG, TS_FAIL_SH_MEM, TS_FAIL_QUEUE_1, TS_FAIL_QUEUE_2.</returns>
		</member>
		<member name="M:Unigine.Plugins.TeslaSuitGeneral.isServiceRunning">
			<summary>
			Returns teslasuit.service status.
			</summary>  
			<returns>true, if the service is running, false, if the service is stopped</returns>
		</member>
		<member name="M:Unigine.Plugins.TeslaSuitGeneral.serviceStart">
			<summary>
			Starts teslasuit.service.
			</summary>  
			<returns>true, if the service is started, otherwise false</returns>
		</member>
		<member name="M:Unigine.Plugins.TeslaSuitGeneral.serviceStop">
			<summary>
			Stops teslasuit.service.
			</summary>  
			<returns>true, if the service is stopped, otherwise false</returns>
		</member>
		<member name="M:Unigine.Plugins.TeslaSuitGeneral.serviceRestart">
			<summary>
			Restarts teslasuit.service.
			</summary>  
			<returns>true, if the service is restarted, otherwise false</returns>
		</member>
		<member name="F:Unigine.Plugins.TeslaSuitGeneral.MASTER_MULTIPLIER_UPDATE">
			<summary>
			The callback that is invoked when a value of the master multiplier changes.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.TeslaSuitGeneral.NUM_CALLBACKS">
			<summary>
			Callback counter.
		</summary>
		</member>
		<member name="M:Unigine.Plugins.Suit.getID">
			<summary>
			Returns the ID of TESLASUIT.
			</summary>  
			<returns>TESLASUIT ID.</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.getName">
			<summary>
			Returns the name of TESLASUIT.
			</summary>  
			<returns>TESLASUIT name.</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.getSerial">
			<summary>
			Returns a serial number of TESLASUIT.
			</summary>  
			<returns>TESLASUIT serial number</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.getSSID">
			<summary>
			Returns SSID of TESLASUIT.
			</summary>  
			<returns>TESLASUIT SSID</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.getUserNetworkSSID">
			<summary>
			Returns SSID of the network, to which TESLASUIT is connected.
			</summary>  
			<returns>SSID of a network, to which TESLASUIT is connected</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.getHardwareVersion">
			<summary>
			Returns a hardware version of the connected TESLASUIT.
			</summary>  
			<returns>TESLASUIT hardware version, one of the TSP_SUIT_HARDWARE_VERSION values</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.getFirmwareVersion">
			<summary>
			Returns a firmware version of the connected TESLASUIT.
			</summary>  
			<returns>TESLASUIT firmware version</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.getSize">
			<summary>
			Returns the size of TESLASUIT.
			</summary>  
			<returns>Size of TESLASUIT, one of the TSP_SUIT_SIZE values</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.getSex">
			<summary>
			Returns the model of TESLASUIT.
			</summary>  
			<returns>Model of TESLASUIT, one of the TSP_SUIT_SEX values</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.getKit">
			<summary>
			Returns values of the TESLASUIT parts that are available for TESLASUIT.
			</summary>  
			<returns>TSP_SUIT_KIT values of the TESLASUIT parts that are available</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.getInfo">
			<summary>
			Returns all available information about the suit including its name, serial number, SSIDs, hardware and firmware version, size, sex, and kit.
			</summary>  
			<returns>All available information about the suit</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.getConnectQuality">
			<summary>
			Returns quality of Wi-Fi connection quality for TESLASUIT.
			</summary>  
			<returns>Quality of the Wi-Fi connection of TESLASUIT, one of the TSP_CONNECT_QUALITY values</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.playAsset(unsignedlonglong)">
			<summary>
			Plays a loaded haptic asset.
			</summary> 
			<param name="id"> Asset ID </param> 
			<returns>A code that describes the result of function execution, one of the following TSP_ values: TS_SUCCESS, TS_FAIL_ARG, TS_FAIL_SUIT, TS_FAIL_SH_MEM, TS_FAIL_QUEUE_1, TS_FAIL_QUEUE_2.</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.stopAsset(unsignedlonglong)">
			<summary>
			Stops playback of a haptic asset.
			</summary> 
			<param name="id"> Asset ID </param> 
			<returns>A code that describes the result of function execution, one of the following TSP_ values: TS_SUCCESS, TS_FAIL_ARG, TS_FAIL_SUIT, TS_FAIL_SH_MEM, TS_FAIL_QUEUE_1, TS_FAIL_QUEUE_2.</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.pausedAsset(unsignedlonglong,bool)">
			<summary>
			Pauses/resumes playback of a haptic asset.
			</summary> 
			<param name="assetId"> Asset ID </param>
			<param name="isPaused"> true — pause, false — resume playing </param> 
			<returns>A code that describes the result of function execution, one of the following TSP_ values: TS_SUCCESS, TS_FAIL_ARG, TS_FAIL_SUIT, TS_FAIL_SH_MEM, TS_FAIL_QUEUE_1, TS_FAIL_QUEUE_2.</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.loopedAsset(unsignedlonglong,bool)">
			<summary>
			Enables/disables playback looping of a haptic asset.
			</summary> 
			<param name="assetId"> Asset ID </param>
			<param name="isLooped"> true — looped playback, false — normal playback </param> 
			<returns>A code that describes the result of function execution, one of the following TSP_ values: TS_SUCCESS, TS_FAIL_ARG, TS_FAIL_SUIT, TS_FAIL_SH_MEM, TS_FAIL_QUEUE_1, TS_FAIL_QUEUE_2.</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.isPlayingAsset(unsignedlonglong)">
			<summary>
			Checks if the haptic asset is currently playing.
			</summary> 
			<param name="assetId"> Asset ID. </param> 
			<returns>true, if the asset is currently playing, false, if the asset is not playing at the moment.</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.stopAssets">
			<summary>
			Stops playback of all haptic assets for this TESLASUIT.
			</summary>  
			<returns>A code that describes the result of function execution, one of the following TSP_ values: TS_SUCCESS, TS_FAIL_ARG, TS_FAIL_SUIT, TS_FAIL_SH_MEM, TS_FAIL_QUEUE_1, TS_FAIL_QUEUE_2.</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.pausedAssets(bool)">
			<summary>
			Pauses/resumes playback of all haptic assets for the TESLASUIT.
			</summary> 
			<param name="isPaused"> true — pause, false — resume playing. </param> 
			<returns>A code that describes the result of function execution, one of the following TSP_ values: TS_SUCCESS, TS_FAIL_ARG, TS_FAIL_SUIT, TS_FAIL_SH_MEM, TS_FAIL_QUEUE_1, TS_FAIL_QUEUE_2.</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.getPlayingAsset">
			<summary>
			Returns a list of the haptic assets that are currently played on the TESLASUIT.
			</summary>  
			<returns>Array of haptic asset IDs</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.getAssetInfo(unsignedlonglong)">
			<summary>
			Returns the haptic asset information.
			</summary> 
			<param name="assetId"> ID of a loaded asset </param> 
			<returns>Information about a haptic asset:ID of the loaded assetCurrent playback time of the assetDuration of the asset, in millisecondsFlag that defines whether the asset should be removed after being playedFlag that defines whether the asset playback is loopedFlag that defines whether the asset is played at the momentType of a loaded asset: Touch, Effect (Fx), Sample, Channel, Preset, Track, Animation, Material</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.clearAssets">
			<summary>
			Removes all loaded haptic assets for the TESLASUIT.
			</summary>  
			<returns>A code that describes the result of function execution, one of the following TSP_ values: TS_SUCCESS, TS_FAIL_ARG, TS_FAIL_SUIT, TS_FAIL_SH_MEM, TS_FAIL_QUEUE_1, TS_FAIL_QUEUE_2.</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.getSourceMapID">
			<summary>
			Returns ID of a source mapping.
			</summary>  
			<returns>ID of a source mapping</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.removeHitMap(unsignedlonglong)">
			<summary>
			Removes a hit mapping for TESLASUIT with the given ID.
			</summary> 
			<param name="mapId"> ID of the hit mapping to be removed </param> 
			<returns>A code that describes the result of function execution, one of the following TSP_ values: TS_SUCCESS, TS_FAIL_ARG, TS_FAIL_SUIT, TS_FAIL_SH_MEM, TS_FAIL_QUEUE_1, TS_FAIL_QUEUE_2.</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.buildAssetForMap(unsignedlonglong,unsignedlonglong)">
			<summary>
			Builds an asset for a loaded mapping.
			</summary> 
			<param name="mapId"> ID of a loaded mapping </param>
			<param name="assetId"> ID of a loaded asset </param> 
			<returns>A code that describes the result of function execution, one of the following TSP_ values: TS_SUCCESS, TS_FAIL_ARG, TS_FAIL_SUIT, TS_FAIL_SH_MEM, TS_FAIL_QUEUE_1, TS_FAIL_QUEUE_2.</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.getMapPolyCount(unsignedlonglong,short)">
			<summary>
			Returns the count of mapping polygons.
			</summary> 
			<param name="mapId"> ID of a loaded mapping, from which the count of polygons should be received </param>
			<param name="layer"> ID of a layer of the mapping </param> 
			<returns>Count of mapping polygons</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.getMapPolygons(unsignedlonglong,short)">
			<summary>
			Returns mapping polygons.
			</summary> 
			<param name="mapId"> ID of a loaded mapping, from which the count of polygons should be received </param>
			<param name="layer"> ID of a layer of the mapping </param> 
			<returns>Array of polygons</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.cachePoly(unsignedlonglong,Unigine.Vector{Unigine.Math.vec2,int,Unigine.VectorAllocator})">
			<summary>
			Caches a polygon shape for further processing.
			</summary> 
			<param name="mapId"> ID of a loaded mapping. </param>
			<param name="points"> Points of the polygon. </param> 
			<returns>ID of cached polygon shape.</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.cacheCircle(unsignedlonglong,Unigine.Math.vec2,float)">
			<summary>
			Caches a circle shape for further processing.
			</summary> 
			<param name="mapId"> ID of a loaded mapping </param>
			<param name="center"> Coordinates of the center of a circle </param>
			<param name="radius"> A value of a circle radius </param> 
			<returns>ID of cached shape</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.cachePoint(unsignedlonglong,Unigine.Math.vec2)">
			<summary>
			Caches a point for further processing.
			</summary> 
			<param name="mapId"> ID of a loaded mapping </param>
			<param name="point"> Coordinates of the point </param> 
			<returns>ID of cached shape.</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.hapticPointHit(unsignedlonglong,Unigine.Vector{Suit::point_hit,int,Unigine.VectorAllocator})">
			<summary>
			Hit event. Plays haptic feedback basing on the point, mapping and material.
			</summary> 
			<param name="mapId"> ID of a loaded mapping </param>
			<param name="hits"> A buffer of points, in which the hit should be played </param> 
			<returns>A code that describes the result of function execution, one of the following TSP_ values: TS_SUCCESS, TS_FAIL_ARG, TS_FAIL_SUIT, TS_FAIL_SH_MEM, TS_FAIL_QUEUE_1, TS_FAIL_QUEUE_2.</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.hapticCircleHit(unsignedlonglong,Unigine.Vector{Suit::circle_hit,int,Unigine.VectorAllocator})">
			<summary>
			Hit event. Plays haptic feedback basing on circle shapes, mapping and material.
			</summary> 
			<param name="mapId"> ID of a loaded mapping </param>
			<param name="hits"> A buffer of circle shapes, in which the hit should be played </param> 
			<returns>A code that describes the result of function execution, one of the following TSP_ values: TS_SUCCESS, TS_FAIL_ARG, TS_FAIL_SUIT, TS_FAIL_SH_MEM, TS_FAIL_QUEUE_1, TS_FAIL_QUEUE_2.</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.hapticPolyHit(unsignedlonglong,Unigine.Vector{Suit::poly_hit,int,Unigine.VectorAllocator})">
			<summary>
			Hit event. Plays haptic feedback basing on polygon shapes, mapping and material.
			</summary> 
			<param name="mapId"> ID of a loaded mapping </param>
			<param name="hits"> A buffer of polygon shapes, in which the hit should be played </param> 
			<returns>A code that describes the result of function execution, one of the following TSP_ values: TS_SUCCESS, TS_FAIL_ARG, TS_FAIL_SUIT, TS_FAIL_SH_MEM, TS_FAIL_QUEUE_1, TS_FAIL_QUEUE_2.</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.hapticCacheHit(unsignedlonglong,Unigine.Vector{Suit::cache_hit,int,Unigine.VectorAllocator})">
			<summary>
			Hit event. Plays haptic feedback basing on the cached shapes.
			</summary> 
			<param name="mapId"> ID of a loaded mapping </param>
			<param name="hits"> A buffer of cashed shapes </param> 
			<returns>A code that describes the result of function execution, one of the following TSP_ values: TS_SUCCESS, TS_FAIL_ARG, TS_FAIL_SUIT, TS_FAIL_SH_MEM, TS_FAIL_QUEUE_1, TS_FAIL_QUEUE_2.</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.updateMul(unsignedlonglong,unsignedlonglong,Suit::mul_conf)">
			<summary>
			Sets multipliers for frequency, amplitude and pulse width parameters of the haptic asset. All multipliers should lie in the [0, 1] interval.
			</summary> 
			<param name="mapId"> Loaded mapping ID </param>
			<param name="assetId"> ID of a haptic asset, for which the multipliers should be set </param>
			<param name="mul"> Structure that stores multipliers </param> 
			<returns>A code that describes the result of function execution, one of the following TSP_ values: TS_SUCCESS, TS_FAIL_ARG, TS_FAIL_SUIT, TS_FAIL_SH_MEM, TS_FAIL_QUEUE_1, TS_FAIL_QUEUE_2.</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.mocapUpdatableStart(Suit::mocap_opt)">
			<summary>
			Starts updatable streaming of mocap data from TESLASUIT. When you use this function, all data is streamed in the TSMocapData struct. To stream data from earlier hardware versions, use mocapStart() or mocapStartExtended() instead. To get motion data, pass the callback that is invoked each time when the mocap data is updated. Call mocapStop() to stop updatable streaming of mocap data.					To use this function, the hardware version of the suit should be 4.5.4 or higher.
			</summary> 
			<param name="opt"> Structure that stores frame rate and sensors mask of the mocap data </param> 
			<returns>A code that describes the result of function execution, one of the following TSP_ values: TS_SUCCESS, TS_FAIL_ARG, TS_FAIL_SUIT, TS_FAIL_SH_MEM, TS_FAIL_QUEUE_1, TS_FAIL_QUEUE_2, TS_FAIL_MOCAP_1, TS_FAIL_MOCAP_3.</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.mocapStart">
			<summary>
			Starts streaming of Mocap data from TESLASUIT. When you use this function, only mocap_bone_index and quat (9-axis) are streamed in the TSFifoData struct. To stream all data, use mocapStartExtended() instead. To get motion data, pass the callback that is invoked each time that Mocap data is updated. Call mocapStop() to stop Mocap data streaming. It is recommended to stop streaming of extended Mocap data from the same suit before calling the function, as well as streaming of GSR and ECG data.
			</summary>  
			<returns>A code that describes the result of function execution, one of the following TSP_ values: TS_SUCCESS, TS_FAIL_ARG, TS_FAIL_SUIT, TS_FAIL_SH_MEM, TS_FAIL_QUEUE_1, TS_FAIL_QUEUE_2, TS_FAIL_MOCAP_1.</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.mocapStartExtended">
			<summary>
			Starts streaming of Mocap extended data from TESLASUIT. When you use this function, all data is streamed in the TSFifoData struct. To stream only mocap_bone_index and quat (9-axis), use mocapStart() instead. To get motion data, pass the callback that is invoked each time that Mocap data is updated. Call ts_mocap_stop_extended() to stop Mocap extended data streaming. It is recommended to stop streaming of Mocap data from the same suit before calling the function, as well as streaming of GSR and ECG data.					This function is available only for TESLASUITs with hardware version 4.5.2 or earlier.
			</summary>  
			<returns>A code that describes the result of function execution, one of the following TSP_ values: TS_SUCCESS, TS_FAIL_ARG, TS_FAIL_SUIT, TS_FAIL_SH_MEM, TS_FAIL_QUEUE_1, TS_FAIL_QUEUE_2, TS_FAIL_MOCAP_1.</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.mocapStop">
			<summary>
			Stops streaming of Mocap data from TESLASUIT.
			</summary>  
			<returns>A code that describes the result of function execution, one of the following TSP_ values: TS_SUCCESS, TS_FAIL_SUIT, TS_FAIL_SH_MEM, TS_FAIL_QUEUE_1, TS_FAIL_QUEUE_2, TS_FAIL_MOCAP_2.</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.mocapStopExtended">
			<summary>
			Stops streaming of mocap extended data from TESLASUIT.					This function is available only for TESLASUITs with hardware version 4.5.2 or earlier.
			</summary>  
			<returns>A code that describes the result of function execution, one of the following TSP_ values: TS_SUCCESS, TS_FAIL_SUIT, TS_FAIL_SH_MEM, TS_FAIL_QUEUE_1, TS_FAIL_QUEUE_2, TS_FAIL_MOCAP_2.</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.updateMocapFreq(Suit::TSP_MOCAP_FREQ)">
			<summary>
			Sets frames per second rate of the mocap data streaming for TESLASUIT.
			</summary> 
			<param name="freq"> Mocap frame rate to be set </param> 
			<returns>A code that describes the result of function execution, one of the following TSP_ values: TS_SUCCESS, TS_FAIL_ARG, TS_FAIL_SUIT.</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.updateMocapOptions(Suit::mocap_opt)">
			<summary>
			Sets the frame rate and sensors mask of the mocap data streaming from TESLASUIT. To use this function, the hardware version of the suit must be 4.5.4 or higher.
			</summary> 
			<param name="opt"> Structure that stores frame rate and sensors mask of the mocap data </param> 
			<returns>A code that describes the result of function execution, one of the following TSP_ values: TS_SUCCESS, TS_FAIL_ARG.</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.biometryStartEcg">
			<summary>
			Starts streaming of ECG data from TESLASUIT. To get ECG data, pass the callback that is invoked each time that ECG data is updated. Call biometryStopEcg() to stop ECG data streaming.
			</summary>  
			<returns>A code that describes the result of function execution, one of the following TSP_ values: TS_SUCCESS, TS_FAIL_ARG, TS_FAIL_SUIT, TS_FAIL_SH_MEM, TS_FAIL_QUEUE_1, TS_FAIL_QUEUE_2, TS_FAIL_ECG_1.</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.biometryStopEcg">
			<summary>
			Stops streaming of ECG data from TESLASUIT.
			</summary>  
			<returns>A code that describes the result of function execution, one of the following TSP_ values: TS_SUCCESS, TS_FAIL_SUIT, TS_FAIL_SH_MEM, TS_FAIL_QUEUE_1, TS_FAIL_QUEUE_2, TS_FAIL_ECG_2.</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.biometryStartGsr">
			<summary>
			Starts streaming of GSR data from TESLASUIT. To get GSR data, pass the callback that is invoked each time that GSR data is updated. Call biometryStopGsr() to stop GSR data streaming.
			</summary>  
			<returns>A code that describes the result of function execution, one of the following TSP_ values: TS_SUCCESS, TS_FAIL_ARG, TS_FAIL_SUIT, TS_FAIL_SH_MEM, TS_FAIL_QUEUE_1, TS_FAIL_QUEUE_2, TS_FAIL_GSR_1.</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.biometryStopGsr">
			<summary>
			Stops streaming of GSR data from TESLASUIT.
			</summary>  
			<returns>A code that describes the result of function execution, one of the following TSP_ values: TS_SUCCESS, TS_FAIL_SUIT, TS_FAIL_SH_MEM, TS_FAIL_QUEUE_1, TS_FAIL_QUEUE_2, TS_FAIL_GSR_2.</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.updateEcgFreq(Suit::TSP_ECG_FREQ)">
			<summary>
			Sets frames per second rate of ECG data streaming for TESLASUIT.
			</summary> 
			<param name="freq"> ECG streaming rate </param> 
			<returns>A code that describes the result of function execution, one of the following TSP_ values: TS_SUCCESS, TS_FAIL_ARG, TS_FAIL_SUIT.</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.updateGsrFreq(Suit::TSP_GSR_FREQ)">
			<summary>
			Sets frames per second rate of GSR data streaming for TESLASUIT.
			</summary> 
			<param name="freq"> GSR streaming rate </param> 
			<returns>A code that describes the result of function execution, one of the following TSP_ values: TS_SUCCESS, TS_FAIL_ARG, TS_FAIL_SUIT.</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.subCurrentFeedback">
			<summary>
			Creates a subscription on the current feedback callbacks. Every time a measurement is taken, the TSOnCurrentFeedbackUpdate callback occurs.
			</summary>  
			<returns>A code that describes the result of function execution, one of the following TSP_ values: TS_SUCCESS, TS_FAIL_ARG, TS_FAIL_CURRENT_FEEDBACK_1.</returns>
		</member>
		<member name="M:Unigine.Plugins.Suit.unsubCurrentFeedback">
			<summary>
			Deletes a subscription on the current feedback callbacks.
			</summary>  
			<returns>A code that describes the result of function execution, one of the following TSP_ values: TS_SUCCESS, TS_FAIL_ARG, TS_FAIL_CURRENT_FEEDBACK_2.</returns>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_HIT_POLYGON_SIZE">
			<summary>
			Size of the array of TSPoint2D that form a polygon.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_NODE_COUNT">
			<summary>
			Number of nodes in the array.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_CHANNEL_COUNT">
			<summary>
			Number of channels in the array.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_NODE_MODULES_COUNT">
			<summary>
			Number of node modules in the array.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_MOTION_DATA_BUFFER_SIZE">
			<summary>
			Size of the array of buffered motion data.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_ECG_BUFFER_SIZE">
			<summary>
			Size of the array of buffered ECG data.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_GSR_CHANNELS_BUFFER_SIZE">
			<summary>
			Size of the array of GSR data.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_SUCCESS">
			<summary>
			Function execution was successful.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FAIL">
			<summary>
			Function execution failed due to unknown error.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FAIL_ARG">
			<summary>
			Wrong parameters were passed. Check for nullptr.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FAIL_SH_MEM">
			<summary>
			Could not initialize shared memory. Check TESLASUIT.service status. It must be running.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FAIL_QUEUE_1">
			<summary>
			Could not send the command.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FAIL_QUEUE_2">
			<summary>
			Could not receive the command.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FAIL_STARTED">
			<summary>
			setConnectionListeners() has already been invoked.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FAIL_NOT_STARTED">
			<summary>
			setConnectionListeners() has not been invoked. Nothing to stop.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FAIL_SUIT">
			<summary>
			Could not find suit with given suit ID.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FAIL_MAPPING">
			<summary>
			Incorrect mapping.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FAIL_SERVICE_0">
			<summary>
			Deprecated.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FAIL_SERVICE_1">
			<summary>
			OpenSCManager failed.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FAIL_SERVICE_2">
			<summary>
			OpenService failed.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FAIL_SERVICE_3">
			<summary>
			QueryServiceStatusEx failed.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FAIL_SERVICE_4">
			<summary>
			Could not start the TESLASUIT.service, because it has been already running.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FAIL_SERVICE_5">
			<summary>
			QueryServiceStatusEx failed.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FAIL_SERVICE_6">
			<summary>
			Timeout when changing TESLASUIT.service from stopping to stopped.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FAIL_SERVICE_7">
			<summary>
			StartService failed.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FAIL_SERVICE_8">
			<summary>
			QueryServiceStatusEx failed.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FAIL_SERVICE_9">
			<summary>
			Could not start TESLASUIT.service.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FAIL_SERVICE_10">
			<summary>
			Could not stop TESLASUIT.service, because it has been already stopped.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FAIL_SERVICE_11">
			<summary>
			Timeout when changing TESLASUIT.service status from stopping to stopped.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FAIL_SERVICE_12">
			<summary>
			ControlService failed.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FAIL_MOCAP_1">
			<summary>
			Streaming of Mocap data from TESLASUIT has been already started.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FAIL_MOCAP_2">
			<summary>
			Streaming of Mocap data from TESLASUIT has been already stopped.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FAIL_MOCAP_3">
			<summary>
			The function cannot be used with this version of TESLASUIT hardware. The function requires hardware version 4.5.4 or higher.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FAIL_ECG_1">
			<summary>
			Streaming of ECG data from TESLASUIT has been already started.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FAIL_ECG_2">
			<summary>
				Streaming of ECG data from TESLASUIT has been already stopped.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FAIL_GSR_1">
			<summary>
			Streaming of GSR data from TESLASUIT has been already started.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FAIL_GSR_2">
			<summary>
			Streaming of GSR data from TESLASUIT has been already stopped.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FAIL_CURRENT_FEEDBACK_1">
			<summary>
			Streaming of the current feedback data from TESLASUIT has been already started.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FAIL_CURRENT_FEEDBACK_2">
			<summary>
			Streaming of the current feedback data from TESLASUIT has been already stopped.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_HAPTIC_1">
			<summary>
			Haptic animation is playing.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_UPDATE_FAIL_1">
			<summary>
			Could not update control unit.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FAIL_CALIBRATION_1">
			<summary>
			Haptic calibration is off.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FAIL_CALIBRATION_2">
			<summary>
			Haptic calibration is off.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FAIL_CALIBRATION_3">
			<summary>
			The minimum value of haptic calibration is not set.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FAIL_CALIBRATION_4">
			<summary>
			The maximum value of haptic calibration is not set.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FAIL_CALIBRATION_5">
			<summary>
			Sent calibration value exceed the maximum value.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FAIL_CALIBRATION_6">
			<summary>
			Sent calibration value is less than the minimum value.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_HV_UNKNOWN">
			<summary>
			Unknown version of TESLASUIT hardware.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_HV_4_5_0_0">
			<summary>
			Version 4.5.0.0 of TESLASUIT hardware.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_HV_4_5_1_0">
			<summary>
			Version 4.5.1.0 of TESLASUIT hardware.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_HV_4_5_2_0">
			<summary>
			Version 4.5.2.0 of TESLASUIT hardware.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_HV_4_5_3_0">
			<summary>
			Version 4.5.3.0 of TESLASUIT hardware.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_HV_4_5_4_0">
			<summary>
			Version 4.5.4.0 of TESLASUIT hardware.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_NO_CONNECTION">
			<summary>
			There is no connection.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_BAD">
			<summary>
			Connection quality is poor. Some packages were lost during ping.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_GOOD">
			<summary>
			Connection quality is good. All packages were received during ping.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_SEX_UNKNOWN">
			<summary>
			Unknown model of TESLASUIT.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_MEN">
			<summary>
			Men suit.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_WOMEN">
			<summary>
			Women suit.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_UNISEX">
			<summary>
			Unisex suit.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_SIZE_UNKNOWN">
			<summary>
			Unknown size of TESLASUIT.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_XS">
			<summary>
			XS size of TESLASUIT.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_S">
			<summary>
			S size of TESLASUIT.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_M">
			<summary>
			M size of TESLASUIT.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_L">
			<summary>
			L size of TESLASUIT.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_XL">
			<summary>
			XL size of TESLASUIT.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_XXL">
			<summary>
			2XL size of TESLASUIT.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_KIT_UNKNOWN">
			<summary>
			Unknown kit of TESLASUIT.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_JACKET">
			<summary>
			Jacket is available.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_TROUSES">
			<summary>
			Pants are available.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_GLOVES">
			<summary>
			Gloves are available.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_ENTER">
			<summary>
			Start playing.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_STAY">
			<summary>
			Continue playing.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_EXIT">
			<summary>
			End playing.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_HIT_EVENT_NONE">
			<summary>
			NULL.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_EMPTY">
			<summary>
			Empty asset.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_ANIMATION">
			<summary>
			Animation.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_PRESET">
			<summary>
			Preset.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_EFFECT">
			<summary>
			Effect.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_SAMPLE">
			<summary>
			Sample
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FEEL">
			<summary>
			Touch.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_MATERIAL">
			<summary>
			Material.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FPS_28">
			<summary>
			Mocap frequency rate of 28 frames per second.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FPS_50">
			<summary>
			Mocap frequency rate of 50 frames per second.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FPS_100">
			<summary>
			Mocap frequency rate of 100 frames per second
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_FPS_200">
			<summary>
			Mocap frequency rate of 200 frames per second. This rate can be set only for the suits with the 4.5.4 or higher hardware versions.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_ECG_FPS_5">
			<summary>
			ECG frequency rate of 5 frames per second.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_ECG_FPS_10">
			<summary>
			ECG frequency rate of 10 frames per second.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_ECG_FPS_20">
			<summary>
			ECG frequency rate of 20 frames per second.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_GSR_FPS_10">
			<summary>
			GSR frequency rate of 10 frames per second
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_GSR_FPS_20">
			<summary>
			GSR frequency rate of 20 frames per second.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_GSR_FPS_40">
			<summary>
			GSR frequency rate of 40 frames per second.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.TSP_GSR_FPS_60">
			<summary>
			GSR frequency rate of 60 frames per second
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.CONNECTED">
			<summary>
			Enables notifications on the suit connection event.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.DISCONNECTED">
			<summary>
			Enables notifications on the suit disconnection event.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.MOCAP_DATA_UPDATE">
			<summary>
			Callback that is invoked every time when the mocap data changes. It is used when the hardware version of TESLASUIT is 4.5.4 or higher.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.MOCAP_UPDATE">
			<summary>
			Callback that is invoked every time when the mocap data changes.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.ECG_UPDATE">
			<summary>
			Callback that is invoked every time ECG data changes.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.GSR_UPDATE">
			<summary>
			Callback that is invoked every time GSR data changes.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.CURRENT_FEEDBACK_UPDATE">
			<summary>
			Type of callback that is invoked every time when the current feedback data is updated.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Suit.NUM_CALLBACKS">
			<summary>
			Callback counter.
		</summary>
		</member>
		<member name="M:Unigine.Plugins.SuitManager.getSuit(SuitManager::SUIT_NUM)">
			<summary>
			Returns the interface of the specified suit.
			</summary> 
			<param name="num"> Suit number, one of the SUIT_ values </param> 
			<returns>Suit interface</returns>
		</member>
		<member name="M:Unigine.Plugins.SuitManager.getSuitByID(unsignedlonglong)">
			<summary>
			Returns the interface of the suit, the ID of which is specified.
			</summary> 
			<param name="id"> Suit ID </param> 
			<returns>Suit interface</returns>
		</member>
		<member name="M:Unigine.Plugins.SuitManager.getConnectedSuits">
			<summary>
			Returns IDs of connected TESLASUITs.
			</summary>  
			<returns>Connected TESLASUITs</returns>
		</member>
		<member name="F:Unigine.Plugins.SuitManager.CONNECTED">
			<summary>
			Enables notifications on the suit connection event.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.SuitManager.DISCONNECTED">
			<summary>
			Enables notifications on the suit disconnection event.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.SuitManager.NUM_CALLBACKS">
			<summary>
			Callback counter.
		</summary>
		</member>
	</members>
</doc>
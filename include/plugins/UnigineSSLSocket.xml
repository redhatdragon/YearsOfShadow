<?xml version='1.0'?>
<doc>
	<assembly>
		<name>Unigine</name>
	</assembly>
	<members>
		<member name="M:Unigine.Plugins.SSLSocket.open(int)">
			<summary>
			Opens the socket on a given port. When the socket receives data, packets from all network interfaces will be received. When the socket sends data, the default IP address will be used.
			</summary> 
			<param name="port"> Port number, on which the socket will be opened. </param> 
			<returns>1 if the socket is opened successfully; otherwise, 0.</returns>
		</member>
		<member name="M:Unigine.Plugins.SSLSocket.open(char,int)">
			<summary>
			Opens the socket on a given port. When the socket receives data, packets from all network interfaces will be received. When the socket sends data, the default IP address will be used.
			</summary> 
			<param name="host"> Host name, on which the socket will be opened. </param>
			<param name="port"> Port number, on which the socket will be opened. </param> 
			<returns>1 if the socket is opened successfully; otherwise, 0.</returns>
		</member>
		<member name="M:Unigine.Plugins.SSLSocket.close">
			<summary>
			Closes the socket.
			</summary>  
			<returns>1 if the socket is closed successfully; otherwise, 0.</returns>
		</member>
		<member name="M:Unigine.Plugins.SSLSocket.bind">
			<summary>
			Binds the socket to an address figured out from the host used for socket initialization.
			</summary>  
			<returns>1 if the address is bound; otherwise, 0.</returns>
		</member>
		<member name="M:Unigine.Plugins.SSLSocket.listen(int)">
			<summary>
			Makes the socket listen to connections.
			</summary> 
			<param name="num"> Maximum number of pending connections. </param> 
			<returns>1 if the socket has started listening; otherwise, 0.</returns>
		</member>
		<member name="M:Unigine.Plugins.SSLSocket.accept(SSLSocketInterface)">
			<summary>
			Accepts a connection on the socket.
			</summary> 
			<param name="socket"> Socket that is bound to an address and listens to connections. </param> 
			<returns>1 if the connection is accepted; otherwise, 0.</returns>
		</member>
		<member name="M:Unigine.Plugins.SSLSocket.connect">
			<summary>
			Initiates a connection on the socket.
			</summary>  
			<returns>1 if the connection is initialized; otherwise, 0.</returns>
		</member>
		<member name="M:Unigine.Plugins.SSLSocket.nonblock">
			<summary>
			Makes the socket a non-blocking one.
			</summary>  
			<returns>1 if the socket has become non-blocking; otherwise, 0.</returns>
		</member>
		<member name="M:Unigine.Plugins.SSLSocket.block">
			<summary>
			Sets up a blocking socket.
			</summary>  
			<returns>1 if the socket is opened; otherwise, 0.</returns>
		</member>
		<member name="M:Unigine.Plugins.SSLSocket.load(SSLSocketInterface::LOADER_TYPE,char,char)">
			<summary>
			Loads a certificate from the file.
			</summary> 
			<param name="type"> Certificate type, one of the LOADER_TYPE values. </param>
			<param name="name"> Certificate file name. </param>
			<param name="password"> Certificate password. </param> 
			<returns>1 if the certificate is loaded successfully, otherwise 0.</returns>
		</member>
		<member name="M:Unigine.Plugins.SSLSocket.parse(SSLSocketInterface::LOADER_TYPE,char,char)">
			<summary>
			Parses a specified certificate.
			</summary> 
			<param name="type"> Certificate type, one of the LOADER_TYPE values. </param>
			<param name="source"> Certificate source. </param>
			<param name="password"> Certificate password. </param> 
			<returns>1 if the certificate is loaded successfully, otherwise 0.</returns>
		</member>
		<member name="M:Unigine.Plugins.SSLSocket.getHandshake">
			<summary>
			Checks if the handshake is successful.
			</summary>  
			<returns>1 if the handshake is successful, otherwise 0.</returns>
		</member>
		<member name="M:Unigine.Plugins.SSLSocket.getInfo(SSLSocketInterface::X509_NAME_TYPE)">
			<summary>
			Returns information about the certificate: organization or host name, depending on the argument.
			</summary> 
			<param name="info"> Type of information to be obtained, one of the X509_NAME_TYPE values. </param> 
			<returns>Information about the certificate issuer.</returns>
		</member>
		<member name="M:Unigine.Plugins.SSLSocket.getHost">
			<summary>
			Returns the socket address.
			</summary>  
			<returns>Host name</returns>
		</member>
		<member name="M:Unigine.Plugins.SSLSocket.getPort">
			<summary>
			Returns the port number of the socket.
			</summary>  
			<returns>Port number</returns>
		</member>
		<member name="M:Unigine.Plugins.SSLSocket.isOpened">
			<summary>
			Checks if the socket has been opened.
			</summary>  
			<returns>1 if the socket is opened; otherwise, 0.</returns>
		</member>
		<member name="M:Unigine.Plugins.SSLSocket.isAvailable">
			<summary>
			Checks if the socket has been established, but not opened.
			</summary>  
			<returns>1 if the socket is available; otherwise, 0.</returns>
		</member>
		<member name="M:Unigine.Plugins.SSLSocket.getStream">
			<summary>
			Returns a stream to read or write data via SSL.
			</summary>  
			<returns>Stream to read or write data via SSL.</returns>
		</member>
		<member name="F:Unigine.Plugins.SSLSocket.LOADER_TYPE_RSA_KEY">
			<summary>
			RSA key.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.SSLSocket.LOADER_TYPE_X509_CERT">
			<summary>
			Self-signed X.509 certificate.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.SSLSocket.LOADER_TYPE_X509_CACERT">
			<summary>
			X.509 certificate issued by a Certification Agency.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.SSLSocket.X509_NAME_TYPE_CERT_COMMON_NAME">
			<summary>
			Server name protected by a self-signed certificate.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.SSLSocket.X509_NAME_TYPE_CERT_ORGANIZATION">
			<summary>
			Name of the organization protected by a self-signed certificate.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.SSLSocket.X509_NAME_TYPE_CA_CERT_COMMON_NAME">
			<summary>
			Server name protected by a server certificate issued by the Certification Agency.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.SSLSocket.X509_NAME_TYPE_CA_CERT_ORGANIZATION">
			<summary>
			Name of the organization for which the SSL certificate is issued by the Certification Agency.
		</summary>
		</member>
		<member name="M:Unigine.Plugins.SSLSocketPlugin.createSSLSocket">
			<summary>
			Creates an SSLsocket and returns its interface.
			</summary>  
			<returns>SSLSocket interface</returns>
		</member>
		<member name="M:Unigine.Plugins.SSLSocketPlugin.deleteSSLSocket(SSLSocketInterface)">
			<summary>
			Deletes an SSLSocket.
			</summary> 
			<param name="socket"> SSLSocket </param> 
		</member>
	</members>
</doc>
<?xml version='1.0'?>
<doc>
	<assembly>
		<name>Unigine</name>
	</assembly>
	<members>
		<member name="M:Unigine.Plugins.Varjo.setViewportMode(Varjo::VIEWPORT)">
			<summary>
			Sets the viewport mode, that determines the type of image to be displayed in the viewport.
			</summary> 
			<param name="mode"> Viewport mode. One of the VIEWPORT variables. </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.getViewportMode const">
			<summary>
			Returns a value indicating the current viewport mode, that determines the type of image to be displayed in the viewport.
			</summary>  
			<returns>Current viewport mode. One of the VIEWPORT variables.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.setHeadPositionLock(bool)">
			<summary>
			Locks the head position.
			</summary> 
			<param name="lock"> true to lock the head position. </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.isHeadPositionLock const">
			<summary>
			Returns the value indicating if the head position is locked.
			</summary>  
			<returns>true if the head position is locked; otherwise - false.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.setHeadRotationLock(bool)">
			<summary>
			Locks the head rotation.
			</summary> 
			<param name="lock"> true to lock the head rotation. </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.isHeadRotationLock const">
			<summary>
			Returns the value indicating if the head rotation is locked.
			</summary>  
			<returns>true if the head rotation is locked; otherwise - false.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.getMaxTrackedDeviceCount const">
			<summary>
			Returns the maximum value of tracked devices.
			</summary>  
			<returns>The maximum value of tracked devices.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.getControllerStateAxisCount const">
			<summary>
			Returns a number of axes.
			</summary>  
			<returns>Number of axes.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.getDevicePose(int)">
			<summary>
			Returns a single pose for a tracked device.
			</summary> 
			<param name="device_num"> Device ID. </param> 
			<returns>Identity matrix.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.getDeviceVelocity(int)">
			<summary>
			Returns a device velocity in tracker space, in meters per second.
			</summary> 
			<param name="device_num"> Device ID. </param> 
			<returns>Velocity.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.getDeviceAngularVelocity(int)">
			<summary>
			Returns a device angular velocity, in radians per second.
			</summary> 
			<param name="device_num"> Device ID. </param> 
			<returns>Angular velocity.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.isDeviceConnected(int)">
			<summary>
			Returns a value indicating if the device connected to the slot.
			</summary> 
			<param name="device_num"> Device ID. </param> 
			<returns>true - connected; false - not connected.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.isPoseValid(int)">
			<summary>
			Returns a value indicating if the device pose is valid.
			</summary> 
			<param name="device_num"> Device ID. </param> 
			<returns>true - valid; false - invalid.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.getTrackingResult(int)">
			<summary>
			Returns the value indicating the tracking result:											Uninitialized						Calibrating in progress						Calibrating out of range						Running correctly						Running out of range
			</summary> 
			<param name="device_num"> Device ID. </param> 
			<returns>Tracking result.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.getDeviceType(int)">
			<summary>
			Returns the device type.
			</summary> 
			<param name="device_num"> Device ID. </param> 
			<returns>Device type, one of the DEVICE variables.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.getDeviceAxisType(int,int)">
			<summary>
			Returns the value that identifies what type of axis is on the indicated controller.
			</summary> 
			<param name="device_num"> Device ID. </param>
			<param name="axis_num"> Axis number. </param> 
			<returns>Axis of a corresponding type. One of the AXIS variables.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.getControllerPacketNum(int)">
			<summary>
			Returns the number of the controller packet.
			</summary> 
			<param name="device_num"> Device ID. </param> 
			<returns>Number of the controller packet.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.getControllerButtonPressed(int,Varjo::BUTTON)">
			<summary>
			Returns the value indicating if the specified button is pressed.
			</summary> 
			<param name="device_num"> Device ID. </param>
			<param name="button"> A button, one of the BUTTON variables. </param> 
			<returns>true if the button is pressed; otherwise - false.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.getControllerButtonTouched(int,Varjo::BUTTON)">
			<summary>
			Returns the value indicating if the specified button is touched.
			</summary> 
			<param name="device_num"> Device ID. </param>
			<param name="button"> A button, one of the BUTTON variables. </param> 
			<returns>true if the button is pressed; otherwise - false.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.getControllerAxis(int,int)">
			<summary>
			Returns the coordinates of the specified controller axis along the X and Y axes.
			</summary> 
			<param name="device_num"> Device ID. </param>
			<param name="axis_num"> Axis number. </param> 
			<returns>X and Y in the range of [-1;1] ([0;1] for a trigger).</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.setControllerVibration(int,unsignedshort)">
			<summary>
			Sets the vibration of the given duration and amplitude.
			</summary> 
			<param name="device_num"> Device ID. </param>
			<param name="duration"> Duration of the vibration. </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.isEyeTrackingValid const">
			<summary>
			Returns the value indicating if eye tracking is valid.
			</summary>  
			<returns>true if eye tracking is valid; otherwise - false.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.getFocusWorldPosition const">
			<summary>
			Returns the position of the eye focus point in world coordinates.
			</summary>  
			<returns>World position of the eye focus point.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.requestCalibration">
			<summary>
			Triggers the gaze calibration sequence, if gaze tracking has been enabled in Varjo settings and the Varjo system is in a state where it can bring up the calibration UI.
			</summary>  
		</member>
		<member name="M:Unigine.Plugins.Varjo.getLeftEyeWorldPosition const">
			<summary>
			Returns the position of the left eye in world coordinates.
			</summary>  
			<returns>World position of the left eye.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.getLeftEyeWorldDirection const">
			<summary>
			Returns the direction vector of the left eye in world coordinates.
			</summary>  
			<returns>Direction vector of the left eye.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.getRightEyeWorldPosition const">
			<summary>
			Returns the position of the right eye in world coordinates.
			</summary>  
			<returns>World position of the right eye.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.getRightEyeWorldDirection const">
			<summary>
			Returns the direction vector of the right eye in world coordinates.
			</summary>  
			<returns>Direction vector of the right eye.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.getGazeWorldDirection const">
			<summary>
			Returns the gaze direction vector, which is a combined value for both eyes, in world coordinates.
			</summary>  
			<returns>Direction vector for both eyes.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.getLeftEyePupilSize const">
			<summary>
			Returns the size of the left eye pupil, the value between 0 and 1 calculated according to the pupil size range detected by the Varjo headset.
			</summary>  
			<returns>The size of the left eye pupil, the value between 0 and 1.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.getRightEyePupilSize const">
			<summary>
			Returns the size of the right eye pupil, the value between 0 and 1 calculated according to the pupil size range detected by the Varjo headset.
			</summary>  
			<returns>The size of the right eye pupil, the value between 0 and 1.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.getCaptureTime const">
			<summary>
			Returns the timestamp of when the data was recorded, in nanoseconds.
			</summary>  
			<returns>Timestamp of when the data was recorded, in nanoseconds.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.getFocusDistance const">
			<summary>
			Returns the distance between the eye and the focus point. It is a value between 0 and 2 meters.
			</summary>  
			<returns>The distance between the eye and the focus point.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.getStability const">
			<summary>
			Returns a value between 0.0 and 1.0 specifying the stability of the user’s focus. 0.0 means not stable and 1.0 means stable.
			</summary>  
			<returns>A value between 0.0 and 1.0 specifying the stability of the user’s focus. 0.0 means not stable and 1.0 means stable.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.getEyeTrackingStatus const">
			<summary>
			Returns a value representing the status of eye tracking in the Varjo headsets.
			</summary>  
			<returns>Value representing the status of eye tracking in the Varjo headsets, one of the EYETRACKING_STATUS variables.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.getLeftEyeStatus const">
			<summary>
			Returns a value representing the tracking status for the left eye.
			</summary>  
			<returns>Value representing the tracking status for the left eye, one of the EYE_STATUS variables.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.getRightEyeStatus const">
			<summary>
			Returns a value representing the tracking status for the right eye.
			</summary>  
			<returns>Value representing the tracking status for the right eye, one of the EYE_STATUS variables.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.getFrameNum const">
			<summary>
			Returns a unique identifier of the frame when the data was recorded.
			</summary>  
			<returns>Unique identifier of the frame when the data was recorded.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.setVisualizerEnabled(bool)">
			<summary>
			Toggles visualizer.
			</summary> 
			<param name="enabled"> true to enable visualizer; false to disable it. </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.isVisualizerEnabled const">
			<summary>
			Returns the value indicating if visualizer is enabled.
			</summary>  
			<returns>true if visualizer is enabled; otherwise - false.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.getControllerRole(int)">
			<summary>
			Returns a specific role associated with a tracked device.
			</summary> 
			<param name="device_num"> Device ID. </param> 
			<returns>Role associated with a tracked device. One of the CONTROLLER_ROLE variables.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.getDeviceManufacturerName(int)">
			<summary>
			Returns the manufacturer name of the specified device.
			</summary> 
			<param name="device"> Device ID. </param> 
			<returns>Manufacturer name.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.getDeviceModelNumber(int)">
			<summary>
			Returns the model number of the specified device.
			</summary> 
			<param name="device"> Device ID. </param> 
			<returns>Model number.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.isMixedRealityAvailable const">
			<summary>
			Returns a value indicating if mixed reality mode is available. Mixed reality enables you to combine real-world view from front-facing cameras mounted on the headset with the VR image rendered.
			</summary>  
			<returns>Flag: true if mixed reality mode is available; otherwise - false.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.setFoveatedRenderingEnabled(bool)">
			<summary>
			Sets a value indicating if foveated rendering is enabled. Foveated rendering makes use of the eye tracking functionality in Varjo headsets to improve performance by reducing the image quality in peripheral areas where the user is not looking. Foveation allows applications to render fewer pixels and achieve a better VR experience.
			</summary> 
			<param name="enabled"> Set true to enable foveated rendering; or false - to disable it. </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.isFoveatedRenderingEnabled const">
			<summary>
			Returns a value indicating if foveated rendering is enabled. Foveated rendering makes use of the eye tracking functionality in Varjo headsets to improve performance by reducing the image quality in peripheral areas where the user is not looking. Foveation allows applications to render fewer pixels and achieve a better VR experience.
			</summary>  
			<returns>Flag: true if foveated rendering is enabled; otherwise - false.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.setAlphaBlend(bool)">
			<summary>
			Sets a value indicating if alpha blending is enabled. This option enables blending VR and AR images using the alpha channel.
			</summary> 
			<param name="blend"> Set true to enable alpha blending; or false - to disable it. </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.isAlphaBlend const">
			<summary>
			Returns a value indicating if alpha blending is enabled. This option enables blending VR and AR images using the alpha channel.
			</summary>  
			<returns>Flag: true if alpha blending is enabled; otherwise - false.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.setAlphaInvert(bool)">
			<summary>
			Sets a value indicating if alpha channel is inverted before using it for blending VR and AR images.
			</summary> 
			<param name="invert"> Set true to use inverted alpha channel inversion; or false - to use alpha channel as is. </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.isAlphaInvert const">
			<summary>
			Returns a value indicating if alpha channel is inverted before using it for blending VR and AR images.
			</summary>  
			<returns>Flag: true if alpha channel inversion is enabled; otherwise - false.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.setVideo(bool)">
			<summary>
			Sets a value indicating if video signal from the real-world view from the front-facing HMD-mounted cameras is enabled. The real-world view is used for combining virtual and real-world elements to create an immersive experience in mixed reality.
			</summary> 
			<param name="video"> Set true to enable the real-world view from the front-facing HMD-mounted cameras; or false - to disable it (VR-only mode). </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.isVideo const">
			<summary>
			Returns a value indicating if video signal from the real-world view from the front-facing HMD-mounted cameras is enabled. The real-world view is used for combining virtual and real-world elements to create an immersive experience in mixed reality.
			</summary>  
			<returns>Flag: true if real-world view from the front-facing HMD-mounted cameras is enabled; otherwise - false (VR-only mode).</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.setDepthTest(bool)">
			<summary>
			Sets a value indicating if depth testing is enabled.
			</summary> 
			<param name="test"> Set true to enable depth testing; or false - to disable it. </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.isDepthTest const">
			<summary>
			Returns a value indicating if depth testing is enabled.
			</summary>  
			<returns>Flag: true if depth testing is enabled; otherwise - false.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.setDepthTestRangeEnabled(bool)">
			<summary>
			Sets a value indicating if depth testing range is enabled. Use DepthTestRange (					Depth Test Near Z, Depth Test Far Z) to control the range for which the depth test is evaluated.
			</summary> 
			<param name="enabled"> Set true to enable depth testing range; or false - to disable it. </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.isDepthTestRangeEnabled const">
			<summary>
			Returns a value indicating if depth testing range is enabled. Use DepthTestRange (					Depth Test Near Z, Depth Test Far Z) to control the range for which the depth test is evaluated.
			</summary>  
			<returns>Flag: true if depth testing range is enabled; otherwise - false.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.setDepthTestRange(Unigine.Math.dvec2)">
			<summary>
			Sets a new depth testing range as a two-component vector.
			</summary> 
			<param name="range"> New depth testing range to be set: (Depth Test Near Z, Depth Test Far Z). The range for each component in meters is[0.0, 50.0]. The default depth test range is set to [0.0, 1.0]. </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.getDepthTestRange const">
			<summary>
			Returns the current depth testing range as a two-component vector.
			</summary>  
			<returns>Current depth testing range: (Depth Test Near Z, Depth Test Far Z). The range for each component in meters is[0.0, 50.0]. The default depth test range is set to [0.0, 1.0].</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.setChromaKey(bool)">
			<summary>
			Sets a value indicating if chroma keying is enabled. Chroma keying is a video technique where a predefined color is replaced with virtual content. Usually the color to be replaced is bright green or bright blue, as those colors contrast the most with human skin.
			</summary> 
			<param name="key"> Set true to enable chroma keying; or false - to disable it. </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.isChromaKey const">
			<summary>
			Returns a value indicating if chroma keying is enabled.
			</summary>  
			<returns>Flag: true if chroma keying is enabled; otherwise - false.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.getChromaKeyConfigNum const">
			<summary>
			Returns the number of chroma key config indices supported. The maximum index will be					count-1.
			</summary>  
			<returns>Number of supported chroma key configs.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.chromaKeyConfigSubmit(int) const">
			<summary>
			Applies the chroma key configuration with the specified index.
			</summary> 
			<param name="index"> Chroma key config index in the range fron 0 toconfig count - 1. </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.getChromaKeyConfigType(int) const">
			<summary>
			Returns the type of the chroma key configuration with the specified index. Each chroma key configuration index has a config type, which can be used to determine if the slot in the current index is being used. Active configurations have the HSV type.
			</summary> 
			<param name="index"> Chroma key config index in the range fron 0 toconfig count - 1. </param> 
			<returns>Chroma key configuration type.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.setChromaKeyConfigType(int,Varjo::CHROMAKEY_TYPE)">
			<summary>
			Sets a new type for the chroma key configuration with the specified index. Each chroma key configuration index has a config type, which can be used to determine if the slot in the current index is being used. Active configurations have the HSV type.
			</summary> 
			<param name="index"> Chroma key config index in the range fron 0 toconfig count - 1. </param>
			<param name="type"> New chroma key configuration type to be set. </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.getChromaKeyConfigFalloff(int) const">
			<summary>
			Returns the current tolerance falloff values for HSV components of the chroma key target color.
			</summary> 
			<param name="index"> Chroma key config index in the range fron 0 toconfig count - 1. </param> 
			<returns>Current tolerance falloff values for HSV components of the chroma key target color. The range for each component is [0.0; 1.0].</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.setChromaKeyConfigFalloff(int,Unigine.Math.vec3)">
			<summary>
			Sets new tolerance falloff values for HSV components of the chroma key target color.
			</summary> 
			<param name="index"> Chroma key config index in the range fron 0 toconfig count - 1. </param>
			<param name="falloff"> New tolerance falloff values to be set for HSV components of the chroma key target color. The range for each component is [0.0; 1.0]. </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.getChromaKeyConfigTargetColor(int) const">
			<summary>
			Returns the current chroma key target color.
			</summary> 
			<param name="index"> Chroma key config index in the range fron 0 toconfig count - 1. </param> 
			<returns>Current chroma key target color in HSV colorspace. The range for each component is [0.0; 1.0].</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.setChromaKeyConfigTargetColor(int,Unigine.Math.vec3)">
			<summary>
			Sets a new chroma key target color.
			</summary> 
			<param name="index"> Chroma key config index in the range fron 0 toconfig count - 1. </param>
			<param name="target_color"> New chroma key target color to be set in HSV colorspace. The range for each component is [0.0; 1.0]. </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.getChromaKeyConfigTolerance(int) const">
			<summary>
			Returns the current tolerance values for HSV components of the chroma key target color.
			</summary> 
			<param name="index"> Chroma key config index in the range fron 0 toconfig count - 1. </param> 
			<returns>Current tolerance values for HSV components of the chroma key target color. The range for each component is [0.0; 1.0].</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.setChromaKeyConfigTolerance(int,Unigine.Math.vec3)">
			<summary>
			Sets new tolerance values for HSV components of the chroma key target color.
			</summary> 
			<param name="index"> Chroma key config index in the range fron 0 toconfig count - 1. </param>
			<param name="tolerance"> New tolerance values for HSV components of the chroma key target color to be set. The range for each component is [0.0; 1.0]. </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.setCameraExposureTime(double)">
			<summary>
			Sets a new exposure time value for the camera.
			</summary> 
			<param name="time"> New exposure time to be set, in frames per second (e.g. 90.0 -&gt; ~11ms). </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.getCameraExposureTime const">
			<summary>
			Returns the current exposure time for the camera.
			</summary>  
			<returns>Current exposure time, in frames per second (e.g. 90.0 -&gt; ~11ms).</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.setCameraExposureTimeAuto const">
			<summary>
			Enables automatic exposure adjustment mode for the camera.
			</summary>  
		</member>
		<member name="M:Unigine.Plugins.Varjo.setCameraExposureTimeManual const">
			<summary>
			Enables manual exposure adjustment mode for the camera. In this mode you can set the desired exposure time correction value manually via the setCameraExposureTime() method.
			</summary>  
		</member>
		<member name="M:Unigine.Plugins.Varjo.isCameraExposureTimeAuto const">
			<summary>
			Returns a value indicating if automatic exposure adjustment mode for the camera is enabled.
			</summary>  
			<returns>true if automatic exposure adjustment mode for the camera is enabled; otherwise - false.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.setCameraWhiteBalance(int)">
			<summary>
			Sets a new white balance correction value for the camera.
			</summary> 
			<param name="balance"> New color temperature value to be set, in Kelvin. </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.getCameraWhiteBalance const">
			<summary>
			Returns the current white balance correction value for the camera.
			</summary>  
			<returns>Current color temperature value, in Kelvin.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.setCameraWhiteBalanceAuto const">
			<summary>
			Enables automatic white balance adjustment mode for the camera.
			</summary>  
		</member>
		<member name="M:Unigine.Plugins.Varjo.setCameraWhiteBalanceManual const">
			<summary>
			Enables manual white balance adjustment mode for the camera. In this mode you can set the desired white balance correction value manually via the getCameraWhiteBalance() method.
			</summary>  
		</member>
		<member name="M:Unigine.Plugins.Varjo.isCameraWhiteBalanceAuto const">
			<summary>
			Returns a value indicating if automatic white balance adjustment mode for the camera is enabled.
			</summary>  
			<returns>true if automatic white balance adjustment mode for the camera is enabled; otherwise - false.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.setCameraISO(int)">
			<summary>
			Sets a new ISO value for the camera.
			</summary> 
			<param name="cameraiso"> New ISO value to be set (e.g., "200" -&gt; ISO200). </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.getCameraISO const">
			<summary>
			Returns the current ISO value for the camera.
			</summary>  
			<returns>Current ISO value set for the camera (e.g., "200" -&gt; ISO200).</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.setCameraISOAuto const">
			<summary>
			Enables automatic ISO adjustment mode for the camera.
			</summary>  
		</member>
		<member name="M:Unigine.Plugins.Varjo.setCameraISOManual const">
			<summary>
			Enables manual ISO adjustment mode for the camera. In this mode you can set the desired ISO value manually via the setCameraISO() method.
			</summary>  
		</member>
		<member name="M:Unigine.Plugins.Varjo.isCameraISOAuto const">
			<summary>
			Returns a value indicating if automatic ISO adjustment mode for the camera is enabled.
			</summary>  
			<returns>true if automatic ISO adjustment mode for the camera is enabled; otherwise - false.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.setCameraFlickerCompensation(int)">
			<summary>
			Sets a new flicker compensation value for the camera. This is useful when using the HMD indoors with mostly artificial light bulbs, which flicker at the frequency of 50Hz or 60Hz and can cause visual flicker artifacts on the video see through image. The correct setting depends on the underlying power grid's frequency. e.g. In most parts of Africa/Asia/Australia/Europe the frequency is 50 Hz and in most parts of North and South America 60 Hz.
			</summary> 
			<param name="compensation"> Flicker compensation value, in Hz (e.g "50" -&gt; compensation for 50 Hz). </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.getCameraFlickerCompensation const">
			<summary>
			Returns the current flicker compensation value for the camera.
			</summary>  
			<returns>Current flicker compensation value, in Hz (e.g "50" -&gt; compensation for 50 Hz).</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.setCameraSharpness(int)">
			<summary>
			Sets a new sharpness filter power value for the camera.
			</summary> 
			<param name="sharpness"> New sharpness filter power value to be set: lowest value (0) corresponds to small amount of filtering and the highest value corresponds to the largest amount of filtering. </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.getCameraSharpness const">
			<summary>
			Returns the current sharpness filter power value for the camera.
			</summary>  
			<returns>Current sharpness filter power value: lowest value (0) corresponds to small amount of filtering and the highest value corresponds to the largest amount of filtering.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.setMarkerTrackingEnabled(bool)">
			<summary>
			Sets a value indicating if marker tracking is enabled.
			</summary> 
			<param name="enabled"> Set true to enable marker tracking; or false - to disable it. </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.isMarkerTrackingEnabled const">
			<summary>
			Returns a value indicating if marker tracking is enabled.
			</summary>  
		</member>
		<member name="M:Unigine.Plugins.Varjo.setMarkerLifetime(float,Unigine.Vector{unsignedlonglong,int,Unigine.VectorAllocator})">
			<summary>
			Sets a lifetime for markers under specified ids.
			</summary> 
			<param name="lifetime"> Lifetime to be set. </param>
			<param name="marker_ids"> Marker ids to receive a new lifetime. </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.setMarkerLifetime(float,unsignedlonglong)">
			<summary>
			Sets a lifetime for a marker under specified id.
			</summary> 
			<param name="lifetime"> Lifetime to be set. </param>
			<param name="marker_id"> A marker id to receive a new lifetime. </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.setMarkerFlags(Varjo::MARKER_FLAGS,Unigine.Vector{unsignedlonglong,int,Unigine.VectorAllocator})">
			<summary>
			Sets the flags for all markers by specified ids.
			</summary> 
			<param name="flags"> New flags to set up. </param>
			<param name="marker_ids"> Marker ids to receive new flags. </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.setMarkerFlags(Varjo::MARKER_FLAGS,unsignedlonglong)">
			<summary>
			Sets the flags for a marker by a specified id.
			</summary> 
			<param name="flags"> New flags to set up. </param>
			<param name="marker_id"> Marker id to receive new flags. </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.getMarkerObjectNum const">
			<summary>
			Returns the number of visible marker objects.
			</summary>  
		</member>
		<member name="M:Unigine.Plugins.Varjo.setStreamEnvironmentCubemapEnabled(bool)">
			<summary>
			Enables or disables the cubemap streaming from AR cameras.
			</summary> 
			<param name="enabled"> true to enable the cubemap streaming; false to disable it. </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.isStreamEnvironmentCubemapEnabled const">
			<summary>
			Returns a value indicating if the cubemap streaming from AR cameras is enabled.
			</summary>  
			<returns>true if the cubemap streaming is enabled; otherwise - false.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.setStreamColorCorrectionEnabled(bool)">
			<summary>
			Enables or disables the AR cameras streaming exposition.
			</summary> 
			<param name="enabled"> true to enable the streaming exposition; false to disable it. </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.isStreamColorCorrectionEnabled const">
			<summary>
			Returns a value indicating if the AR cameras streaming exposition is enabled.
			</summary>  
			<returns>true if the streaming exposition is enabled; otherwise - false.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.setStreamEnvironmentCubemapGGXQuality(float)">
			<summary>
			Sets the quality of the generated GGX mips for the AR cubemap.
			</summary> 
			<param name="quality"> Quality value within the [0.0f; 1.0f] range. </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.getStreamEnvironmentCubemapGGXQuality const">
			<summary>
			Returns the quality of the generated GGX mips for the AR cubemap.
			</summary>  
			<returns>Quality value within the [0.0f; 1.0f] range.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.setViewOffset(double)">
			<summary>
			Sets the eyes view offset.
			</summary> 
			<param name="offset"> View offset. </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.getViewOffset const">
			<summary>
			Returns the eyes view offset.
			</summary>  
			<returns>View offset.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.setStreamEnvironmentCubemapMode(Varjo::ENVIRONMENT_MODE)">
			<summary>
			Sets the mode defining the way the AR texture is set for the environment.
			</summary> 
			<param name="mode"> Environment mode. </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.getStreamEnvironmentCubemapMode const">
			<summary>
			Returns the mode defining the way the AR texture is set for the environment.
			</summary>  
			<returns>Environment mode.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.setStreamEnvironmentCubemapPresetIndex(int)">
			<summary>
			Sets the index of the environment preset to which the texture is set.
			</summary> 
			<param name="index"> Index of the environment preset. </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.getStreamEnvironmentCubemapPresetIndex const">
			<summary>
			Returns the index of the environment preset to which the texture is set.
			</summary>  
			<returns>Index of the environment preset.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.getMarkerObject(int) const">
			<summary>
			Returns the marker object with the specified marker index.
			</summary> 
			<param name="index"> Marker index. </param> 
			<returns>Marker object.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.getHMDName const">
			<summary>
			Returns the current name of the head-mounted display.
			</summary>  
			<returns>HMD name.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.getHMDType const">
			<summary>
			Returns the type of the head-mounted display.
			</summary>  
			<returns>HMD name. One of the HMD_TYPE_* values.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.getHandtrackingOffset const">
			<summary>
			Returns the offset used for hand tracking (offset for the hand position). This is necessary because the head tracking point for your HMD differs from the hand tracking point for Ultraleap.
			</summary>  
			<returns>Hand tracking offset along the axes, in units.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.setMotionPrediction(bool)">
			<summary>
			Enables support for Motion Prediction in Varjo Headsets by allowing engine to submit Velocity from the GBuffer to the Varjo Composer.
			</summary> 
			<param name="prediction"> true to enable support for Motion Prediction; false to disable it. </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.isMotionPrediction const">
			<summary>
			Returns the value indicating if Motion Prediction in Varjo Headsets is enabled.
			</summary>  
			<returns>true if support for Motion Prediction is enabled; otherwise - false.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.setMotionPredictionVelocityPrecision(float)">
			<summary>
			Sets the factor of velocity scale before packing floating point value into 2x8 bit uint.
			</summary> 
			<param name="precision"> The factor of velocity scale before packing floating point value into 2x8 bit uint. </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.getMotionPredictionVelocityPrecision const">
			<summary>
			Returns the factor of velocity scale before packing floating point value into 2x8 bit uint.
			</summary>  
			<returns>The factor of velocity scale before packing floating point value into 2x8 bit uint.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.setMotionPredictionVelocityTimeDelta(float)">
			<summary>
			Sets the factor for optimizing between fast and slow moving objects. Smaller number works better for fast moving objects and vice versa.
			</summary> 
			<param name="delta"> The factor for optimizing between fast and slow moving objects. </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.getMotionPredictionVelocityTimeDelta const">
			<summary>
			Returns the factor for optimizing between fast and slow moving objects.
			</summary>  
			<returns>The factor for optimizing between fast and slow moving objects.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.render(Unigine.Ptr{Player},Unigine.Math.ivec2,bool)">
			<summary>
			</summary>  
		</member>
		<member name="M:Unigine.Plugins.Varjo.setFocusViewportSupersamplingFactor(float)">
			<summary>
			Sets the additional supersampling factor for the Varjo focus viewport.
			</summary> 
			<param name="factor"> Additional supersampling factor, a float value greater than 0. </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.getFocusViewportSupersamplingFactor const">
			<summary>
			Returns the additional supersampling factor for the Varjo focus viewport.
			</summary>  
			<returns>Additional supersampling factor.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.setStreamColorCorrectionWhiteBalanceEnabled(bool)">
			<summary>
			Enables white balance correction for the stream.
			</summary> 
			<param name="enabled"> true to enable white balance correction for the stream; false to disable it. </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.isStreamColorCorrectionWhiteBalanceEnabled const">
			<summary>
			Returns the value indicating if white balance correction for the stream is enabled.
			</summary>  
			<returns>true if white balance correction for the stream is enabled; otherwise - false.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.setBlendMaskingMode(Varjo::BLEND_MASKING_MODE)">
			<summary>
			Sets the mode of the Blend Control Mask that can be used to extend or restrict the chroma-key mask or to control the depth testing against the estimated video depth.
			</summary> 
			<param name="mode"> Masking mode. One of the BLEND_MASKING_MODE variables. </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.getBlendMaskingMode const">
			<summary>
			Returns a value representing the mode of the Blend Control Mask that can be used to extend or restrict the chroma-key mask or to control the depth testing against the estimated video depth.
			</summary>  
			<returns>Masking mode. One of the BLEND_MASKING_MODE variables.</returns>
		</member>
		<member name="M:Unigine.Plugins.Varjo.setBlendMaskingDebugEnabled(bool)">
			<summary>
			Enables blend masking debug visualization.
			</summary> 
			<param name="enabled"> true to enable blend masking debug visualization; false to disable it. </param> 
		</member>
		<member name="M:Unigine.Plugins.Varjo.isBlendMaskingDebugEnabled const">
			<summary>
			Returns the value indicating if blend masking debug visualization is enabled.
			</summary>  
			<returns>true if blend masking debug visualization is enabled; otherwise - false.</returns>
		</member>
		<member name="F:Unigine.Plugins.Varjo.VIEWPORT_BLACK_SCREEN">
			<summary>
			No image (black screen).
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.VIEWPORT_MONO">
			<summary>
			Mono image.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.VIEWPORT_STEREO">
			<summary>
			Stereo image (left and right eye).
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.DEVICE_INVALID">
			<summary>
			A tracked device with an invalid index.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.DEVICE_HMD">
			<summary>
			A tracked head-mounted display.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.DEVICE_CONTROLLER">
			<summary>
			A tracked controller.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.DEVICE_GENERIC_TRACKER">
			<summary>
			A tracked tracker device.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.DEVICE_TRACKING">
			<summary>
			A tracked camera and base stations that serve as tracking reference points.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.AXIS_NONE">
			<summary>
			No axis is identified on the controller.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.AXIS_TRACKPAD">
			<summary>
			An axis of a trackpad type.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.AXIS_JOYSTICK">
			<summary>
			An axis of a joystick type.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.AXIS_TRIGGER">
			<summary>
			An axis of a trigger type.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.BUTTON_SYSTEM">
			<summary>
			The system button. These events are not visible to applications and are used internally to bring up the Steam Overlay or the Steam Client.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.BUTTON_APPLICATIONMENU">
			<summary>
			The application menu button.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.BUTTON_GRIP">
			<summary>
			The grip button.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.BUTTON_DPAD_LEFT">
			<summary>
			The sensor panel left button.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.BUTTON_DPAD_UP">
			<summary>
			The sensor panel up button.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.BUTTON_DPAD_RIGHT">
			<summary>
			The sensor panel right button.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.BUTTON_DPAD_DOWN">
			<summary>
			The sensor panel down button.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.BUTTON_A">
			<summary>
			The button reserved for manual controllers.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.BUTTON_AXIS0">
			<summary>
			The axis reserved for manual controllers.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.BUTTON_AXIS1">
			<summary>
			The axis reserved for manual controllers.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.BUTTON_AXIS2">
			<summary>
			The axis reserved for manual controllers.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.BUTTON_AXIS3">
			<summary>
			The axis reserved for manual controllers.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.BUTTON_AXIS4">
			<summary>
			The axis reserved for manual controllers.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.BUTTON_STEAMVR_TOUCHPAD">
			<summary>
			The touchpad on the SteamVR controller. It is the same as BUTTON_AXIS0.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.BUTTON_STEAMVR_TRIGGER">
			<summary>
			The trigger on the SteamVR controller. It is the same as BUTTON_AXIS1.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.BUTTON_DASHBOARD_BACK">
			<summary>
			The back to dashboard button.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.BUTTON_MAX">
			<summary>
			This is not an actual button. It just indicates the maximum number of buttons in the system.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.EYETRACKING_STATUS_INVALID">
			<summary>
			Data is not available, user is not wearing the device or eyes cannot be found.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.EYETRACKING_STATUS_ADJUST">
			<summary>
			User is wearing the device, but gaze tracking is being calibrated.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.EYETRACKING_STATUS_VALID">
			<summary>
			Data is valid.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.EYE_STATUS_INVALID">
			<summary>
			Eye is not tracked and not visible (for example, eye is shut).
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.EYE_STATUS_VISIBLE">
			<summary>
			Eye is visible but not reliably tracked (for example, saccade or blink).
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.EYE_STATUS_COMPENSATED">
			<summary>
			Eye is tracked but quality compromised (for example, headset has moved after calibration).
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.EYE_STATUS_TRACKED">
			<summary>
			Eye is tracked.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.CONTROLLER_ROLE_INVALID">
			<summary>
			Invalid value for controller type.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.CONTROLLER_ROLE_LEFT_HAND">
			<summary>
			Tracked device is associated with the left hand.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.CONTROLLER_ROLE_RIGHT_HAND">
			<summary>
			Tracked device is associated with the right hand.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.CONTROLLER_ROLE_OPT_OUT">
			<summary>
			Tracked device is opting out of left/right hand.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.CONTROLLER_ROLE_TREADMILL">
			<summary>
			Tracked device is a treadmill.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.CONTROLLER_ROLE_MAX">
			<summary>
			Indicates the maximum number of controller roles.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.CHROMAKEY_TYPE_DISABLED">
			<summary>
			Disabled chroma key config.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.CHROMAKEY_TYPE_HSV">
			<summary>
			HSV chroma key config.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.MARKER_POSE_FLAGS_TRACING_OK">
			<summary>
			Pose is being currently tracked.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.MARKER_POSE_FLAGS_TRACING_LOST">
			<summary>
			Pose has been tracked but currently is not detected by the tracking subsystem.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.MARKER_POSE_FLAGS_TRACING_DISCONNECTED">
			<summary>
			Tracking subsystem is not connected and poses cannot be acquired.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.MARKER_POSE_FLAGS_HAS_POSITION">
			<summary>
			Pose has position information.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.MARKER_POSE_FLAGS_HAS_ROTATION">
			<summary>
			Pose has rotation information.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.MARKER_POSE_FLAGS_HAS_VELOCITY">
			<summary>
			Pose has velocity information.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.MARKER_POSE_FLAGS_HAS_ANGULAR_VELOCITY">
			<summary>
			Pose has angular velocity information.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.MARKER_POSE_FLAGS_HAS_ACCELERATION">
			<summary>
			Pose has acceleration information.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.MARKER_POSE_FLAGS_HAS_CONFIDENCE">
			<summary>
			Pose has confidence information.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.MARKER_FLAGS_DO_PREDICTION">
			<summary>
			Marker pose is predicted. If not specified, the latest detected pose is used.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.ENVIRONMENT_MODE_PRESET">
			<summary>
			Environment mode that sets the cubemap defining the color for the environment preset that retains the sky color, haze, etc.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.ENVIRONMENT_MODE_OVERLAP">
			<summary>
			Environment mode that sets the environment texture substituting the sky.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.HMD_TYPE_VR_1">
			<summary>
			Varjo VR-1 head-mounted display.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.HMD_TYPE_XR_1">
			<summary>
			Varjo XR-1 head-mounted display.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.HMD_TYPE_VR_2">
			<summary>
			Varjo VR-2 head-mounted display.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.HMD_TYPE_VR_2_PRO">
			<summary>
			Varjo VR-2 Pro head-mounted display.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.HMD_TYPE_VR_3">
			<summary>
			Varjo VR-3 head-mounted display.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.HMD_TYPE_XR_3">
			<summary>
			Varjo XR-3 head-mounted display.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.HMD_TYPE_AERO">
			<summary>
			Varjo Aero head-mounted display.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.HMD_TYPE_UNKNOWN">
			<summary>
			Unknown head-mounted display.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.BLEND_MASKING_MODE_DISABLED">
			<summary>
			Masking mode is disabled.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.BLEND_MASKING_MODE_RESTRICT_VIDEO_TO_MASK">
			<summary>
			Show the video pass-through image (VST) in the mask. Can be used with chroma key.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.BLEND_MASKING_MODE_RESTRICT_VR_TO_MASK">
			<summary>
			Show VR in the mask. Can be used with chroma key.
		</summary>
		</member>
		<member name="F:Unigine.Plugins.Varjo.BLEND_MASKING_MODE_RESTRICT_VR_TO_CHROMAKEY_REDUCED_BY_MASK">
			<summary>
			SShow VR in the mask and chroma elsewhere. Requires chroma key.
		</summary>
		</member>
	</members>
</doc>
<?xml version='1.0'?>
<doc>
	<assembly>
		<name>Unigine</name>
	</assembly>
	<members>
		<member name="M:Unigine.Math.svec4.#ctor">
			<summary>
			Default constructor. Produces a zero vector.
			</summary>  
		</member>
		<member name="M:Unigine.Math.svec4.#ctor(svec4)">
			<summary>
			Constructor. Initializes the vector by copying a given source vector.
			</summary> 
			<param name="v"> Source vector. </param> 
		</member>
		<member name="M:Unigine.Math.svec4.#ctor(unsignedshort,unsignedshort,unsignedshort,unsignedshort)">
			<summary>
			Constructor. Initializes the vector using given unsigned short values.
			</summary> 
			<param name="x"> X component of the vector. </param>
			<param name="y"> Y component of the vector. </param>
			<param name="z"> Z component of the vector. </param>
			<param name="w"> W component of the vector. </param> 
		</member>
		<member name="M:Unigine.Math.svec4.#ctor(Unigine.vec4,float)">
			<summary>
			Constructor. Initializes the vector using a given vec4 source vector and a scale multiplier.
			</summary> 
			<param name="v"> Source vector. </param>
			<param name="scale"> Scale. </param> 
		</member>
		<member name="M:Unigine.Math.svec4.#ctor(unsignedshort)">
			<summary>
			Constructor. Initializes the vector using a given value: x=v, y=v, z=v, w=v.
			</summary> 
			<param name="v"> Source value. </param> 
		</member>
		<member name="M:Unigine.Math.svec4.#ctor(unsignedshort)">
			<summary>
			Constructor. Initializes the vector using a given pointer to the array of unsigned short elements: x=v[0], y=v[1], z=v[2], w=v[3].
			</summary> 
			<param name="v"> Pointer to the array of unsigned short elements. </param> 
		</member>
		<member name="M:Unigine.Math.svec4.#ctor(Unigine.dvec4)">
			<summary>
			Constructor. Initializes the vector using a given dvec4 source vector.
			</summary> 
			<param name="v"> Source vector. </param> 
		</member>
		<member name="M:Unigine.Math.svec4.#ctor(Unigine.ivec4)">
			<summary>
			Constructor. Initializes the vector using a given ivec4 source vector.
			</summary> 
			<param name="v"> Source vector. </param> 
		</member>
		<member name="M:Unigine.Math.svec4.#ctor(Unigine.vec4)">
			<summary>
			Constructor. Initializes the vector using a given vec4 source vector.
			</summary> 
			<param name="v"> Source vector. </param> 
		</member>
		<member name="M:Unigine.Math.svec4.set(unsignedshort)">
			<summary>
			Sets the vector components equal to specified value: x=val, y=val, z=val, w=val.
			</summary> 
			<param name="val"> Value. </param> 
		</member>
		<member name="M:Unigine.Math.svec4.set(unsignedshort,unsignedshort,unsignedshort,unsignedshort)">
			<summary>
			Sets the vector by components.
			</summary> 
			<param name="x_"> X component of the vector. </param>
			<param name="y_"> Y component of the vector. </param>
			<param name="z_"> Z component of the vector. </param>
			<param name="w_"> W component of the vector. </param> 
		</member>
		<member name="M:Unigine.Math.svec4.set(svec4)">
			<summary>
			Sets the vector equal to the specified vector.
			</summary> 
			<param name="val"> Source vector. </param> 
		</member>
		<member name="M:Unigine.Math.svec4.set(unsignedshort)">
			<summary>
			Sets the vector using the array of unsigned short elements: x=val[0], y=val[1], z=val[2], w=val[3].
			</summary> 
			<param name="val"> Pointer to the array of unsigned short elements. </param> 
		</member>
		<member name="M:Unigine.Math.svec4.set(Unigine.vec4,float)">
			<summary>
			Sets the vector using a given vec4 vector and a scale multiplier.
			</summary> 
			<param name="val"> Source vector. </param>
			<param name="scale"> Scale. </param> 
		</member>
		<member name="M:Unigine.Math.svec4.get">
			<summary>
			Returns the pointer to the vector.
			</summary>  
			<returns>Pointer to the vector.</returns>
		</member>
		<member name="M:Unigine.Math.svec4.get const">
			<summary>
			Returns the constant pointer to the vector.
			</summary>  
			<returns>Pointer to the vector.</returns>
		</member>
		<member name="M:Unigine.Math.svec4.get(unsignedshort) const">
			<summary>
			Sets the array of unsigned short values equal to the vector.
			</summary> 
			<param name="val"> The vector to be set. </param> 
		</member>
		<member name="M:Unigine.Math.svec4.operator=(svec4)">
			<summary>
			Performs vector assignment. Destination vector = Source vector.
			</summary> 
			<param name="val"> Source vector. </param> 
			<returns>Result.</returns>
		</member>
		<member name="M:Unigine.Math.svec4.operator const unsigned short * const">
			<summary>
			Performs type conversion to const unsigned short *.
			</summary>  
		</member>
		<member name="M:Unigine.Math.svec4.operator void *">
			<summary>
			Performs type conversion to void *.
			</summary>  
		</member>
		<member name="M:Unigine.Math.svec4.operator const void * const">
			<summary>
			Performs type conversion to const void *.
			</summary>  
		</member>
		<member name="M:Unigine.Math.svec4.operator unsigned short *">
			<summary>
			Performs type conversion to unsigned short *.
			</summary>  
		</member>
		<member name="M:Unigine.Math.svec4.operator[](int) const">
			<summary>
			Performs array access to the vector item reference by using given item index.
			</summary> 
			<param name="i"> Vector item index. </param> 
			<returns>Vector item reference.</returns>
		</member>
		<member name="M:Unigine.Math.svec4.operator[](int)">
			<summary>
			Performs array access to the vector item by using given item index.
			</summary> 
			<param name="i"> Vector item index. </param> 
			<returns>Vector item.</returns>
		</member>
		<member name="F:Unigine.Math.svec4.svec4_one">
			<summary>
			Vector filled with ones (65535).
		</summary>
		</member>
		<member name="F:Unigine.Math.svec4.svec4_zero">
			<summary>
			Vector filled with zeros (0).
		</summary>
		</member>
	</members>
</doc>